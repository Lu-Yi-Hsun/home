
ddf.c,214
ddf.c1,0
image get_image_from_stream(CvCapture *cap);get_image_from_stream9,120
void demo_art(char *cfgfile, char *weightfile, int cam_index)demo_art13,169
void run_art(int argc, char **argv)run_art68,1486

/usr/include/stdc-predef.h,419
stdc-predef.h1,0
#define	_STDC_PREDEF_H	_STDC_PREDEF_H19,812
#  define __STDC_IEC_559__	__STDC_IEC_559__38,1715
# define __STDC_IEC_559__	__STDC_IEC_559__41,1759
#  define __STDC_IEC_559_COMPLEX__	__STDC_IEC_559_COMPLEX__46,1856
# define __STDC_IEC_559_COMPLEX__	__STDC_IEC_559_COMPLEX__49,1907
#define __STDC_ISO_10646__	__STDC_ISO_10646__58,2245
#define __STDC_NO_THREADS__	__STDC_NO_THREADS__61,2324

/usr/include/opencv2/highgui/highgui_c.h,4909
highgui_c.h1,0
#define OPENCV_HIGHGUI_HOPENCV_HIGHGUI_H43,2112
enum {  CV_FONT_LIGHT           = 25,//QFont::Light,CV_FONT_LIGHT68,2775
        CV_FONT_NORMAL          = 50,//QFont::Normal,CV_FONT_NORMAL69,2828
        CV_FONT_DEMIBOLD        = 63,//QFont::DemiBold,CV_FONT_DEMIBOLD70,2882
        CV_FONT_BOLD            = 75,//QFont::Bold,CV_FONT_BOLD71,2938
        CV_FONT_BLACK           = 87 //QFont::BlackCV_FONT_BLACK72,2990
enum {  CV_STYLE_NORMAL         = 0,//QFont::StyleNormal,CV_STYLE_NORMAL75,3046
        CV_STYLE_ITALIC         = 1,//QFont::StyleItalic,CV_STYLE_ITALIC76,3104
        CV_STYLE_OBLIQUE        = 2 //QFont::StyleObliqueCV_STYLE_OBLIQUE77,3162
CVAPI(void) cvAddText(const CvArr* img, const char* text, CvPoint org, CvFont *arg2);cvAddText85,3611
typedef void (CV_CDECL *CvButtonCallback)(int state, void* userdata);CvButtonCallback95,4116
enum {CV_PUSH_BUTTON = 0, CV_CHECKBOX = 1, CV_RADIOBOX = 2};CV_PUSH_BUTTON96,4186
enum {CV_PUSH_BUTTON = 0, CV_CHECKBOX = 1, CV_RADIOBOX = 2};CV_CHECKBOX96,4186
enum {CV_PUSH_BUTTON = 0, CV_CHECKBOX = 1, CV_RADIOBOX = 2};CV_RADIOBOX96,4186
    CV_WND_PROP_FULLSCREEN = 0, //to change/get window's fullscreen propertyCV_WND_PROP_FULLSCREEN110,4768
    CV_WND_PROP_AUTOSIZE   = 1, //to change/get window's autosize propertyCV_WND_PROP_AUTOSIZE111,4845
    CV_WND_PROP_ASPECTRATIO= 2, //to change/get window's aspectratio propertyCV_WND_PROP_ASPECTRATIO112,4920
    CV_WND_PROP_OPENGL     = 3, //to change/get window's opengl supportCV_WND_PROP_OPENGL113,4998
    CV_WND_PROP_VISIBLE    = 4,CV_WND_PROP_VISIBLE114,5070
    CV_WINDOW_NORMAL       = 0x00000000, //the user can resize the window (no constraint)  / also use to switch a fullscreen window to a normal sizeCV_WINDOW_NORMAL117,5177
    CV_WINDOW_AUTOSIZE     = 0x00000001, //the user cannot resize the window, the size is constrainted by the image displayedCV_WINDOW_AUTOSIZE118,5326
    CV_WINDOW_OPENGL       = 0x00001000, //window with opengl supportCV_WINDOW_OPENGL119,5452
    CV_GUI_EXPANDED         = 0x00000000, //status bar and tool barCV_GUI_EXPANDED122,5557
    CV_GUI_NORMAL           = 0x00000010, //old fashious wayCV_GUI_NORMAL123,5625
    CV_WINDOW_FULLSCREEN   = 1,//change the window to fullscreenCV_WINDOW_FULLSCREEN126,5761
    CV_WINDOW_FREERATIO    = 0x00000100,//the image expends as much as it can (no ratio constraint)CV_WINDOW_FREERATIO127,5826
    CV_WINDOW_KEEPRATIO    = 0x00000000//the ration image is respected.CV_WINDOW_KEEPRATIO128,5926
typedef void (CV_CDECL *CvTrackbarCallback)(int pos);CvTrackbarCallback161,7128
typedef void (CV_CDECL *CvTrackbarCallback2)(int pos, void* userdata);CvTrackbarCallback2167,7439
    CV_EVENT_MOUSEMOVE      =0,CV_EVENT_MOUSEMOVE181,8151
    CV_EVENT_LBUTTONDOWN    =1,CV_EVENT_LBUTTONDOWN182,8183
    CV_EVENT_RBUTTONDOWN    =2,CV_EVENT_RBUTTONDOWN183,8215
    CV_EVENT_MBUTTONDOWN    =3,CV_EVENT_MBUTTONDOWN184,8247
    CV_EVENT_LBUTTONUP      =4,CV_EVENT_LBUTTONUP185,8279
    CV_EVENT_RBUTTONUP      =5,CV_EVENT_RBUTTONUP186,8311
    CV_EVENT_MBUTTONUP      =6,CV_EVENT_MBUTTONUP187,8343
    CV_EVENT_LBUTTONDBLCLK  =7,CV_EVENT_LBUTTONDBLCLK188,8375
    CV_EVENT_RBUTTONDBLCLK  =8,CV_EVENT_RBUTTONDBLCLK189,8407
    CV_EVENT_MBUTTONDBLCLK  =9,CV_EVENT_MBUTTONDBLCLK190,8439
    CV_EVENT_MOUSEWHEEL     =10,CV_EVENT_MOUSEWHEEL191,8471
    CV_EVENT_MOUSEHWHEEL    =11CV_EVENT_MOUSEHWHEEL192,8504
    CV_EVENT_FLAG_LBUTTON   =1,CV_EVENT_FLAG_LBUTTON197,8547
    CV_EVENT_FLAG_RBUTTON   =2,CV_EVENT_FLAG_RBUTTON198,8579
    CV_EVENT_FLAG_MBUTTON   =4,CV_EVENT_FLAG_MBUTTON199,8611
    CV_EVENT_FLAG_CTRLKEY   =8,CV_EVENT_FLAG_CTRLKEY200,8643
    CV_EVENT_FLAG_SHIFTKEY  =16,CV_EVENT_FLAG_SHIFTKEY201,8675
    CV_EVENT_FLAG_ALTKEY    =32CV_EVENT_FLAG_ALTKEY202,8708
#define CV_GET_WHEEL_DELTA(CV_GET_WHEEL_DELTA206,8745
typedef void (CV_CDECL *CvMouseCallback )(int event, int x, int y, int flags, void* param);CvMouseCallback208,8831
typedef void (CV_CDECL *CvOpenGlDrawCallback)(void* userdata);CvOpenGlDrawCallback219,9252
#define cvAddSearchPath(cvAddSearchPath231,9829
#define cvvInitSystem cvvInitSystem232,9859
#define cvvNamedWindow cvvNamedWindow233,9894
#define cvvShowImage cvvShowImage234,9931
#define cvvResizeWindow cvvResizeWindow235,9964
#define cvvDestroyWindow cvvDestroyWindow236,10003
#define cvvCreateTrackbar cvvCreateTrackbar237,10044
#define cvvAddSearchPath cvvAddSearchPath238,10087
#define cvvWaitKey(cvvWaitKey239,10128
#define cvvWaitKeyEx(cvvWaitKeyEx240,10166
#define HG_AUTOSIZE HG_AUTOSIZE241,10216
#define set_preprocess_func set_preprocess_func242,10255
#define set_postprocess_func set_postprocess_func243,10308
#define cvSetPreprocessFuncWin32(cvSetPreprocessFuncWin32249,10507
#define cvSetPostprocessFuncWin32(cvSetPostprocessFuncWin32250,10601

/usr/include/opencv2/core/core_c.h,15264
core_c.h1,0
#define OPENCV_CORE_C_HOPENCV_CORE_C_H46,2244
CVAPI(void*)  cvAlloc( size_t size );size80,3299
#define cvFree(cvFree89,3633
CVAPI(void)  cvReleaseImageHeader( IplImage** image );image140,5509
CVAPI(void)  cvReleaseImage( IplImage** image );image154,5823
CVAPI(IplImage*) cvCloneImage( const IplImage* image );image157,5931
CVAPI(int)  cvGetImageCOI( const IplImage* image );image177,6840
CVAPI(void)  cvResetImageROI( IplImage* image );image201,7790
CVAPI(CvMat*)  cvCreateMatHeader( int rows, int cols, int type );cvCreateMatHeader218,8461
#define CV_AUTOSTEP CV_AUTOSTEP220,8528
CVAPI(void)  cvReleaseMat( CvMat** mat );mat285,10958
CV_INLINE  void  cvDecRefData( CvArr* arr )cvDecRefData298,11626
CV_INLINE  int  cvIncRefData( CvArr* arr )cvIncRefData324,12400
CVAPI(CvMat*) cvCloneMat( const CvMat* mat );mat344,12879
#define cvGetSubArr cvGetSubArr358,13533
CV_INLINE  CvMat*  cvGetRow( const CvArr* arr, CvMat* submat, int row )cvGetRow380,14485
CV_INLINE  CvMat*  cvGetCol( const CvArr* arr, CvMat* submat, int col )cvGetCol406,15496
CV_INLINE  void  cvReleaseMatND( CvMatND** mat )cvReleaseMatND475,18262
CVAPI(CvMatND*) cvCloneMatND( const CvMatND* mat );mat481,18407
CVAPI(void)  cvReleaseSparseMat( CvSparseMat** mat );mat499,19152
CVAPI(CvSparseMat*) cvCloneSparseMat( const CvSparseMat* mat );mat502,19273
CV_INLINE CvSparseNode* cvGetNextSparseNode( CvSparseMatIterator* mat_iterator )cvGetNextSparseNode542,20715
#define CV_MAX_ARR CV_MAX_ARR563,21292
typedef struct CvNArrayIteratorCvNArrayIterator566,21381
    int count; /**< number of arrays */count568,21415
    int count; /**< number of arrays */CvNArrayIterator::count568,21415
    int dims; /**< number of dimensions to iterate */dims569,21455
    int dims; /**< number of dimensions to iterate */CvNArrayIterator::dims569,21455
    CvSize size; /**< maximal common linear size: { width = size, height = 1 } */size570,21509
    CvSize size; /**< maximal common linear size: { width = size, height = 1 } */CvNArrayIterator::size570,21509
    uchar* ptr[CV_MAX_ARR]; /**< pointers to the array slices */ptr571,21591
    uchar* ptr[CV_MAX_ARR]; /**< pointers to the array slices */CvNArrayIterator::ptr571,21591
    int stack[CV_MAX_DIM]; /**< for internal use */stack572,21656
    int stack[CV_MAX_DIM]; /**< for internal use */CvNArrayIterator::stack572,21656
    CvMatND* hdr[CV_MAX_ARR]; /**< pointers to the headers of thehdr573,21708
    CvMatND* hdr[CV_MAX_ARR]; /**< pointers to the headers of theCvNArrayIterator::hdr573,21708
CvNArrayIterator;CvNArrayIterator576,21840
#define CV_NO_DEPTH_CHECK CV_NO_DEPTH_CHECK578,21859
#define CV_NO_CN_CHECK CV_NO_CN_CHECK579,21891
#define CV_NO_SIZE_CHECK CV_NO_SIZE_CHECK580,21923
CVAPI(int) cvNextNArraySlice( CvNArrayIterator* array_iterator );array_iterator591,22472
CVAPI(int) cvGetElemType( const CvArr* arr );arr604,22917
CVAPI(CvScalar) cvGet2D( const CvArr* arr, int idx0, int idx1 );cvGet2D678,26237
CVAPI(CvScalar) cvGetND( const CvArr* arr, const int* idx );cvGetND685,26474
#define cvReshapeND(cvReshapeND836,33654
CVAPI(void)  cvCreateData( CvArr* arr );arr882,35708
CVAPI(void)  cvReleaseData( CvArr* arr );arr891,36004
CVAPI(void)  cvCopy( const CvArr* src, CvArr* dst,cvCopy956,38467
CVAPI(void)  cvSetZero( CvArr* arr );arr979,39448
#define cvZero cvZero980,39486
#define cvCvtScale cvCvtScale1021,41352
#define cvScale cvScale1022,41386
#define cvConvert(cvConvert1023,41418
#define cvCvtScaleAbs cvCvtScaleAbs1034,41924
CVAPI(void)  cvAdd( const CvArr* src1, const CvArr* src2, CvArr* dst,cvAdd1050,42631
CV_INLINE  void  cvSubS( const CvArr* src, CvScalar value, CvArr* dst,cvSubS1062,43153
#define cvAXPY(cvAXPY1087,44207
#define CV_CMP_EQ CV_CMP_EQ1143,46542
#define CV_CMP_GT CV_CMP_GT1144,46564
#define CV_CMP_GE CV_CMP_GE1145,46586
#define CV_CMP_LT CV_CMP_LT1146,46608
#define CV_CMP_LE CV_CMP_LE1147,46630
#define CV_CMP_NE CV_CMP_NE1148,46652
#define cvAbs(cvAbs1176,47727
#define  CV_CHECK_RANGE CV_CHECK_RANGE1215,49478
#define  CV_CHECK_QUIET CV_CHECK_QUIET1216,49507
#define cvCheckArray cvCheckArray1223,49936
#define CV_RAND_UNI CV_RAND_UNI1225,49969
#define CV_RAND_NORMAL CV_RAND_NORMAL1226,49996
#define CV_SORT_EVERY_ROW CV_SORT_EVERY_ROW1250,51160
#define CV_SORT_EVERY_COLUMN CV_SORT_EVERY_COLUMN1251,51188
#define CV_SORT_ASCENDING CV_SORT_ASCENDING1252,51219
#define CV_SORT_DESCENDING CV_SORT_DESCENDING1253,51247
#define cvMatMulAdd(cvMatMulAdd1283,52757
#define cvMatMul(cvMatMul1284,52853
#define CV_GEMM_A_T CV_GEMM_A_T1286,52933
#define CV_GEMM_B_T CV_GEMM_B_T1287,52955
#define CV_GEMM_C_T CV_GEMM_C_T1288,52977
#define cvMatMulAddEx cvMatMulAddEx1294,53282
#define cvMatMulAddS cvMatMulAddS1301,53584
#define cvT cvT1314,54217
#define cvMirror cvMirror1324,54702
#define CV_SVD_MODIFY_A CV_SVD_MODIFY_A1327,54728
#define CV_SVD_U_T CV_SVD_U_T1328,54756
#define CV_SVD_V_T CV_SVD_V_T1329,54784
#define CV_LU CV_LU1341,55278
#define CV_SVD CV_SVD1342,55295
#define CV_SVD_SYM CV_SVD_SYM1343,55312
#define CV_CHOLESKY CV_CHOLESKY1344,55333
#define CV_QR CV_QR1345,55355
#define CV_NORMAL CV_NORMAL1346,55372
#define cvInv cvInv1351,55527
CVAPI(double) cvDet( const CvArr* mat );mat1359,55833
CVAPI(void)  cvEigenVV( CvArr* mat, CvArr* evects, CvArr* evals,cvEigenVV1365,56058
#define CV_COVAR_SCRAMBLED CV_COVAR_SCRAMBLED1387,56930
#define CV_COVAR_NORMAL CV_COVAR_NORMAL1390,57049
#define CV_COVAR_USE_AVG CV_COVAR_USE_AVG1394,57239
#define CV_COVAR_SCALE CV_COVAR_SCALE1397,57370
#define CV_COVAR_ROWS CV_COVAR_ROWS1400,57500
#define CV_COVAR_COLS CV_COVAR_COLS1403,57633
#define CV_PCA_DATA_AS_ROW CV_PCA_DATA_AS_ROW1413,57906
#define CV_PCA_DATA_AS_COL CV_PCA_DATA_AS_COL1414,57935
#define CV_PCA_USE_AVG CV_PCA_USE_AVG1415,57964
#define cvMahalonobis cvMahalonobis1427,58535
CVAPI(int)  cvCountNonZero( const CvArr* arr );cvCountNonZero1437,58971
CVAPI(void)  cvAvgSdv( const CvArr* arr, CvScalar* mean, CvScalar* std_dev,cvAvgSdv1443,59210
#define CV_C CV_C1456,59748
#define CV_L1 CV_L11457,59774
#define CV_L2 CV_L21458,59800
#define CV_NORM_MASK CV_NORM_MASK1459,59826
#define CV_RELATIVE CV_RELATIVE1460,59852
#define CV_DIFF CV_DIFF1461,59878
#define CV_MINMAX CV_MINMAX1462,59905
#define CV_DIFF_C CV_DIFF_C1464,59933
#define CV_DIFF_L1 CV_DIFF_L11465,59974
#define CV_DIFF_L2 CV_DIFF_L21466,60016
#define CV_RELATIVE_C CV_RELATIVE_C1467,60058
#define CV_RELATIVE_L1 CV_RELATIVE_L11468,60103
#define CV_RELATIVE_L2 CV_RELATIVE_L21469,60149
#define CV_REDUCE_SUM CV_REDUCE_SUM1489,60891
#define CV_REDUCE_AVG CV_REDUCE_AVG1490,60915
#define CV_REDUCE_MAX CV_REDUCE_MAX1491,60939
#define CV_REDUCE_MIN CV_REDUCE_MIN1492,60963
#define CV_DXT_FORWARD CV_DXT_FORWARD1507,61541
#define CV_DXT_INVERSE CV_DXT_INVERSE1508,61567
#define CV_DXT_SCALE CV_DXT_SCALE1509,61593
#define CV_DXT_INV_SCALE CV_DXT_INV_SCALE1510,61658
#define CV_DXT_INVERSE_SCALE CV_DXT_INVERSE_SCALE1511,61715
#define CV_DXT_ROWS CV_DXT_ROWS1512,61761
#define CV_DXT_MUL_CONJ CV_DXT_MUL_CONJ1513,61827
#define cvFFT cvFFT1524,62170
CVAPI(CvMemStorage*)  cvCreateChildMemStorage( CvMemStorage* parent );parent1555,63336
CVAPI(void)  cvReleaseMemStorage( CvMemStorage** storage );storage1560,63578
CVAPI(void)  cvClearMemStorage( CvMemStorage* storage );storage1567,63904
CVAPI(CvSeq*)  cvCreateSeq( int seq_flags, size_t header_size,cvCreateSeq1583,64642
#define CV_FRONT CV_FRONT1607,65540
#define CV_BACK CV_BACK1608,65559
CVAPI(void)  cvClearSeq( CvSeq* seq );seq1629,66489
CVAPI(CvSeq*)  cvEndWriteSeq( CvSeqWriter* writer );writer1655,67583
CVAPI(void)   cvFlushSeqWriter( CvSeqWriter* writer );writer1660,67776
CVAPI(int)  cvGetSeqReaderPos( CvSeqReader* reader );reader1670,68141
CV_INLINE CvSeq* cvCloneSeq( const CvSeq* seq, CvMemStorage* storage CV_DEFAULT(NULL))cvCloneSeq1694,69281
typedef int (CV_CDECL* CvCmpFunc)(const void* a, const void* b, void* userdata );CvCmpFunc1706,69698
CVAPI(void) cvSeqInvert( CvSeq* seq );seq1717,70222
CVAPI(void)  cvCreateSeqBlock( CvSeqWriter* writer );writer1725,70621
CV_INLINE  CvSetElem* cvSetNew( CvSet* set_header )cvSetNew1737,71068
CV_INLINE  void cvSetRemoveByPtr( CvSet* set_header, void* elem )cvSetRemoveByPtr1752,71458
CV_INLINE CvSetElem* cvGetSetElem( const CvSet* set_header, int idx )cvGetSetElem1767,72075
CVAPI(void)  cvClearSet( CvSet* set_header );set_header1774,72332
#define cvGraphFindEdge cvGraphFindEdge1815,74325
#define cvGraphFindEdgeByPtr cvGraphFindEdgeByPtr1816,74365
CVAPI(void)  cvClearGraph( CvGraph* graph );graph1819,74468
#define cvGetGraphVtx(cvGetGraphVtx1828,74763
#define cvGraphVtxIdx(cvGraphVtxIdx1831,74909
#define cvGraphEdgeIdx(cvGraphEdgeIdx1834,75041
#define cvGraphGetVtxCount(cvGraphGetVtxCount1836,75119
#define cvGraphGetEdgeCount(cvGraphGetEdgeCount1837,75179
#define  CV_GRAPH_VERTEX CV_GRAPH_VERTEX1839,75248
#define  CV_GRAPH_TREE_EDGE CV_GRAPH_TREE_EDGE1840,75282
#define  CV_GRAPH_BACK_EDGE CV_GRAPH_BACK_EDGE1841,75316
#define  CV_GRAPH_FORWARD_EDGE CV_GRAPH_FORWARD_EDGE1842,75350
#define  CV_GRAPH_CROSS_EDGE CV_GRAPH_CROSS_EDGE1843,75384
#define  CV_GRAPH_ANY_EDGE CV_GRAPH_ANY_EDGE1844,75419
#define  CV_GRAPH_NEW_TREE CV_GRAPH_NEW_TREE1845,75454
#define  CV_GRAPH_BACKTRACKING CV_GRAPH_BACKTRACKING1846,75489
#define  CV_GRAPH_OVER CV_GRAPH_OVER1847,75524
#define  CV_GRAPH_ALL_ITEMS CV_GRAPH_ALL_ITEMS1849,75560
#define  CV_GRAPH_ITEM_VISITED_FLAG CV_GRAPH_ITEM_VISITED_FLAG1852,75637
#define  CV_IS_GRAPH_VERTEX_VISITED(CV_IS_GRAPH_VERTEX_VISITED1853,75684
#define  CV_IS_GRAPH_EDGE_VISITED(CV_IS_GRAPH_EDGE_VISITED1855,75790
#define  CV_GRAPH_SEARCH_TREE_NODE_FLAG CV_GRAPH_SEARCH_TREE_NODE_FLAG1857,75897
#define  CV_GRAPH_FORWARD_EDGE_FLAG CV_GRAPH_FORWARD_EDGE_FLAG1858,75949
typedef struct CvGraphScannerCvGraphScanner1860,76002
    CvGraphVtx* vtx;       /* current graph vertex (or current edge origin) */vtx1862,76034
    CvGraphVtx* vtx;       /* current graph vertex (or current edge origin) */CvGraphScanner::vtx1862,76034
    CvGraphVtx* dst;       /* current graph edge destination vertex */dst1863,76113
    CvGraphVtx* dst;       /* current graph edge destination vertex */CvGraphScanner::dst1863,76113
    CvGraphEdge* edge;     /* current edge */edge1864,76184
    CvGraphEdge* edge;     /* current edge */CvGraphScanner::edge1864,76184
    CvGraph* graph;        /* the graph */graph1866,76231
    CvGraph* graph;        /* the graph */CvGraphScanner::graph1866,76231
    CvSeq*   stack;        /* the graph vertex stack */stack1867,76274
    CvSeq*   stack;        /* the graph vertex stack */CvGraphScanner::stack1867,76274
    int      index;        /* the lower bound of certainly visited vertices */index1868,76330
    int      index;        /* the lower bound of certainly visited vertices */CvGraphScanner::index1868,76330
    int      mask;         /* event mask */mask1869,76409
    int      mask;         /* event mask */CvGraphScanner::mask1869,76409
CvGraphScanner;CvGraphScanner1871,76455
CVAPI(void) cvReleaseGraphScanner( CvGraphScanner** scanner );scanner1879,76766
CVAPI(int)  cvNextGraphItem( CvGraphScanner* scanner );scanner1882,76860
typedef struct CvTreeNodeIteratorCvTreeNodeIterator1894,77320
    const void* node;node1896,77356
    const void* node;CvTreeNodeIterator::node1896,77356
    int level;level1897,77378
    int level;CvTreeNodeIterator::level1897,77378
    int max_level;max_level1898,77393
    int max_level;CvTreeNodeIterator::max_level1898,77393
CvTreeNodeIterator;CvTreeNodeIterator1900,77414
CVAPI(void*) cvNextTreeNode( CvTreeNodeIterator* tree_iterator );tree_iterator1904,77577
CVAPI(void*) cvPrevTreeNode( CvTreeNodeIterator* tree_iterator );tree_iterator1905,77643
#define CV_KMEANS_USE_INITIAL_LABELS CV_KMEANS_USE_INITIAL_LABELS1922,78463
typedef IplImage* (CV_STDCALL* Cv_iplCreateImageHeader)Cv_iplCreateImageHeader1935,79223
typedef void (CV_STDCALL* Cv_iplAllocateImageData)(IplImage*,int,int);Cv_iplAllocateImageData1938,79420
typedef void (CV_STDCALL* Cv_iplDeallocate)(IplImage*,int);Cv_iplDeallocate1939,79491
typedef IplROI* (CV_STDCALL* Cv_iplCreateROI)(int,int,int,int,int);Cv_iplCreateROI1940,79551
typedef IplImage* (CV_STDCALL* Cv_iplCloneImage)(const IplImage*);Cv_iplCloneImage1941,79619
#define CV_TURN_ON_IPL_COMPATIBILITY(CV_TURN_ON_IPL_COMPATIBILITY1965,80730
CVAPI(void) cvReleaseFileStorage( CvFileStorage** fs );fs2008,83047
CVAPI(void) cvEndWriteStruct( CvFileStorage* fs );fs2047,85352
CVAPI(void) cvStartNextStream( CvFileStorage* fs );fs2184,90827
CV_INLINE int cvReadInt( const CvFileNode* node, int default_value CV_DEFAULT(0) )cvReadInt2348,98906
CV_INLINE int cvReadIntByName( const CvFileStorage* fs, const CvFileNode* map,cvReadIntByName2363,99496
CV_INLINE double cvReadReal( const CvFileNode* node, double default_value CV_DEFAULT(0.) )cvReadReal2379,100357
CV_INLINE double cvReadRealByName( const CvFileStorage* fs, const CvFileNode* map,cvReadRealByName2394,100951
CV_INLINE const char* cvReadString( const CvFileNode* node,cvReadString2409,101703
CV_INLINE const char* cvReadStringByName( const CvFileStorage* fs, const CvFileNode* map,cvReadStringByName2423,102286
CV_INLINE void* cvReadByName( CvFileStorage* fs, const CvFileNode* map,cvReadByName2455,103839
CVAPI(const char*) cvGetFileNodeName( const CvFileNode* node );node2522,107056
CVAPI(void) cvRegisterType( const CvTypeInfo* info );info2532,107450
CVAPI(double) cvGetTickFrequency( void );cvGetTickFrequency2624,111488
#define CV_ErrModeLeaf CV_ErrModeLeaf2647,112260
#define CV_ErrModeParent CV_ErrModeParent2648,112326
#define CV_ErrModeSilent CV_ErrModeSilent2649,112388
typedef int (CV_CDECL *CvErrorCallback)( int status, const char* func_name,CvErrorCallback2673,113380
CVAPI(int) cvNulDevReport( int status, const char* func_name, const char* err_msg,cvNulDevReport2682,113860
#define OPENCV_ERROR(OPENCV_ERROR2693,114424
#define OPENCV_ASSERT(OPENCV_ASSERT2696,114548
#define OPENCV_CALL(OPENCV_CALL2700,114723
#define CV_FUNCNAME(CV_FUNCNAME2708,115043
#define cvFuncName cvFuncName2709,115071
#define CV_FUNCNAME(CV_FUNCNAME2711,115099
#define CV_ERROR(CV_ERROR2720,115323
#define CV_CHECK(CV_CHECK2731,115749
#define CV_CALL(CV_CALL2743,116196
#define CV_ASSERT(CV_ASSERT2751,116511
#define __CV_BEGIN__ __CV_BEGIN__2757,116810
#define __CV_END__ __CV_END__2758,116839
#define __CV_EXIT__ __CV_EXIT__2759,116887
struct CV_EXPORTS CvTypeCvType2773,117111
    CvType( const char* type_name,CvType2775,117138
    CvType( const char* type_name,CvType::CvType2775,117138
    ~CvType();~CvType2778,117315
    ~CvType();CvType::~CvType2778,117315
    CvTypeInfo* info;info2779,117330
    CvTypeInfo* info;CvType::info2779,117330
    static CvTypeInfo* first;first2781,117353
    static CvTypeInfo* first;CvType::first2781,117353
    static CvTypeInfo* last;last2782,117383
    static CvTypeInfo* last;CvType::last2782,117383

/usr/include/opencv2/core/types_c.h,55335
types_c.h1,0
#define OPENCV_CORE_TYPES_HOPENCV_CORE_TYPES_H45,2247
#  define HAVE_IPLHAVE_IPL56,2439
#  define CV_CDECL CV_CDECL69,2644
#  define CV_STDCALL CV_STDCALL70,2671
#  define CV_CDECLCV_CDECL72,2708
#  define CV_STDCALLCV_STDCALL73,2727
#    define CV_DEFAULT(CV_DEFAULT78,2796
#    define CV_DEFAULT(CV_DEFAULT80,2838
#    define CV_EXTERN_C_FUNCPTR(CV_EXTERN_C_FUNCPTR86,2932
#    define CV_EXTERN_C_FUNCPTR(CV_EXTERN_C_FUNCPTR88,3001
#  define CVAPI(CVAPI93,3077
#  define CV_IMPL CV_IMPL97,3166
typedef void CvArr;CvArr114,3659
typedef int CVStatus;CVStatus116,3680
 CV_StsOk=                       0,  /**< everything is ok                */CV_StsOk120,3738
 CV_StsBackTrace=               -1,  /**< pseudo error for back trace     */CV_StsBackTrace121,3815
 CV_StsError=                   -2,  /**< unknown /unspecified error      */CV_StsError122,3892
 CV_StsInternal=                -3,  /**< internal error (bad state)      */CV_StsInternal123,3969
 CV_StsNoMem=                   -4,  /**< insufficient memory             */CV_StsNoMem124,4046
 CV_StsBadArg=                  -5,  /**< function arg/param is bad       */CV_StsBadArg125,4123
 CV_StsBadFunc=                 -6,  /**< unsupported function            */CV_StsBadFunc126,4200
 CV_StsNoConv=                  -7,  /**< iter. didn't converge           */CV_StsNoConv127,4277
 CV_StsAutoTrace=               -8,  /**< tracing                         */CV_StsAutoTrace128,4354
 CV_HeaderIsNull=               -9,  /**< image header is NULL            */CV_HeaderIsNull129,4431
 CV_BadImageSize=              -10,  /**< image size is invalid           */CV_BadImageSize130,4508
 CV_BadOffset=                 -11,  /**< offset is invalid               */CV_BadOffset131,4585
 CV_BadDataPtr=                -12,  /**/CV_BadDataPtr132,4662
 CV_BadStep=                   -13,  /**< image step is wrong, this may happen for a non-continuous matrix */CV_BadStep133,4704
 CV_BadModelOrChSeq=           -14,  /**/CV_BadModelOrChSeq134,4814
 CV_BadNumChannels=            -15,  /**< bad number of channels, for example, some functions accept only single channel matrices */CV_BadNumChannels135,4856
 CV_BadNumChannel1U=           -16,  /**/CV_BadNumChannel1U136,4989
 CV_BadDepth=                  -17,  /**< input image depth is not supported by the function */CV_BadDepth137,5031
 CV_BadAlphaChannel=           -18,  /**/CV_BadAlphaChannel138,5127
 CV_BadOrder=                  -19,  /**< number of dimensions is out of range */CV_BadOrder139,5169
 CV_BadOrigin=                 -20,  /**< incorrect input origin               */CV_BadOrigin140,5251
 CV_BadAlign=                  -21,  /**< incorrect input align                */CV_BadAlign141,5333
 CV_BadCallBack=               -22,  /**/CV_BadCallBack142,5415
 CV_BadTileSize=               -23,  /**/CV_BadTileSize143,5457
 CV_BadCOI=                    -24,  /**< input COI is not supported           */CV_BadCOI144,5499
 CV_BadROISize=                -25,  /**< incorrect input roi                  */CV_BadROISize145,5581
 CV_MaskIsTiled=               -26,  /**/CV_MaskIsTiled146,5663
 CV_StsNullPtr=                -27,  /**< null pointer */CV_StsNullPtr147,5705
 CV_StsVecLengthErr=           -28,  /**< incorrect vector length */CV_StsVecLengthErr148,5763
 CV_StsFilterStructContentErr= -29,  /**< incorrect filter structure content */CV_StsFilterStructContentErr149,5832
 CV_StsKernelStructContentErr= -30,  /**< incorrect transform kernel content */CV_StsKernelStructContentErr150,5912
 CV_StsFilterOffsetErr=        -31,  /**< incorrect filter offset value */CV_StsFilterOffsetErr151,5992
 CV_StsBadSize=                -201, /**< the input/output structure size is incorrect  */CV_StsBadSize152,6067
 CV_StsDivByZero=              -202, /**< division by zero */CV_StsDivByZero153,6158
 CV_StsInplaceNotSupported=    -203, /**< in-place operation is not supported */CV_StsInplaceNotSupported154,6220
 CV_StsObjectNotFound=         -204, /**< request can't be completed */CV_StsObjectNotFound155,6301
 CV_StsUnmatchedFormats=       -205, /**< formats of input/output arrays differ */CV_StsUnmatchedFormats156,6373
 CV_StsBadFlag=                -206, /**< flag is wrong or not supported */CV_StsBadFlag157,6456
 CV_StsBadPoint=               -207, /**< bad CvPoint */CV_StsBadPoint158,6532
 CV_StsBadMask=                -208, /**< bad format of mask (neither 8uC1 nor 8sC1)*/CV_StsBadMask159,6589
 CV_StsUnmatchedSizes=         -209, /**< sizes of input/output structures do not match */CV_StsUnmatchedSizes160,6676
 CV_StsUnsupportedFormat=      -210, /**< the data format/type is not supported by the function*/CV_StsUnsupportedFormat161,6767
 CV_StsOutOfRange=             -211, /**< some of parameters are out of range */CV_StsOutOfRange162,6865
 CV_StsParseError=             -212, /**< invalid syntax/structure of the parsed file */CV_StsParseError163,6946
 CV_StsNotImplemented=         -213, /**< the requested function/feature is not implemented */CV_StsNotImplemented164,7035
 CV_StsBadMemBlock=            -214, /**< an allocated block has been corrupted */CV_StsBadMemBlock165,7130
 CV_StsAssert=                 -215, /**< assertion failed   */CV_StsAssert166,7213
 CV_GpuNotSupported=           -216, /**< no CUDA support    */CV_GpuNotSupported167,7277
 CV_GpuApiCallError=           -217, /**< GPU API call error */CV_GpuApiCallError168,7341
 CV_OpenGlNotSupported=        -218, /**< no OpenGL support  */CV_OpenGlNotSupported169,7405
 CV_OpenGlApiCallError=        -219, /**< OpenGL API call error */CV_OpenGlApiCallError170,7469
 CV_OpenCLApiCallError=        -220, /**< OpenCL API call error */CV_OpenCLApiCallError171,7536
 CV_OpenCLDoubleNotSupported=  -221,CV_OpenCLDoubleNotSupported172,7603
 CV_OpenCLInitError=           -222, /**< OpenCL initialization error */CV_OpenCLInitError173,7640
 CV_OpenCLNoAMDBlasFft=        -223CV_OpenCLNoAMDBlasFft174,7713
#define CV_SWAP(CV_SWAP181,8027
#define  CV_IMIN(CV_IMIN184,8116
#define  CV_IMAX(CV_IMAX186,8181
#  define  CV_IABS(CV_IABS190,8302
#  define  CV_IABS(CV_IABS192,8384
#define  CV_CMP(CV_CMP194,8424
#define  CV_SIGN(CV_SIGN195,8476
#define cvInvSqrt(cvInvSqrt197,8515
#define cvSqrt(cvSqrt198,8566
typedef uint64 CvRNG;CvRNG203,8676
#define CV_RNG_COEFF CV_RNG_COEFF205,8699
CV_INLINE unsigned cvRandInt( CvRNG* rng )cvRandInt228,9641
CV_INLINE double cvRandReal( CvRNG* rng )cvRandReal242,10045
#define IPL_DEPTH_SIGN IPL_DEPTH_SIGN258,10579
#define IPL_DEPTH_1U IPL_DEPTH_1U260,10614
#define IPL_DEPTH_8U IPL_DEPTH_8U261,10641
#define IPL_DEPTH_16U IPL_DEPTH_16U262,10668
#define IPL_DEPTH_32F IPL_DEPTH_32F263,10695
#define IPL_DEPTH_8S IPL_DEPTH_8S265,10723
#define IPL_DEPTH_16S IPL_DEPTH_16S266,10765
#define IPL_DEPTH_32S IPL_DEPTH_32S267,10807
#define IPL_DATA_ORDER_PIXEL IPL_DATA_ORDER_PIXEL269,10850
#define IPL_DATA_ORDER_PLANE IPL_DATA_ORDER_PLANE270,10882
#define IPL_ORIGIN_TL IPL_ORIGIN_TL272,10915
#define IPL_ORIGIN_BL IPL_ORIGIN_BL273,10939
#define IPL_ALIGN_4BYTES IPL_ALIGN_4BYTES275,10964
#define IPL_ALIGN_8BYTES IPL_ALIGN_8BYTES276,10993
#define IPL_ALIGN_16BYTES IPL_ALIGN_16BYTES277,11022
#define IPL_ALIGN_32BYTES IPL_ALIGN_32BYTES278,11051
#define IPL_ALIGN_DWORD IPL_ALIGN_DWORD280,11081
#define IPL_ALIGN_QWORD IPL_ALIGN_QWORD281,11124
#define IPL_BORDER_CONSTANT IPL_BORDER_CONSTANT283,11168
#define IPL_BORDER_REPLICATE IPL_BORDER_REPLICATE284,11200
#define IPL_BORDER_REFLECT IPL_BORDER_REFLECT285,11232
#define IPL_BORDER_WRAP IPL_BORDER_WRAP286,11264
_IplImage_IplImage300,11914
    int  nSize;             /**< sizeof(IplImage) */nSize302,11926
    int  nSize;             /**< sizeof(IplImage) */_IplImage::nSize302,11926
    int  ID;                /**< version (=0)*/ID303,11979
    int  ID;                /**< version (=0)*/_IplImage::ID303,11979
    int  nChannels;         /**< Most of OpenCV functions support 1,2,3 or 4 channels */nChannels304,12027
    int  nChannels;         /**< Most of OpenCV functions support 1,2,3 or 4 channels */_IplImage::nChannels304,12027
    int  alphaChannel;      /**< Ignored by OpenCV */alphaChannel305,12116
    int  alphaChannel;      /**< Ignored by OpenCV */_IplImage::alphaChannel305,12116
    int  depth;             /**< Pixel depth in bits: IPL_DEPTH_8U, IPL_DEPTH_8S, IPL_DEPTH_16S,depth306,12170
    int  depth;             /**< Pixel depth in bits: IPL_DEPTH_8U, IPL_DEPTH_8S, IPL_DEPTH_16S,_IplImage::depth306,12170
    char colorModel[4];     /**< Ignored by OpenCV */colorModel308,12364
    char colorModel[4];     /**< Ignored by OpenCV */_IplImage::colorModel308,12364
    char channelSeq[4];     /**< ditto */channelSeq309,12418
    char channelSeq[4];     /**< ditto */_IplImage::channelSeq309,12418
    int  dataOrder;         /**< 0 - interleaved color channels, 1 - separate color channels.dataOrder310,12460
    int  dataOrder;         /**< 0 - interleaved color channels, 1 - separate color channels._IplImage::dataOrder310,12460
    int  origin;            /**< 0 - top-left origin,origin312,12637
    int  origin;            /**< 0 - top-left origin,_IplImage::origin312,12637
    int  align;             /**< Alignment of image rows (4 or 8).align314,12774
    int  align;             /**< Alignment of image rows (4 or 8)._IplImage::align314,12774
    int  width;             /**< Image width in pixels.                           */width316,12924
    int  width;             /**< Image width in pixels.                           */_IplImage::width316,12924
    int  height;            /**< Image height in pixels.                          */height317,13009
    int  height;            /**< Image height in pixels.                          */_IplImage::height317,13009
    struct _IplROI *roi;    /**< Image ROI. If NULL, the whole image is selected. */roi318,13094
    struct _IplROI *roi;    /**< Image ROI. If NULL, the whole image is selected. */_IplImage::roi318,13094
    struct _IplImage *maskROI;      /**< Must be NULL. */maskROI319,13179
    struct _IplImage *maskROI;      /**< Must be NULL. */_IplImage::maskROI319,13179
    void  *imageId;                 /**< "           " */imageId320,13237
    void  *imageId;                 /**< "           " */_IplImage::imageId320,13237
    struct _IplTileInfo *tileInfo;  /**< "           " */tileInfo321,13295
    struct _IplTileInfo *tileInfo;  /**< "           " */_IplImage::tileInfo321,13295
    int  imageSize;         /**< Image data size in bytesimageSize322,13353
    int  imageSize;         /**< Image data size in bytes_IplImage::imageSize322,13353
    char *imageData;        /**< Pointer to aligned image data.         */imageData325,13538
    char *imageData;        /**< Pointer to aligned image data.         */_IplImage::imageData325,13538
    int  widthStep;         /**< Size of aligned image row in bytes.    */widthStep326,13613
    int  widthStep;         /**< Size of aligned image row in bytes.    */_IplImage::widthStep326,13613
    int  BorderMode[4];     /**< Ignored by OpenCV.                     */BorderMode327,13688
    int  BorderMode[4];     /**< Ignored by OpenCV.                     */_IplImage::BorderMode327,13688
    int  BorderConst[4];    /**< Ditto.                                 */BorderConst328,13763
    int  BorderConst[4];    /**< Ditto.                                 */_IplImage::BorderConst328,13763
    char *imageDataOrigin;  /**< Pointer to very origin of image dataimageDataOrigin329,13838
    char *imageDataOrigin;  /**< Pointer to very origin of image data_IplImage::imageDataOrigin329,13838
    _IplImage() {}_IplImage334,14053
    _IplImage() {}_IplImage::_IplImage334,14053
    _IplImage(const cv::Mat& m);_IplImage335,14072
    _IplImage(const cv::Mat& m);_IplImage::_IplImage335,14072
IplImage;IplImage338,14114
typedef struct _IplTileInfo IplTileInfo;IplTileInfo340,14125
typedef struct _IplROI_IplROI342,14167
    int  coi; /**< 0 - no COI (all channels are selected), 1 - 0th channel is selected ...*/coi344,14192
    int  coi; /**< 0 - no COI (all channels are selected), 1 - 0th channel is selected ...*/_IplROI::coi344,14192
    int  xOffset;xOffset345,14285
    int  xOffset;_IplROI::xOffset345,14285
    int  yOffset;yOffset346,14303
    int  yOffset;_IplROI::yOffset346,14303
    int  width;width347,14321
    int  width;_IplROI::width347,14321
    int  height;height348,14337
    int  height;_IplROI::height348,14337
IplROI;IplROI350,14356
typedef struct _IplConvKernel_IplConvKernel352,14365
    int  nCols;nCols354,14397
    int  nCols;_IplConvKernel::nCols354,14397
    int  nRows;nRows355,14413
    int  nRows;_IplConvKernel::nRows355,14413
    int  anchorX;anchorX356,14429
    int  anchorX;_IplConvKernel::anchorX356,14429
    int  anchorY;anchorY357,14447
    int  anchorY;_IplConvKernel::anchorY357,14447
    int *values;values358,14465
    int *values;_IplConvKernel::values358,14465
    int  nShiftR;nShiftR359,14482
    int  nShiftR;_IplConvKernel::nShiftR359,14482
IplConvKernel;IplConvKernel361,14502
typedef struct _IplConvKernelFP_IplConvKernelFP363,14518
    int  nCols;nCols365,14552
    int  nCols;_IplConvKernelFP::nCols365,14552
    int  nRows;nRows366,14568
    int  nRows;_IplConvKernelFP::nRows366,14568
    int  anchorX;anchorX367,14584
    int  anchorX;_IplConvKernelFP::anchorX367,14584
    int  anchorY;anchorY368,14602
    int  anchorY;_IplConvKernelFP::anchorY368,14602
    float *values;values369,14620
    float *values;_IplConvKernelFP::values369,14620
IplConvKernelFP;IplConvKernelFP371,14641
#define IPL_IMAGE_HEADER IPL_IMAGE_HEADER373,14659
#define IPL_IMAGE_DATA IPL_IMAGE_DATA374,14686
#define IPL_IMAGE_ROI IPL_IMAGE_ROI375,14713
#define IPL_BORDER_REFLECT_101 IPL_BORDER_REFLECT_101380,14786
#define IPL_BORDER_TRANSPARENT IPL_BORDER_TRANSPARENT381,14822
#define IPL_IMAGE_MAGIC_VAL IPL_IMAGE_MAGIC_VAL383,14859
#define CV_TYPE_NAME_IMAGE CV_TYPE_NAME_IMAGE384,14912
#define CV_IS_IMAGE_HDR(CV_IS_IMAGE_HDR386,14955
#define CV_IS_IMAGE(CV_IS_IMAGE389,15062
#define IPL_DEPTH_64F IPL_DEPTH_64F394,15229
#define CV_IMAGE_ELEM(CV_IMAGE_ELEM398,15377
#define CV_AUTO_STEP CV_AUTO_STEP405,15785
#define CV_WHOLE_ARR CV_WHOLE_ARR406,15818
#define CV_MAGIC_MASK CV_MAGIC_MASK408,15866
#define CV_MAT_MAGIC_VAL CV_MAT_MAGIC_VAL409,15905
#define CV_TYPE_NAME_MAT CV_TYPE_NAME_MAT410,15944
typedef struct CvMatCvMat423,16456
    int type;type425,16479
    int type;CvMat::type425,16479
    int step;step426,16493
    int step;CvMat::step426,16493
    int* refcount;refcount429,16540
    int* refcount;CvMat::refcount429,16540
    int hdr_refcount;hdr_refcount430,16559
    int hdr_refcount;CvMat::hdr_refcount430,16559
        uchar* ptr;ptr434,16598
        uchar* ptr;CvMat::__anon8::ptr434,16598
        short* s;s435,16618
        short* s;CvMat::__anon8::s435,16618
        int* i;i436,16636
        int* i;CvMat::__anon8::i436,16636
        float* fl;fl437,16652
        float* fl;CvMat::__anon8::fl437,16652
        double* db;db438,16671
        double* db;CvMat::__anon8::db438,16671
    } data;data439,16691
    } data;CvMat::data439,16691
        int rows;rows444,16739
        int rows;CvMat::__anon9::rows444,16739
        int height;height445,16757
        int height;CvMat::__anon9::height445,16757
        int cols;cols450,16801
        int cols;CvMat::__anon10::cols450,16801
        int width;width451,16819
        int width;CvMat::__anon10::width451,16819
    int rows;rows454,16851
    int rows;CvMat::rows454,16851
    int cols;cols455,16865
    int cols;CvMat::cols455,16865
    CvMat() {}CvMat460,16907
    CvMat() {}CvMat::CvMat460,16907
    CvMat(const CvMat& m) { memcpy(this, &m, sizeof(CvMat));}CvMat461,16922
    CvMat(const CvMat& m) { memcpy(this, &m, sizeof(CvMat));}CvMat::CvMat461,16922
    CvMat(const cv::Mat& m);CvMat462,16984
    CvMat(const cv::Mat& m);CvMat::CvMat462,16984
CvMat;CvMat466,17023
#define CV_IS_MAT_HDR(CV_IS_MAT_HDR469,17032
#define CV_IS_MAT_HDR_Z(CV_IS_MAT_HDR_Z474,17233
#define CV_IS_MAT(CV_IS_MAT479,17438
#define CV_IS_MASK_ARR(CV_IS_MASK_ARR482,17532
#define CV_ARE_TYPES_EQ(CV_ARE_TYPES_EQ485,17620
#define CV_ARE_CNS_EQ(CV_ARE_CNS_EQ488,17721
#define CV_ARE_DEPTHS_EQ(CV_ARE_DEPTHS_EQ491,17818
#define CV_ARE_SIZES_EQ(CV_ARE_SIZES_EQ494,17921
#define CV_IS_MAT_CONST(CV_IS_MAT_CONST497,18027
#define IPL2CV_DEPTH(IPL2CV_DEPTH500,18097
CV_INLINE CvMat cvMat( int rows, int cols, int type, void* data CV_DEFAULT(NULL))cvMat509,18475
inline CvMat::CvMat(const cv::Mat& m)CvMat527,18907
inline CvMat::CvMat(const cv::Mat& m)CvMat::CvMat527,18907
#define CV_MAT_ELEM_PTR_FAST(CV_MAT_ELEM_PTR_FAST537,19173
#define CV_MAT_ELEM_PTR(CV_MAT_ELEM_PTR542,19418
#define CV_MAT_ELEM(CV_MAT_ELEM545,19546
CV_INLINE  double  cvmGet( const CvMat* mat, int row, int col )cvmGet557,20137
CV_INLINE  void  cvmSet( CvMat* mat, int row, int col, double value )cvmSet584,21100
CV_INLINE int cvIplDepth( int type )cvIplDepth601,21578
#define CV_MATND_MAGIC_VAL CV_MATND_MAGIC_VAL613,22055
#define CV_TYPE_NAME_MATND CV_TYPE_NAME_MATND614,22096
#define CV_MAX_DIM CV_MAX_DIM616,22146
#define CV_MAX_DIM_HEAP CV_MAX_DIM_HEAP617,22179
CvMatNDCvMatND626,22323
    int type;type628,22333
    int type;CvMatND::type628,22333
    int dims;dims629,22347
    int dims;CvMatND::dims629,22347
    int* refcount;refcount631,22362
    int* refcount;CvMatND::refcount631,22362
    int hdr_refcount;hdr_refcount632,22381
    int hdr_refcount;CvMatND::hdr_refcount632,22381
        uchar* ptr;ptr636,22420
        uchar* ptr;CvMatND::__anon11::ptr636,22420
        float* fl;fl637,22440
        float* fl;CvMatND::__anon11::fl637,22440
        double* db;db638,22459
        double* db;CvMatND::__anon11::db638,22459
        int* i;i639,22479
        int* i;CvMatND::__anon11::i639,22479
        short* s;s640,22495
        short* s;CvMatND::__anon11::s640,22495
    } data;data641,22513
    } data;CvMatND::data641,22513
        int size;size645,22543
        int size;CvMatND::__anon12::size645,22543
        int step;step646,22561
        int step;CvMatND::__anon12::step646,22561
    dim[CV_MAX_DIM];dim648,22585
    dim[CV_MAX_DIM];CvMatND::dim648,22585
    CvMatND() {}CvMatND651,22626
    CvMatND() {}CvMatND::CvMatND651,22626
    CvMatND(const cv::Mat& m);CvMatND652,22643
    CvMatND(const cv::Mat& m);CvMatND::CvMatND652,22643
CvMatND;CvMatND655,22683
#define CV_IS_MATND_HDR(CV_IS_MATND_HDR657,22693
#define CV_IS_MATND(CV_IS_MATND660,22818
#define CV_SPARSE_MAT_MAGIC_VAL CV_SPARSE_MAT_MAGIC_VAL668,23193
#define CV_TYPE_NAME_SPARSE_MAT CV_TYPE_NAME_SPARSE_MAT669,23239
CvSparseMatCvSparseMat677,23367
    int type;type679,23381
    int type;CvSparseMat::type679,23381
    int dims;dims680,23395
    int dims;CvSparseMat::dims680,23395
    int* refcount;refcount681,23409
    int* refcount;CvSparseMat::refcount681,23409
    int hdr_refcount;hdr_refcount682,23428
    int hdr_refcount;CvSparseMat::hdr_refcount682,23428
    struct CvSet* heap;heap684,23451
    struct CvSet* heap;CvSparseMat::heap684,23451
    void** hashtable;hashtable685,23475
    void** hashtable;CvSparseMat::hashtable685,23475
    int hashsize;hashsize686,23497
    int hashsize;CvSparseMat::hashsize686,23497
    int valoffset;valoffset687,23515
    int valoffset;CvSparseMat::valoffset687,23515
    int idxoffset;idxoffset688,23534
    int idxoffset;CvSparseMat::idxoffset688,23534
    int size[CV_MAX_DIM];size689,23553
    int size[CV_MAX_DIM];CvSparseMat::size689,23553
    void copyToSparseMat(cv::SparseMat& m) const;copyToSparseMat692,23599
    void copyToSparseMat(cv::SparseMat& m) const;CvSparseMat::copyToSparseMat692,23599
CvSparseMat;CvSparseMat695,23658
    CV_EXPORTS CvSparseMat* cvCreateSparseMat(const cv::SparseMat& m);cvCreateSparseMat698,23691
#define CV_IS_SPARSE_MAT_HDR(CV_IS_SPARSE_MAT_HDR701,23770
#define CV_IS_SPARSE_MAT(CV_IS_SPARSE_MAT705,23915
typedef struct CvSparseNodeCvSparseNode710,24049
    unsigned hashval;hashval712,24079
    unsigned hashval;CvSparseNode::hashval712,24079
    struct CvSparseNode* next;next713,24101
    struct CvSparseNode* next;CvSparseNode::next713,24101
CvSparseNode;CvSparseNode715,24134
typedef struct CvSparseMatIteratorCvSparseMatIterator717,24149
    CvSparseMat* mat;mat719,24186
    CvSparseMat* mat;CvSparseMatIterator::mat719,24186
    CvSparseNode* node;node720,24208
    CvSparseNode* node;CvSparseMatIterator::node720,24208
    int curidx;curidx721,24232
    int curidx;CvSparseMatIterator::curidx721,24232
CvSparseMatIterator;CvSparseMatIterator723,24250
#define CV_NODE_VAL(CV_NODE_VAL725,24272
#define CV_NODE_IDX(CV_NODE_IDX726,24349
typedef int CvHistType;CvHistType732,24700
#define CV_HIST_MAGIC_VAL CV_HIST_MAGIC_VAL734,24725
#define CV_HIST_UNIFORM_FLAG CV_HIST_UNIFORM_FLAG735,24766
#define CV_HIST_RANGES_FLAG CV_HIST_RANGES_FLAG738,24866
#define CV_HIST_ARRAY CV_HIST_ARRAY740,24907
#define CV_HIST_SPARSE CV_HIST_SPARSE741,24939
#define CV_HIST_TREE CV_HIST_TREE742,24971
#define CV_HIST_UNIFORM CV_HIST_UNIFORM746,25110
typedef struct CvHistogramCvHistogram748,25143
    int     type;type750,25172
    int     type;CvHistogram::type750,25172
    CvArr*  bins;bins751,25190
    CvArr*  bins;CvHistogram::bins751,25190
    float   thresh[CV_MAX_DIM][2];  /**< For uniform histograms.                      */thresh752,25208
    float   thresh[CV_MAX_DIM][2];  /**< For uniform histograms.                      */CvHistogram::thresh752,25208
    float** thresh2;                /**< For non-uniform histograms.                  */thresh2753,25297
    float** thresh2;                /**< For non-uniform histograms.                  */CvHistogram::thresh2753,25297
    CvMatND mat;                    /**< Embedded matrix header for array histograms. */mat754,25386
    CvMatND mat;                    /**< Embedded matrix header for array histograms. */CvHistogram::mat754,25386
CvHistogram;CvHistogram756,25477
#define CV_IS_HIST(CV_IS_HIST758,25491
#define CV_IS_UNIFORM_HIST(CV_IS_UNIFORM_HIST763,25652
#define CV_IS_SPARSE_HIST(CV_IS_SPARSE_HIST766,25739
#define CV_HIST_HAS_RANGES(CV_HIST_HAS_RANGES769,25811
typedef struct CvRectCvRect778,26279
    int x;x780,26303
    int x;CvRect::x780,26303
    int y;y781,26314
    int y;CvRect::y781,26314
    int width;width782,26325
    int width;CvRect::width782,26325
    int height;height783,26340
    int height;CvRect::height783,26340
    CvRect(int _x = 0, int _y = 0, int w = 0, int h = 0): x(_x), y(_y), width(w), height(h) {}CvRect786,26376
    CvRect(int _x = 0, int _y = 0, int w = 0, int h = 0): x(_x), y(_y), width(w), height(h) {}CvRect::CvRect786,26376
    CvRect(const cv::Rect_<_Tp>& r): x(cv::saturate_cast<int>(r.x)), y(cv::saturate_cast<int>(r.y)), width(cv::saturate_cast<int>(r.width)), height(cv::saturate_cast<int>(r.height)) {}y788,26498
    CvRect(const cv::Rect_<_Tp>& r): x(cv::saturate_cast<int>(r.x)), y(cv::saturate_cast<int>(r.y)), width(cv::saturate_cast<int>(r.width)), height(cv::saturate_cast<int>(r.height)) {}CvRect::y788,26498
    CvRect(const cv::Rect_<_Tp>& r): x(cv::saturate_cast<int>(r.x)), y(cv::saturate_cast<int>(r.y)), width(cv::saturate_cast<int>(r.width)), height(cv::saturate_cast<int>(r.height)) {}width788,26498
    CvRect(const cv::Rect_<_Tp>& r): x(cv::saturate_cast<int>(r.x)), y(cv::saturate_cast<int>(r.y)), width(cv::saturate_cast<int>(r.width)), height(cv::saturate_cast<int>(r.height)) {}CvRect::width788,26498
    CvRect(const cv::Rect_<_Tp>& r): x(cv::saturate_cast<int>(r.x)), y(cv::saturate_cast<int>(r.y)), width(cv::saturate_cast<int>(r.width)), height(cv::saturate_cast<int>(r.height)) {}height788,26498
    CvRect(const cv::Rect_<_Tp>& r): x(cv::saturate_cast<int>(r.x)), y(cv::saturate_cast<int>(r.y)), width(cv::saturate_cast<int>(r.width)), height(cv::saturate_cast<int>(r.height)) {}CvRect::height788,26498
    operator cv::Rect_<_Tp>() const { return cv::Rect_<_Tp>((_Tp)x, (_Tp)y, (_Tp)width, (_Tp)height); }_Tp790,26710
    operator cv::Rect_<_Tp>() const { return cv::Rect_<_Tp>((_Tp)x, (_Tp)y, (_Tp)width, (_Tp)height); }CvRect::_Tp790,26710
CvRect;CvRect793,26823
CV_INLINE  CvRect  cvRect( int x, int y, int width, int height )cvRect796,26868
CV_INLINE  IplROI  cvRectToROI( CvRect rect, int coi )cvRectToROI809,27039
CV_INLINE  CvRect  cvROIToRect( IplROI roi )cvROIToRect822,27262
#define CV_TERMCRIT_ITER CV_TERMCRIT_ITER829,27474
#define CV_TERMCRIT_NUMBER CV_TERMCRIT_NUMBER830,27504
#define CV_TERMCRIT_EPS CV_TERMCRIT_EPS831,27549
typedef struct CvTermCriteriaCvTermCriteria835,27605
    int    type;  /**< may be combination oftype837,27637
    int    type;  /**< may be combination ofCvTermCriteria::type837,27637
    int    max_iter;max_iter840,27760
    int    max_iter;CvTermCriteria::max_iter840,27760
    double epsilon;epsilon841,27781
    double epsilon;CvTermCriteria::epsilon841,27781
    CvTermCriteria(int _type = 0, int _iter = 0, double _eps = 0) : type(_type), max_iter(_iter), epsilon(_eps)  {}CvTermCriteria844,27821
    CvTermCriteria(int _type = 0, int _iter = 0, double _eps = 0) : type(_type), max_iter(_iter), epsilon(_eps)  {}CvTermCriteria::CvTermCriteria844,27821
    CvTermCriteria(const cv::TermCriteria& t) : type(t.type), max_iter(t.maxCount), epsilon(t.epsilon)  {}CvTermCriteria845,27937
    CvTermCriteria(const cv::TermCriteria& t) : type(t.type), max_iter(t.maxCount), epsilon(t.epsilon)  {}CvTermCriteria::CvTermCriteria845,27937
    operator cv::TermCriteria() const { return cv::TermCriteria(type, max_iter, epsilon); }TermCriteria846,28044
    operator cv::TermCriteria() const { return cv::TermCriteria(type, max_iter, epsilon); }CvTermCriteria::cv::TermCriteria846,28044
CvTermCriteria;CvTermCriteria850,28146
CV_INLINE  CvTermCriteria  cvTermCriteria( int type, int max_iter, double epsilon )cvTermCriteria852,28163
typedef struct CvPointCvPoint866,28461
    int x;x868,28486
    int x;CvPoint::x868,28486
    int y;y869,28497
    int y;CvPoint::y869,28497
    CvPoint(int _x = 0, int _y = 0): x(_x), y(_y) {}CvPoint872,28528
    CvPoint(int _x = 0, int _y = 0): x(_x), y(_y) {}CvPoint::CvPoint872,28528
    CvPoint(const cv::Point_<_Tp>& pt): x((int)pt.x), y((int)pt.y) {}y874,28608
    CvPoint(const cv::Point_<_Tp>& pt): x((int)pt.x), y((int)pt.y) {}CvPoint::y874,28608
    operator cv::Point_<_Tp>() const { return cv::Point_<_Tp>(cv::saturate_cast<_Tp>(x), cv::saturate_cast<_Tp>(y)); }_Tp876,28705
    operator cv::Point_<_Tp>() const { return cv::Point_<_Tp>(cv::saturate_cast<_Tp>(x), cv::saturate_cast<_Tp>(y)); }CvPoint::_Tp876,28705
CvPoint;CvPoint879,28833
CV_INLINE  CvPoint  cvPoint( int x, int y )cvPoint882,28880
typedef struct CvPoint2D32fCvPoint2D32f893,28987
    float x;x895,29017
    float x;CvPoint2D32f::x895,29017
    float y;y896,29030
    float y;CvPoint2D32f::y896,29030
    CvPoint2D32f(float _x = 0, float _y = 0): x(_x), y(_y) {}CvPoint2D32f899,29063
    CvPoint2D32f(float _x = 0, float _y = 0): x(_x), y(_y) {}CvPoint2D32f::CvPoint2D32f899,29063
    CvPoint2D32f(const cv::Point_<_Tp>& pt): x((float)pt.x), y((float)pt.y) {}y901,29152
    CvPoint2D32f(const cv::Point_<_Tp>& pt): x((float)pt.x), y((float)pt.y) {}CvPoint2D32f::y901,29152
    operator cv::Point_<_Tp>() const { return cv::Point_<_Tp>(cv::saturate_cast<_Tp>(x), cv::saturate_cast<_Tp>(y)); }_Tp903,29258
    operator cv::Point_<_Tp>() const { return cv::Point_<_Tp>(cv::saturate_cast<_Tp>(x), cv::saturate_cast<_Tp>(y)); }CvPoint2D32f::_Tp903,29258
CvPoint2D32f;CvPoint2D32f906,29386
CV_INLINE  CvPoint2D32f  cvPoint2D32f( double x, double y )cvPoint2D32f909,29443
CV_INLINE  CvPoint2D32f  cvPointTo32f( CvPoint point )cvPointTo32f920,29625
CV_INLINE  CvPoint  cvPointFrom32f( CvPoint2D32f point )cvPointFrom32f926,29785
typedef struct CvPoint3D32fCvPoint3D32f936,29942
    float x;x938,29972
    float x;CvPoint3D32f::x938,29972
    float y;y939,29985
    float y;CvPoint3D32f::y939,29985
    float z;z940,29998
    float z;CvPoint3D32f::z940,29998
    CvPoint3D32f(float _x = 0, float _y = 0, float _z = 0): x(_x), y(_y), z(_z) {}CvPoint3D32f943,30031
    CvPoint3D32f(float _x = 0, float _y = 0, float _z = 0): x(_x), y(_y), z(_z) {}CvPoint3D32f::CvPoint3D32f943,30031
    CvPoint3D32f(const cv::Point3_<_Tp>& pt): x((float)pt.x), y((float)pt.y), z((float)pt.z) {}y945,30141
    CvPoint3D32f(const cv::Point3_<_Tp>& pt): x((float)pt.x), y((float)pt.y), z((float)pt.z) {}CvPoint3D32f::y945,30141
    CvPoint3D32f(const cv::Point3_<_Tp>& pt): x((float)pt.x), y((float)pt.y), z((float)pt.z) {}z945,30141
    CvPoint3D32f(const cv::Point3_<_Tp>& pt): x((float)pt.x), y((float)pt.y), z((float)pt.z) {}CvPoint3D32f::z945,30141
    operator cv::Point3_<_Tp>() const { return cv::Point3_<_Tp>(cv::saturate_cast<_Tp>(x), cv::saturate_cast<_Tp>(y), cv::saturate_cast<_Tp>(z)); }_Tp947,30264
    operator cv::Point3_<_Tp>() const { return cv::Point3_<_Tp>(cv::saturate_cast<_Tp>(x), cv::saturate_cast<_Tp>(y), cv::saturate_cast<_Tp>(z)); }CvPoint3D32f::_Tp947,30264
CvPoint3D32f;CvPoint3D32f950,30421
CV_INLINE  CvPoint3D32f  cvPoint3D32f( double x, double y, double z )cvPoint3D32f953,30478
typedef struct CvPoint2D64fCvPoint2D64f965,30650
    double x;x967,30680
    double x;CvPoint2D64f::x967,30680
    double y;y968,30694
    double y;CvPoint2D64f::y968,30694
CvPoint2D64f;CvPoint2D64f970,30710
CV_INLINE  CvPoint2D64f  cvPoint2D64f( double x, double y )cvPoint2D64f973,30766
typedef struct CvPoint3D64fCvPoint3D64f984,30894
    double x;x986,30924
    double x;CvPoint3D64f::x986,30924
    double y;y987,30938
    double y;CvPoint3D64f::y987,30938
    double z;z988,30952
    double z;CvPoint3D64f::z988,30952
CvPoint3D64f;CvPoint3D64f990,30968
CV_INLINE  CvPoint3D64f  cvPoint3D64f( double x, double y, double z )cvPoint3D64f993,31025
typedef struct CvSizeCvSize1007,31268
    int width;width1009,31292
    int width;CvSize::width1009,31292
    int height;height1010,31307
    int height;CvSize::height1010,31307
    CvSize(int w = 0, int h = 0): width(w), height(h) {}CvSize1013,31343
    CvSize(int w = 0, int h = 0): width(w), height(h) {}CvSize::CvSize1013,31343
    CvSize(const cv::Size_<_Tp>& sz): width(cv::saturate_cast<int>(sz.width)), height(cv::saturate_cast<int>(sz.height)) {}height1015,31427
    CvSize(const cv::Size_<_Tp>& sz): width(cv::saturate_cast<int>(sz.width)), height(cv::saturate_cast<int>(sz.height)) {}CvSize::height1015,31427
    operator cv::Size_<_Tp>() const { return cv::Size_<_Tp>(cv::saturate_cast<_Tp>(width), cv::saturate_cast<_Tp>(height)); }_Tp1017,31578
    operator cv::Size_<_Tp>() const { return cv::Size_<_Tp>(cv::saturate_cast<_Tp>(width), cv::saturate_cast<_Tp>(height)); }CvSize::_Tp1017,31578
CvSize;CvSize1020,31713
CV_INLINE  CvSize  cvSize( int width, int height )cvSize1023,31758
typedef struct CvSize2D32fCvSize2D32f1033,31888
    float width;width1035,31917
    float width;CvSize2D32f::width1035,31917
    float height;height1036,31934
    float height;CvSize2D32f::height1036,31934
    CvSize2D32f(float w = 0, float h = 0): width(w), height(h) {}CvSize2D32f1039,31972
    CvSize2D32f(float w = 0, float h = 0): width(w), height(h) {}CvSize2D32f::CvSize2D32f1039,31972
    CvSize2D32f(const cv::Size_<_Tp>& sz): width(cv::saturate_cast<float>(sz.width)), height(cv::saturate_cast<float>(sz.height)) {}height1041,32065
    CvSize2D32f(const cv::Size_<_Tp>& sz): width(cv::saturate_cast<float>(sz.width)), height(cv::saturate_cast<float>(sz.height)) {}CvSize2D32f::height1041,32065
    operator cv::Size_<_Tp>() const { return cv::Size_<_Tp>(cv::saturate_cast<_Tp>(width), cv::saturate_cast<_Tp>(height)); }_Tp1043,32225
    operator cv::Size_<_Tp>() const { return cv::Size_<_Tp>(cv::saturate_cast<_Tp>(width), cv::saturate_cast<_Tp>(height)); }CvSize2D32f::_Tp1043,32225
CvSize2D32f;CvSize2D32f1046,32360
CV_INLINE  CvSize2D32f  cvSize2D32f( double width, double height )cvSize2D32f1049,32415
typedef struct CvBox2DCvBox2D1061,32604
    CvPoint2D32f center;  /**< Center of the box.                          */center1063,32629
    CvPoint2D32f center;  /**< Center of the box.                          */CvBox2D::center1063,32629
    CvSize2D32f  size;    /**< Box width and length.                       */size1064,32707
    CvSize2D32f  size;    /**< Box width and length.                       */CvBox2D::size1064,32707
    float angle;          /**< Angle between the horizontal axis           */angle1065,32785
    float angle;          /**< Angle between the horizontal axis           */CvBox2D::angle1065,32785
    CvBox2D(CvPoint2D32f c = CvPoint2D32f(), CvSize2D32f s = CvSize2D32f(), float a = 0) : center(c), size(s), angle(a) {}CvBox2D1069,32961
    CvBox2D(CvPoint2D32f c = CvPoint2D32f(), CvSize2D32f s = CvSize2D32f(), float a = 0) : center(c), size(s), angle(a) {}CvBox2D::CvBox2D1069,32961
    CvBox2D(const cv::RotatedRect& rr) : center(rr.center), size(rr.size), angle(rr.angle) {}CvBox2D1070,33084
    CvBox2D(const cv::RotatedRect& rr) : center(rr.center), size(rr.size), angle(rr.angle) {}CvBox2D::CvBox2D1070,33084
    operator cv::RotatedRect() const { return cv::RotatedRect(center, size, angle); }RotatedRect1071,33178
    operator cv::RotatedRect() const { return cv::RotatedRect(center, size, angle); }CvBox2D::cv::RotatedRect1071,33178
CvBox2D;CvBox2D1074,33273
typedef struct CvLineIteratorCvLineIterator1078,33312
    uchar* ptr;ptr1081,33385
    uchar* ptr;CvLineIterator::ptr1081,33385
    int  err;err1084,33439
    int  err;CvLineIterator::err1084,33439
    int  plus_delta;plus_delta1085,33453
    int  plus_delta;CvLineIterator::plus_delta1085,33453
    int  minus_delta;minus_delta1086,33474
    int  minus_delta;CvLineIterator::minus_delta1086,33474
    int  plus_step;plus_step1087,33496
    int  plus_step;CvLineIterator::plus_step1087,33496
    int  minus_step;minus_step1088,33516
    int  minus_step;CvLineIterator::minus_step1088,33516
CvLineIterator;CvLineIterator1090,33539
#define CV_WHOLE_SEQ_END_INDEX CV_WHOLE_SEQ_END_INDEX1095,33649
#define CV_WHOLE_SEQ CV_WHOLE_SEQ1096,33691
typedef struct CvSliceCvSlice1098,33749
    int  start_index, end_index;start_index1100,33774
    int  start_index, end_index;CvSlice::start_index1100,33774
    int  start_index, end_index;end_index1100,33774
    int  start_index, end_index;CvSlice::end_index1100,33774
    CvSlice(int start = 0, int end = 0) : start_index(start), end_index(end) {}CvSlice1103,33857
    CvSlice(int start = 0, int end = 0) : start_index(start), end_index(end) {}CvSlice::CvSlice1103,33857
    CvSlice(const cv::Range& r) { *this = (r.start != INT_MIN && r.end != INT_MAX) ? CvSlice(r.start, r.end) : CvSlice(0, CV_WHOLE_SEQ_END_INDEX); }CvSlice1104,33937
    CvSlice(const cv::Range& r) { *this = (r.start != INT_MIN && r.end != INT_MAX) ? CvSlice(r.start, r.end) : CvSlice(0, CV_WHOLE_SEQ_END_INDEX); }CvSlice::CvSlice1104,33937
    operator cv::Range() const { return (start_index == 0 && end_index == CV_WHOLE_SEQ_END_INDEX ) ? cv::Range::all() : cv::Range(start_index, end_index); }Range1105,34086
    operator cv::Range() const { return (start_index == 0 && end_index == CV_WHOLE_SEQ_END_INDEX ) ? cv::Range::all() : cv::Range(start_index, end_index); }CvSlice::cv::Range1105,34086
CvSlice;CvSlice1108,34252
CV_INLINE  CvSlice  cvSlice( int start, int end )cvSlice1110,34262
typedef struct CvScalarCvScalar1124,34526
    double val[4];val1126,34552
    double val[4];CvScalar::val1126,34552
    CvScalar() {}CvScalar1129,34591
    CvScalar() {}CvScalar::CvScalar1129,34591
    CvScalar(double d0, double d1 = 0, double d2 = 0, double d3 = 0) { val[0] = d0; val[1] = d1; val[2] = d2; val[3] = d3; }CvScalar1130,34609
    CvScalar(double d0, double d1 = 0, double d2 = 0, double d3 = 0) { val[0] = d0; val[1] = d1; val[2] = d2; val[3] = d3; }CvScalar::CvScalar1130,34609
    operator cv::Scalar_<_Tp>() const { return cv::Scalar_<_Tp>(cv::saturate_cast<_Tp>(val[0]), cv::saturate_cast<_Tp>(val[1]), cv::saturate_cast<_Tp>(val[2]), cv::saturate_cast<_Tp>(val[3])); }_Tp1134,34908
    operator cv::Scalar_<_Tp>() const { return cv::Scalar_<_Tp>(cv::saturate_cast<_Tp>(val[0]), cv::saturate_cast<_Tp>(val[1]), cv::saturate_cast<_Tp>(val[2]), cv::saturate_cast<_Tp>(val[3])); }CvScalar::_Tp1134,34908
    template<typename _Tp, int cn>_Tp1135,35103
    template<typename _Tp, int cn>CvScalar::_Tp1135,35103
    CvScalar(const cv::Vec<_Tp, cn>& v)CvScalar1136,35138
    CvScalar(const cv::Vec<_Tp, cn>& v)CvScalar::CvScalar1136,35138
CvScalar;CvScalar1144,35322
CV_INLINE  CvScalar  cvScalar( double val0, double val1 CV_DEFAULT(0),cvScalar1146,35333
CV_INLINE  CvScalar  cvRealScalar( double val0 )cvRealScalar1156,35631
CV_INLINE  CvScalar  cvScalarAll( double val0123 )cvScalarAll1164,35806
typedef struct CvMemBlockCvMemBlock1180,36384
    struct CvMemBlock*  prev;prev1182,36412
    struct CvMemBlock*  prev;CvMemBlock::prev1182,36412
    struct CvMemBlock*  next;next1183,36442
    struct CvMemBlock*  next;CvMemBlock::next1183,36442
CvMemBlock;CvMemBlock1185,36474
#define CV_STORAGE_MAGIC_VAL CV_STORAGE_MAGIC_VAL1187,36487
typedef struct CvMemStorageCvMemStorage1189,36531
    int signature;signature1191,36561
    int signature;CvMemStorage::signature1191,36561
    CvMemBlock* bottom;           /**< First allocated block.                   */bottom1192,36580
    CvMemBlock* bottom;           /**< First allocated block.                   */CvMemStorage::bottom1192,36580
    CvMemBlock* top;              /**< Current memory block - top of the stack. */top1193,36663
    CvMemBlock* top;              /**< Current memory block - top of the stack. */CvMemStorage::top1193,36663
    struct  CvMemStorage* parent; /**< We get new blocks from parent as needed. */parent1194,36746
    struct  CvMemStorage* parent; /**< We get new blocks from parent as needed. */CvMemStorage::parent1194,36746
    int block_size;               /**< Block size.                              */block_size1195,36829
    int block_size;               /**< Block size.                              */CvMemStorage::block_size1195,36829
    int free_space;               /**< Remaining free space in current block.   */free_space1196,36912
    int free_space;               /**< Remaining free space in current block.   */CvMemStorage::free_space1196,36912
CvMemStorage;CvMemStorage1198,36997
#define CV_IS_STORAGE(CV_IS_STORAGE1200,37012
typedef struct CvMemStoragePosCvMemStoragePos1205,37167
    CvMemBlock* top;top1207,37200
    CvMemBlock* top;CvMemStoragePos::top1207,37200
    int free_space;free_space1208,37221
    int free_space;CvMemStoragePos::free_space1208,37221
CvMemStoragePos;CvMemStoragePos1210,37243
typedef struct CvSeqBlockCvSeqBlock1215,37354
    struct CvSeqBlock*  prev; /**< Previous sequence block.                   */prev1217,37382
    struct CvSeqBlock*  prev; /**< Previous sequence block.                   */CvSeqBlock::prev1217,37382
    struct CvSeqBlock*  next; /**< Next sequence block.                       */next1218,37463
    struct CvSeqBlock*  next; /**< Next sequence block.                       */CvSeqBlock::next1218,37463
  int    start_index;         /**< Index of the first element in the block +  */start_index1219,37544
  int    start_index;         /**< Index of the first element in the block +  */CvSeqBlock::start_index1219,37544
    int    count;             /**< Number of elements in the block.           */count1221,37706
    int    count;             /**< Number of elements in the block.           */CvSeqBlock::count1221,37706
    schar* data;              /**< Pointer to the first element of the block. */data1222,37787
    schar* data;              /**< Pointer to the first element of the block. */CvSeqBlock::data1222,37787
CvSeqBlock;CvSeqBlock1224,37870
#define CV_TREE_NODE_FIELDS(CV_TREE_NODE_FIELDS1227,37884
#define CV_SEQUENCE_FIELDS(CV_SEQUENCE_FIELDS1239,38491
typedef struct CvSeqCvSeq1250,39265
CvSeq;CvSeq1254,39315
#define CV_TYPE_NAME_SEQ CV_TYPE_NAME_SEQ1256,39323
#define CV_TYPE_NAME_SEQ_TREE CV_TYPE_NAME_SEQ_TREE1257,39378
#define CV_SET_ELEM_FIELDS(CV_SET_ELEM_FIELDS1265,39794
typedef struct CvSetElemCvSetElem1269,39912
CvSetElem;CvSetElem1273,39975
#define CV_SET_FIELDS(CV_SET_FIELDS1275,39987
typedef struct CvSetCvSet1280,40103
CvSet;CvSet1284,40148
#define CV_SET_ELEM_IDX_MASK CV_SET_ELEM_IDX_MASK1287,40157
#define CV_SET_ELEM_FREE_FLAG CV_SET_ELEM_FREE_FLAG1288,40204
#define CV_IS_SET_ELEM(CV_IS_SET_ELEM1291,40334
#define CV_GRAPH_EDGE_FIELDS(CV_GRAPH_EDGE_FIELDS1315,41297
#define CV_GRAPH_VERTEX_FIELDS(CV_GRAPH_VERTEX_FIELDS1322,41482
typedef struct CvGraphEdgeCvGraphEdge1327,41591
CvGraphEdge;CvGraphEdge1331,41649
typedef struct CvGraphVtxCvGraphVtx1333,41663
CvGraphVtx;CvGraphVtx1337,41722
typedef struct CvGraphVtx2DCvGraphVtx2D1339,41735
    CvPoint2D32f* ptr;ptr1342,41794
    CvPoint2D32f* ptr;CvGraphVtx2D::ptr1342,41794
CvGraphVtx2D;CvGraphVtx2D1344,41819
#define  CV_GRAPH_FIELDS(CV_GRAPH_FIELDS1350,41940
typedef struct CvGraphCvGraph1354,42021
CvGraph;CvGraph1358,42070
#define CV_TYPE_NAME_GRAPH CV_TYPE_NAME_GRAPH1360,42080
typedef struct CvChainCvChain1366,42225
    CvPoint  origin;origin1369,42275
    CvPoint  origin;CvChain::origin1369,42275
CvChain;CvChain1371,42298
#define CV_CONTOUR_FIELDS(CV_CONTOUR_FIELDS1373,42308
typedef struct CvContourCvContour1379,42454
CvContour;CvContour1383,42507
typedef CvContour CvPoint2DSeq;CvPoint2DSeq1385,42519
#define CV_SEQ_MAGIC_VAL CV_SEQ_MAGIC_VAL1391,42826
#define CV_IS_SEQ(CV_IS_SEQ1393,42875
#define CV_SET_MAGIC_VAL CV_SET_MAGIC_VAL1396,42985
#define CV_IS_SET(CV_IS_SET1397,43033
#define CV_SEQ_ELTYPE_BITS CV_SEQ_ELTYPE_BITS1400,43143
#define CV_SEQ_ELTYPE_MASK CV_SEQ_ELTYPE_MASK1401,43183
#define CV_SEQ_ELTYPE_POINT CV_SEQ_ELTYPE_POINT1403,43253
#define CV_SEQ_ELTYPE_CODE CV_SEQ_ELTYPE_CODE1404,43314
#define CV_SEQ_ELTYPE_GENERIC CV_SEQ_ELTYPE_GENERIC1405,43388
#define CV_SEQ_ELTYPE_PTR CV_SEQ_ELTYPE_PTR1406,43427
#define CV_SEQ_ELTYPE_PPOINT CV_SEQ_ELTYPE_PPOINT1407,43476
#define CV_SEQ_ELTYPE_INDEX CV_SEQ_ELTYPE_INDEX1408,43547
#define CV_SEQ_ELTYPE_GRAPH_EDGE CV_SEQ_ELTYPE_GRAPH_EDGE1409,43609
#define CV_SEQ_ELTYPE_GRAPH_VERTEX CV_SEQ_ELTYPE_GRAPH_VERTEX1410,43690
#define CV_SEQ_ELTYPE_TRIAN_ATR CV_SEQ_ELTYPE_TRIAN_ATR1411,43757
#define CV_SEQ_ELTYPE_CONNECTED_COMP CV_SEQ_ELTYPE_CONNECTED_COMP1412,43833
#define CV_SEQ_ELTYPE_POINT3D CV_SEQ_ELTYPE_POINT3D1413,43902
#define CV_SEQ_KIND_BITS CV_SEQ_KIND_BITS1415,43967
#define CV_SEQ_KIND_MASK CV_SEQ_KIND_MASK1416,44001
#define CV_SEQ_KIND_GENERIC CV_SEQ_KIND_GENERIC1419,44112
#define CV_SEQ_KIND_CURVE CV_SEQ_KIND_CURVE1420,44170
#define CV_SEQ_KIND_BIN_TREE CV_SEQ_KIND_BIN_TREE1421,44228
#define CV_SEQ_KIND_GRAPH CV_SEQ_KIND_GRAPH1424,44327
#define CV_SEQ_KIND_SUBDIV2D CV_SEQ_KIND_SUBDIV2D1425,44385
#define CV_SEQ_FLAG_SHIFT CV_SEQ_FLAG_SHIFT1427,44444
#define CV_SEQ_FLAG_CLOSED CV_SEQ_FLAG_CLOSED1430,44541
#define CV_SEQ_FLAG_SIMPLE CV_SEQ_FLAG_SIMPLE1431,44597
#define CV_SEQ_FLAG_CONVEX CV_SEQ_FLAG_CONVEX1432,44653
#define CV_SEQ_FLAG_HOLE CV_SEQ_FLAG_HOLE1433,44709
#define CV_GRAPH_FLAG_ORIENTED CV_GRAPH_FLAG_ORIENTED1436,44790
#define CV_GRAPH CV_GRAPH1438,44847
#define CV_ORIENTED_GRAPH CV_ORIENTED_GRAPH1439,44896
#define CV_SEQ_POINT_SET CV_SEQ_POINT_SET1442,44989
#define CV_SEQ_POINT3D_SET CV_SEQ_POINT3D_SET1443,45063
#define CV_SEQ_POLYLINE CV_SEQ_POLYLINE1444,45139
#define CV_SEQ_POLYGON CV_SEQ_POLYGON1445,45213
#define CV_SEQ_CONTOUR CV_SEQ_CONTOUR1446,45284
#define CV_SEQ_SIMPLE_POLYGON CV_SEQ_SIMPLE_POLYGON1447,45330
#define CV_SEQ_CHAIN CV_SEQ_CHAIN1450,45428
#define CV_SEQ_CHAIN_CONTOUR CV_SEQ_CHAIN_CONTOUR1451,45501
#define CV_SEQ_POLYGON_TREE CV_SEQ_POLYGON_TREE1454,45604
#define CV_SEQ_CONNECTED_COMP CV_SEQ_CONNECTED_COMP1457,45730
#define CV_SEQ_INDEX CV_SEQ_INDEX1460,45855
#define CV_SEQ_ELTYPE(CV_SEQ_ELTYPE1462,45932
#define CV_SEQ_KIND(CV_SEQ_KIND1463,45999
#define CV_IS_SEQ_INDEX(CV_IS_SEQ_INDEX1466,46087
#define CV_IS_SEQ_CURVE(CV_IS_SEQ_CURVE1469,46254
#define CV_IS_SEQ_CLOSED(CV_IS_SEQ_CLOSED1470,46330
#define CV_IS_SEQ_CONVEX(CV_IS_SEQ_CONVEX1471,46409
#define CV_IS_SEQ_HOLE(CV_IS_SEQ_HOLE1472,46447
#define CV_IS_SEQ_SIMPLE(CV_IS_SEQ_SIMPLE1473,46524
#define CV_IS_SEQ_POINT_SET(CV_IS_SEQ_POINT_SET1476,46591
#define CV_IS_SEQ_POINT_SUBSET(CV_IS_SEQ_POINT_SUBSET1479,46702
#define CV_IS_SEQ_POLYLINE(CV_IS_SEQ_POLYLINE1482,46818
#define CV_IS_SEQ_POLYGON(CV_IS_SEQ_POLYGON1485,46929
#define CV_IS_SEQ_CHAIN(CV_IS_SEQ_CHAIN1488,47022
#define CV_IS_SEQ_CONTOUR(CV_IS_SEQ_CONTOUR1491,47127
#define CV_IS_SEQ_CHAIN_CONTOUR(CV_IS_SEQ_CHAIN_CONTOUR1494,47246
#define CV_IS_SEQ_POLYGON_TREE(CV_IS_SEQ_POLYGON_TREE1497,47344
#define CV_IS_GRAPH(CV_IS_GRAPH1501,47496
#define CV_IS_GRAPH_ORIENTED(CV_IS_GRAPH_ORIENTED1504,47601
#define CV_IS_SUBDIV2D(CV_IS_SUBDIV2D1507,47693
#define CV_SEQ_WRITER_FIELDS(CV_SEQ_WRITER_FIELDS1514,48076
typedef struct CvSeqWriterCvSeqWriter1522,48564
CvSeqWriter;CvSeqWriter1526,48622
#define CV_SEQ_READER_FIELDS(CV_SEQ_READER_FIELDS1529,48637
typedef struct CvSeqReaderCvSeqReader1539,49275
CvSeqReader;CvSeqReader1543,49333
#define  CV_SEQ_ELEM(CV_SEQ_ELEM1549,49621
#define CV_GET_SEQ_ELEM(CV_GET_SEQ_ELEM1557,50136
#define CV_WRITE_SEQ_ELEM_VAR(CV_WRITE_SEQ_ELEM_VAR1560,50259
#define CV_WRITE_SEQ_ELEM(CV_WRITE_SEQ_ELEM1570,50716
#define CV_NEXT_SEQ_ELEM(CV_NEXT_SEQ_ELEM1584,51326
#define CV_PREV_SEQ_ELEM(CV_PREV_SEQ_ELEM1594,51752
#define CV_READ_SEQ_ELEM(CV_READ_SEQ_ELEM1603,52185
#define CV_REV_READ_SEQ_ELEM(CV_REV_READ_SEQ_ELEM1611,52566
#define CV_READ_CHAIN_POINT(CV_READ_CHAIN_POINT1619,52905
#define CV_CURRENT_POINT(CV_CURRENT_POINT1631,53648
#define CV_PREV_POINT(CV_PREV_POINT1632,53714
#define CV_READ_EDGE(CV_READ_EDGE1634,53787
#define  CV_NEXT_GRAPH_EDGE(CV_NEXT_GRAPH_EDGE1648,54393
typedef struct CvFileStorage CvFileStorage;CvFileStorage1659,54900
#define CV_STORAGE_READ CV_STORAGE_READ1662,54967
#define CV_STORAGE_WRITE CV_STORAGE_WRITE1663,55002
#define CV_STORAGE_WRITE_TEXT CV_STORAGE_WRITE_TEXT1664,55037
#define CV_STORAGE_WRITE_BINARY CV_STORAGE_WRITE_BINARY1665,55087
#define CV_STORAGE_APPEND CV_STORAGE_APPEND1666,55137
#define CV_STORAGE_MEMORY CV_STORAGE_MEMORY1667,55172
#define CV_STORAGE_FORMAT_MASK CV_STORAGE_FORMAT_MASK1668,55207
#define CV_STORAGE_FORMAT_AUTO CV_STORAGE_FORMAT_AUTO1669,55247
#define CV_STORAGE_FORMAT_XML CV_STORAGE_FORMAT_XML1670,55282
#define CV_STORAGE_FORMAT_YAML CV_STORAGE_FORMAT_YAML1671,55317
#define CV_STORAGE_FORMAT_JSON CV_STORAGE_FORMAT_JSON1672,55352
#define CV_STORAGE_BASE64 CV_STORAGE_BASE641673,55387
#define CV_STORAGE_WRITE_BASE64 CV_STORAGE_WRITE_BASE641674,55422
typedef struct CvAttrListCvAttrList1683,55787
    const char** attr;         /**< NULL-terminated array of (attribute_name,attribute_value) pairs. */attr1685,55815
    const char** attr;         /**< NULL-terminated array of (attribute_name,attribute_value) pairs. */CvAttrList::attr1685,55815
    struct CvAttrList* next;   /**< Pointer to next chunk of the attributes list.                    */next1686,55919
    struct CvAttrList* next;   /**< Pointer to next chunk of the attributes list.                    */CvAttrList::next1686,55919
CvAttrList;CvAttrList1688,56025
CV_INLINE CvAttrList cvAttrList( const char** attr CV_DEFAULT(NULL),cvAttrList1691,56078
#define CV_NODE_NONE CV_NODE_NONE1703,56312
#define CV_NODE_INT CV_NODE_INT1704,56342
#define CV_NODE_INTEGER CV_NODE_INTEGER1705,56372
#define CV_NODE_REAL CV_NODE_REAL1706,56412
#define CV_NODE_FLOAT CV_NODE_FLOAT1707,56442
#define CV_NODE_STR CV_NODE_STR1708,56483
#define CV_NODE_STRING CV_NODE_STRING1709,56513
#define CV_NODE_REF CV_NODE_REF1710,56553
#define CV_NODE_SEQ CV_NODE_SEQ1711,56600
#define CV_NODE_MAP CV_NODE_MAP1712,56630
#define CV_NODE_TYPE_MASK CV_NODE_TYPE_MASK1713,56660
#define CV_NODE_TYPE(CV_NODE_TYPE1715,56691
#define CV_NODE_FLOW CV_NODE_FLOW1718,56774
#define CV_NODE_USER CV_NODE_USER1719,56860
#define CV_NODE_EMPTY CV_NODE_EMPTY1720,56891
#define CV_NODE_NAMED CV_NODE_NAMED1721,56922
#define CV_NODE_IS_INT(CV_NODE_IS_INT1723,56954
#define CV_NODE_IS_REAL(CV_NODE_IS_REAL1724,57028
#define CV_NODE_IS_STRING(CV_NODE_IS_STRING1725,57103
#define CV_NODE_IS_SEQ(CV_NODE_IS_SEQ1726,57180
#define CV_NODE_IS_MAP(CV_NODE_IS_MAP1727,57254
#define CV_NODE_IS_COLLECTION(CV_NODE_IS_COLLECTION1728,57328
#define CV_NODE_IS_FLOW(CV_NODE_IS_FLOW1729,57402
#define CV_NODE_IS_EMPTY(CV_NODE_IS_EMPTY1730,57471
#define CV_NODE_IS_USER(CV_NODE_IS_USER1731,57541
#define CV_NODE_HAS_NAME(CV_NODE_HAS_NAME1732,57610
#define CV_NODE_SEQ_SIMPLE CV_NODE_SEQ_SIMPLE1734,57681
#define CV_NODE_SEQ_IS_SIMPLE(CV_NODE_SEQ_IS_SIMPLE1735,57712
typedef struct CvStringCvString1737,57791
    int len;len1739,57817
    int len;CvString::len1739,57817
    char* ptr;ptr1740,57830
    char* ptr;CvString::ptr1740,57830
CvString;CvString1742,57847
typedef struct CvStringHashNodeCvStringHashNode1746,57986
    unsigned hashval;hashval1748,58020
    unsigned hashval;CvStringHashNode::hashval1748,58020
    CvString str;str1749,58042
    CvString str;CvStringHashNode::str1749,58042
    struct CvStringHashNode* next;next1750,58060
    struct CvStringHashNode* next;CvStringHashNode::next1750,58060
CvStringHashNode;CvStringHashNode1752,58097
typedef struct CvGenericHash CvFileNodeHash;CvFileNodeHash1754,58116
typedef struct CvFileNodeCvFileNode1757,58227
    int tag;tag1759,58255
    int tag;CvFileNode::tag1759,58255
    struct CvTypeInfo* info; /**< type informationinfo1760,58268
    struct CvTypeInfo* info; /**< type informationCvFileNode::info1760,58268
        double f; /**< scalar floating-point number */f1764,58401
        double f; /**< scalar floating-point number */CvFileNode::__anon13::f1764,58401
        int i;    /**< scalar integer number */i1765,58456
        int i;    /**< scalar integer number */CvFileNode::__anon13::i1765,58456
        CvString str; /**< text string */str1766,58504
        CvString str; /**< text string */CvFileNode::__anon13::str1766,58504
        CvSeq* seq; /**< sequence (ordered collection of file nodes) */seq1767,58546
        CvSeq* seq; /**< sequence (ordered collection of file nodes) */CvFileNode::__anon13::seq1767,58546
        CvFileNodeHash* map; /**< map (collection of named file nodes) */map1768,58618
        CvFileNodeHash* map; /**< map (collection of named file nodes) */CvFileNode::__anon13::map1768,58618
    } data;data1769,58692
    } data;CvFileNode::data1769,58692
CvFileNode;CvFileNode1771,58706
typedef int (CV_CDECL *CvIsInstanceFunc)( const void* struct_ptr );CvIsInstanceFunc1776,58758
typedef void (CV_CDECL *CvReleaseFunc)( void** struct_dblptr );CvReleaseFunc1777,58826
typedef void* (CV_CDECL *CvReadFunc)( CvFileStorage* storage, CvFileNode* node );CvReadFunc1778,58890
typedef void (CV_CDECL *CvWriteFunc)( CvFileStorage* storage, const char* name,CvWriteFunc1779,58972
typedef void* (CV_CDECL *CvCloneFunc)( const void* struct_ptr );CvCloneFunc1781,59139
typedef struct CvTypeInfoCvTypeInfo1796,59921
    int flags; /**< not used */flags1798,59949
    int flags; /**< not used */CvTypeInfo::flags1798,59949
    int header_size; /**< sizeof(CvTypeInfo) */header_size1799,59981
    int header_size; /**< sizeof(CvTypeInfo) */CvTypeInfo::header_size1799,59981
    struct CvTypeInfo* prev; /**< previous registered type in the list */prev1800,60029
    struct CvTypeInfo* prev; /**< previous registered type in the list */CvTypeInfo::prev1800,60029
    struct CvTypeInfo* next; /**< next registered type in the list */next1801,60103
    struct CvTypeInfo* next; /**< next registered type in the list */CvTypeInfo::next1801,60103
    const char* type_name; /**< type name, written to file storage */type_name1802,60173
    const char* type_name; /**< type name, written to file storage */CvTypeInfo::type_name1802,60173
    CvIsInstanceFunc is_instance; /**< checks if the passed object belongs to the type */is_instance1803,60243
    CvIsInstanceFunc is_instance; /**< checks if the passed object belongs to the type */CvTypeInfo::is_instance1803,60243
    CvReleaseFunc release; /**< releases object (memory etc.) */release1804,60333
    CvReleaseFunc release; /**< releases object (memory etc.) */CvTypeInfo::release1804,60333
    CvReadFunc read; /**< reads object from file storage */read1805,60398
    CvReadFunc read; /**< reads object from file storage */CvTypeInfo::read1805,60398
    CvWriteFunc write; /**< writes object to file storage */write1806,60458
    CvWriteFunc write; /**< writes object to file storage */CvTypeInfo::write1806,60458
    CvCloneFunc clone; /**< creates a copy of the object */clone1807,60519
    CvCloneFunc clone; /**< creates a copy of the object */CvTypeInfo::clone1807,60519
CvTypeInfo;CvTypeInfo1809,60581
typedef struct CvPluginFuncInfoCvPluginFuncInfo1814,60628
    void** func_addr;func_addr1816,60662
    void** func_addr;CvPluginFuncInfo::func_addr1816,60662
    void* default_func_addr;default_func_addr1817,60684
    void* default_func_addr;CvPluginFuncInfo::default_func_addr1817,60684
    const char* func_names;func_names1818,60713
    const char* func_names;CvPluginFuncInfo::func_names1818,60713
    int search_modules;search_modules1819,60741
    int search_modules;CvPluginFuncInfo::search_modules1819,60741
    int loaded_from;loaded_from1820,60765
    int loaded_from;CvPluginFuncInfo::loaded_from1820,60765
CvPluginFuncInfo;CvPluginFuncInfo1822,60788
typedef struct CvModuleInfoCvModuleInfo1824,60807
    struct CvModuleInfo* next;next1826,60837
    struct CvModuleInfo* next;CvModuleInfo::next1826,60837
    const char* name;name1827,60868
    const char* name;CvModuleInfo::name1827,60868
    const char* version;version1828,60890
    const char* version;CvModuleInfo::version1828,60890
    CvPluginFuncInfo* func_tab;func_tab1829,60915
    CvPluginFuncInfo* func_tab;CvModuleInfo::func_tab1829,60915
CvModuleInfo;CvModuleInfo1831,60949

/usr/include/opencv2/core/cvdef.h,8525
cvdef.h1,0
#define OPENCV_CORE_CVDEF_HOPENCV_CORE_CVDEF_H46,2304
#define CV__DEBUG_NS_BEGIN CV__DEBUG_NS_BEGIN56,2681
#define CV__DEBUG_NS_END CV__DEBUG_NS_END57,2738
#define CV__DEBUG_NS_BEGINCV__DEBUG_NS_BEGIN63,2891
#define CV__DEBUG_NS_ENDCV__DEBUG_NS_END64,2918
#define __CV_EXPAND(__CV_EXPAND73,3024
#define __CV_CAT__(__CV_CAT__77,3074
#define __CV_CAT_(__CV_CAT_78,3106
#define __CV_CAT(__CV_CAT79,3147
#undef smallsmall84,3286
#undef minmin85,3299
#undef maxmax86,3310
#undef absabs87,3321
#undef ComplexComplex88,3332
#  define CV_ICC CV_ICC94,3427
#  define CV_ICC CV_ICC96,3472
#  define CV_ICC CV_ICC98,3517
#  define CV_ICC CV_ICC100,3562
#  define CV_ICC CV_ICC102,3618
#    define CV_INLINE CV_INLINE107,3706
#    define CV_INLINE CV_INLINE109,3767
#    define CV_INLINE CV_INLINE111,3806
#  define CV_ENABLE_UNROLLED CV_ENABLE_UNROLLED116,3939
#  define CV_ENABLE_UNROLLED CV_ENABLE_UNROLLED118,3976
#  define CV_DECL_ALIGNED(CV_DECL_ALIGNED122,4031
#  define CV_DECL_ALIGNED(CV_DECL_ALIGNED124,4113
#  define CV_DECL_ALIGNED(CV_DECL_ALIGNED126,4169
#define CV_CPU_NONE CV_CPU_NONE130,4248
#define CV_CPU_MMX CV_CPU_MMX131,4282
#define CV_CPU_SSE CV_CPU_SSE132,4316
#define CV_CPU_SSE2 CV_CPU_SSE2133,4350
#define CV_CPU_SSE3 CV_CPU_SSE3134,4384
#define CV_CPU_SSSE3 CV_CPU_SSSE3135,4418
#define CV_CPU_SSE4_1 CV_CPU_SSE4_1136,4452
#define CV_CPU_SSE4_2 CV_CPU_SSE4_2137,4486
#define CV_CPU_POPCNT CV_CPU_POPCNT138,4520
#define CV_CPU_FP16 CV_CPU_FP16139,4554
#define CV_CPU_AVX CV_CPU_AVX140,4588
#define CV_CPU_AVX2 CV_CPU_AVX2141,4623
#define CV_CPU_FMA3 CV_CPU_FMA3142,4658
#define CV_CPU_AVX_512F CV_CPU_AVX_512F144,4694
#define CV_CPU_AVX_512BW CV_CPU_AVX_512BW145,4729
#define CV_CPU_AVX_512CD CV_CPU_AVX_512CD146,4764
#define CV_CPU_AVX_512DQ CV_CPU_AVX_512DQ147,4799
#define CV_CPU_AVX_512ER CV_CPU_AVX_512ER148,4834
#define CV_CPU_AVX_512IFMA512 CV_CPU_AVX_512IFMA512149,4869
#define CV_CPU_AVX_512IFMA CV_CPU_AVX_512IFMA150,4918
#define CV_CPU_AVX_512PF CV_CPU_AVX_512PF151,4953
#define CV_CPU_AVX_512VBMI CV_CPU_AVX_512VBMI152,4988
#define CV_CPU_AVX_512VL CV_CPU_AVX_512VL153,5023
#define CV_CPU_NEON CV_CPU_NEON155,5059
#define CV_CPU_VSX CV_CPU_VSX157,5086
#define CV_CPU_AVX512_SKX CV_CPU_AVX512_SKX160,5133
#define CV_HARDWARE_MAX_FEATURE CV_HARDWARE_MAX_FEATURE163,5236
enum CpuFeatures {CpuFeatures167,5311
    CPU_MMX             = 1,CPU_MMX168,5330
    CPU_SSE             = 2,CPU_SSE169,5359
    CPU_SSE2            = 3,CPU_SSE2170,5388
    CPU_SSE3            = 4,CPU_SSE3171,5417
    CPU_SSSE3           = 5,CPU_SSSE3172,5446
    CPU_SSE4_1          = 6,CPU_SSE4_1173,5475
    CPU_SSE4_2          = 7,CPU_SSE4_2174,5504
    CPU_POPCNT          = 8,CPU_POPCNT175,5533
    CPU_FP16            = 9,CPU_FP16176,5562
    CPU_AVX             = 10,CPU_AVX177,5591
    CPU_AVX2            = 11,CPU_AVX2178,5621
    CPU_FMA3            = 12,CPU_FMA3179,5651
    CPU_AVX_512F        = 13,CPU_AVX_512F181,5682
    CPU_AVX_512BW       = 14,CPU_AVX_512BW182,5712
    CPU_AVX_512CD       = 15,CPU_AVX_512CD183,5742
    CPU_AVX_512DQ       = 16,CPU_AVX_512DQ184,5772
    CPU_AVX_512ER       = 17,CPU_AVX_512ER185,5802
    CPU_AVX_512IFMA512  = 18, // deprecatedCPU_AVX_512IFMA512186,5832
    CPU_AVX_512IFMA     = 18,CPU_AVX_512IFMA187,5876
    CPU_AVX_512PF       = 19,CPU_AVX_512PF188,5906
    CPU_AVX_512VBMI     = 20,CPU_AVX_512VBMI189,5936
    CPU_AVX_512VL       = 21,CPU_AVX_512VL190,5966
    CPU_NEON            = 100,CPU_NEON192,5997
    CPU_VSX             = 200,CPU_VSX194,6029
    CPU_AVX512_SKX      = 256, //!< Skylake-X with AVX-512F/CD/BW/DQ/VLCPU_AVX512_SKX196,6061
    CPU_MAX_FEATURE     = 512  // see CV_HARDWARE_MAX_FEATURECPU_MAX_FEATURE198,6134
#define CV_PI CV_PI206,6260
#define CV_2PI CV_2PI207,6310
#define CV_LOG2 CV_LOG2208,6359
#  define CV_FP16_TYPE CV_FP16_TYPE212,6475
#  define CV_FP16_TYPE CV_FP16_TYPE214,6506
typedef union Cv16sufCv16suf217,6539
    short i;i219,6563
    short i;Cv16suf::i219,6563
    __fp16 h;h221,6593
    __fp16 h;Cv16suf::h221,6593
    struct _fp16Format_fp16Format223,6614
    struct _fp16FormatCv16suf::_fp16Format223,6614
        unsigned int significand : 10;significand225,6643
        unsigned int significand : 10;Cv16suf::_fp16Format::significand225,6643
        unsigned int exponent    : 5;exponent226,6682
        unsigned int exponent    : 5;Cv16suf::_fp16Format::exponent226,6682
        unsigned int sign        : 1;sign227,6720
        unsigned int sign        : 1;Cv16suf::_fp16Format::sign227,6720
    } fmt;fmt228,6758
    } fmt;Cv16suf::fmt228,6758
Cv16suf;Cv16suf230,6771
typedef union Cv32sufCv32suf232,6781
    int i;i234,6805
    int i;Cv32suf::i234,6805
    unsigned u;u235,6816
    unsigned u;Cv32suf::u235,6816
    float f;f236,6832
    float f;Cv32suf::f236,6832
    struct _fp32Format_fp32Format237,6845
    struct _fp32FormatCv32suf::_fp32Format237,6845
        unsigned int significand : 23;significand239,6874
        unsigned int significand : 23;Cv32suf::_fp32Format::significand239,6874
        unsigned int exponent    : 8;exponent240,6913
        unsigned int exponent    : 8;Cv32suf::_fp32Format::exponent240,6913
        unsigned int sign        : 1;sign241,6951
        unsigned int sign        : 1;Cv32suf::_fp32Format::sign241,6951
    } fmt;fmt242,6989
    } fmt;Cv32suf::fmt242,6989
Cv32suf;Cv32suf244,7002
typedef union Cv64sufCv64suf246,7012
    int64 i;i248,7036
    int64 i;Cv64suf::i248,7036
    uint64 u;u249,7049
    uint64 u;Cv64suf::u249,7049
    double f;f250,7063
    double f;Cv64suf::f250,7063
Cv64suf;Cv64suf252,7079
#define OPENCV_ABI_COMPATIBILITY OPENCV_ABI_COMPATIBILITY254,7089
#  define DISABLE_OPENCV_24_COMPATIBILITYDISABLE_OPENCV_24_COMPATIBILITY257,7149
#   define CV_EXPORTS CV_EXPORTS262,7281
#   define CV_EXPORTS CV_EXPORTS264,7366
# define CV_EXPORTSCV_EXPORTS269,7464
#   define CV_EXPORTS_TEMPLATECV_EXPORTS_TEMPLATE273,7508
#   define CV_EXPORTS_TEMPLATE CV_EXPORTS_TEMPLATE275,7545
#    define CV_DEPRECATED CV_DEPRECATED280,7641
#    define CV_DEPRECATED CV_DEPRECATED282,7722
#    define CV_DEPRECATEDCV_DEPRECATED284,7779
#    define CV_EXTERN_C CV_EXTERN_C290,7863
#    define CV_EXTERN_CCV_EXTERN_C292,7906
#define CV_EXPORTS_W CV_EXPORTS_W297,8003
#define CV_EXPORTS_W_SIMPLE CV_EXPORTS_W_SIMPLE298,8035
#define CV_EXPORTS_AS(CV_EXPORTS_AS299,8074
#define CV_EXPORTS_W_MAP CV_EXPORTS_W_MAP300,8116
#define CV_IN_OUTCV_IN_OUT301,8152
#define CV_OUTCV_OUT302,8170
#define CV_PROPCV_PROP303,8185
#define CV_PROP_RWCV_PROP_RW304,8201
#define CV_WRAPCV_WRAP305,8220
#define CV_WRAP_AS(CV_WRAP_AS306,8236
#define CV_MAT_CN_MASK CV_MAT_CN_MASK312,8539
#define CV_MAT_CN(CV_MAT_CN313,8604
#define CV_MAT_TYPE_MASK CV_MAT_TYPE_MASK314,8686
#define CV_MAT_TYPE(CV_MAT_TYPE315,8747
#define CV_MAT_CONT_FLAG_SHIFT CV_MAT_CONT_FLAG_SHIFT316,8808
#define CV_MAT_CONT_FLAG CV_MAT_CONT_FLAG317,8843
#define CV_IS_MAT_CONT(CV_IS_MAT_CONT318,8905
#define CV_IS_CONT_MAT CV_IS_CONT_MAT319,8966
#define CV_SUBMAT_FLAG_SHIFT CV_SUBMAT_FLAG_SHIFT320,9013
#define CV_SUBMAT_FLAG CV_SUBMAT_FLAG321,9048
#define CV_IS_SUBMAT(CV_IS_SUBMAT322,9108
#define CV_ELEM_SIZE1(CV_ELEM_SIZE1326,9289
#define CV_ELEM_SIZE(CV_ELEM_SIZE330,9466
#  define MIN(MIN334,9601
#  define MAX(MAX338,9665
#   define CV_STATIC_ANALYSISCV_STATIC_ANALYSIS349,10234
#     define CV_THREAD_SANITIZERCV_THREAD_SANITIZER359,10648
#      define CV_XADD(CV_XADD373,11228
#      define CV_XADD(CV_XADD375,11344
#      define CV_XADD(CV_XADD380,11538
#      define CV_XADD(CV_XADD382,11663
#  define CV_XADD(CV_XADD387,11850
   CV_INLINE CV_XADD(int* addr, int delta) { int tmp = *addr; *addr += delta; return tmp; }CV_XADD389,11945
#    define CV_NORETURN CV_NORETURN399,12364
#    define CV_NORETURN CV_NORETURN401,12466
#    define CV_NORETURN CV_NORETURN403,12519
#    define CV_CXX11 CV_CXX11413,12948
#    undef CV_CXX11CV_CXX11417,13006
#    define CV_CXX_MOVE_SEMANTICS CV_CXX_MOVE_SEMANTICS428,13459
#      define CV_CXX_MOVE_SEMANTICS CV_CXX_MOVE_SEMANTICS431,13565
#    undef CV_CXX_MOVE_SEMANTICSCV_CXX_MOVE_SEMANTICS436,13662
#    define CV_CXX_STD_ARRAY CV_CXX_STD_ARRAY446,14096
#    undef CV_CXX_STD_ARRAYCV_CXX_STD_ARRAY451,14191

/usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include-fixed/limits.h,2868
limits.h1,0
#define _GCC_LIMITS_H__GCC_LIMITS_H_30,1259
#define _LIMITS_H____LIMITS_H___60,2388
#undef CHAR_BITCHAR_BIT63,2445
#define CHAR_BIT CHAR_BIT64,2461
#define MB_LEN_MAX MB_LEN_MAX68,2559
#undef SCHAR_MINSCHAR_MIN72,2648
#define SCHAR_MIN SCHAR_MIN73,2665
#undef SCHAR_MAXSCHAR_MAX74,2700
#define SCHAR_MAX SCHAR_MAX75,2717
#undef UCHAR_MAXUCHAR_MAX78,2817
# define UCHAR_MAX UCHAR_MAX80,2867
# define UCHAR_MAX UCHAR_MAX82,2914
# undef CHAR_MINCHAR_MIN87,3039
#  define CHAR_MIN CHAR_MIN89,3090
#  define CHAR_MIN CHAR_MIN91,3119
# undef CHAR_MAXCHAR_MAX93,3148
# define CHAR_MAX CHAR_MAX94,3165
# undef CHAR_MINCHAR_MIN96,3199
# define CHAR_MIN CHAR_MIN97,3216
# undef CHAR_MAXCHAR_MAX98,3244
# define CHAR_MAX CHAR_MAX99,3261
#undef SHRT_MINSHRT_MIN103,3362
#define SHRT_MIN SHRT_MIN104,3378
#undef SHRT_MAXSHRT_MAX105,3411
#define SHRT_MAX SHRT_MAX106,3427
#undef USHRT_MAXUSHRT_MAX109,3530
# define USHRT_MAX USHRT_MAX111,3579
# define USHRT_MAX USHRT_MAX113,3625
#undef INT_MININT_MIN117,3730
#define INT_MIN INT_MIN118,3745
#undef INT_MAXINT_MAX119,3776
#define INT_MAX INT_MAX120,3791
#undef UINT_MAXUINT_MAX123,3886
#define UINT_MAX UINT_MAX124,3902
#undef LONG_MINLONG_MIN128,4024
#define LONG_MIN LONG_MIN129,4040
#undef LONG_MAXLONG_MAX130,4074
#define LONG_MAX LONG_MAX131,4090
#undef ULONG_MAXULONG_MAX134,4192
#define ULONG_MAX ULONG_MAX135,4209
# undef LLONG_MINLLONG_MIN139,4382
# define LLONG_MIN LLONG_MIN140,4400
# undef LLONG_MAXLLONG_MAX141,4438
# define LLONG_MAX LLONG_MAX142,4456
# undef ULLONG_MAXULLONG_MAX145,4570
# define ULLONG_MAX ULLONG_MAX146,4589
# undef LONG_LONG_MINLONG_LONG_MIN151,4793
# define LONG_LONG_MIN LONG_LONG_MIN152,4815
# undef LONG_LONG_MAXLONG_LONG_MAX153,4861
# define LONG_LONG_MAX LONG_LONG_MAX154,4883
# undef ULONG_LONG_MAXULONG_LONG_MAX157,5001
# define ULONG_LONG_MAX ULONG_LONG_MAX158,5024
# undef CHAR_WIDTHCHAR_WIDTH163,5168
# define CHAR_WIDTH CHAR_WIDTH164,5187
# undef SCHAR_WIDTHSCHAR_WIDTH165,5223
# define SCHAR_WIDTH SCHAR_WIDTH166,5243
# undef UCHAR_WIDTHUCHAR_WIDTH167,5280
# define UCHAR_WIDTH UCHAR_WIDTH168,5300
# undef SHRT_WIDTHSHRT_WIDTH169,5337
# define SHRT_WIDTH SHRT_WIDTH170,5356
# undef USHRT_WIDTHUSHRT_WIDTH171,5391
# define USHRT_WIDTH USHRT_WIDTH172,5411
# undef INT_WIDTHINT_WIDTH173,5447
# define INT_WIDTH INT_WIDTH174,5465
# undef UINT_WIDTHUINT_WIDTH175,5498
# define UINT_WIDTH UINT_WIDTH176,5517
# undef LONG_WIDTHLONG_WIDTH177,5551
# define LONG_WIDTH LONG_WIDTH178,5570
# undef ULONG_WIDTHULONG_WIDTH179,5605
# define ULONG_WIDTH ULONG_WIDTH180,5625
# undef LLONG_WIDTHLLONG_WIDTH181,5661
# define LLONG_WIDTH LLONG_WIDTH182,5681
# undef ULLONG_WIDTHULLONG_WIDTH183,5722
# define ULLONG_WIDTH ULLONG_WIDTH184,5743

/usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include-fixed/syslimits.h,121
syslimits.h1,0
#define _GCC_NEXT_LIMITS_H	_GCC_NEXT_LIMITS_H6,214
#undef _GCC_NEXT_LIMITS_H_GCC_NEXT_LIMITS_H8,304

/usr/include/limits.h,1691
limits.h1,0
#define _LIBC_LIMITS_H_	_LIBC_LIMITS_H_23,891
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION25,918
#define MB_LEN_MAX	MB_LEN_MAX32,1164
#  define _LIMITS_H	_LIMITS_H43,1578
#  define CHAR_BIT	CHAR_BIT54,1848
#  define SCHAR_MIN	SCHAR_MIN57,1930
#  define SCHAR_MAX	SCHAR_MAX58,1957
#  define UCHAR_MAX	UCHAR_MAX61,2049
#   define CHAR_MIN	CHAR_MIN65,2154
#   define CHAR_MAX	CHAR_MAX66,2176
#   define CHAR_MIN	CHAR_MIN68,2214
#   define CHAR_MAX	CHAR_MAX69,2244
#  define SHRT_MIN	SHRT_MIN73,2349
#  define SHRT_MAX	SHRT_MAX74,2377
#  define USHRT_MAX	USHRT_MAX77,2475
#  define INT_MIN	INT_MIN80,2561
#  define INT_MAX	INT_MAX81,2594
#  define UINT_MAX	UINT_MAX84,2690
#   define LONG_MAX	LONG_MAX88,2809
#   define LONG_MAX	LONG_MAX90,2858
#  define LONG_MIN	LONG_MIN92,2899
#   define ULONG_MAX	ULONG_MAX96,3030
#   define ULONG_MAX	ULONG_MAX98,3082
#   define LLONG_MAX	LLONG_MAX104,3218
#   define LLONG_MIN	LLONG_MIN105,3261
#   define ULLONG_MAX	ULLONG_MAX108,3378
#  define LLONG_MIN	LLONG_MIN132,4161
#  define LLONG_MAX	LLONG_MAX135,4223
#  define ULLONG_MAX	ULLONG_MAX138,4289
#  define CHAR_WIDTH CHAR_WIDTH147,4587
#  define SCHAR_WIDTH SCHAR_WIDTH150,4639
#  define UCHAR_WIDTH UCHAR_WIDTH153,4692
#  define SHRT_WIDTH SHRT_WIDTH156,4744
#  define USHRT_WIDTH USHRT_WIDTH159,4797
#  define INT_WIDTH INT_WIDTH162,4849
#  define UINT_WIDTH UINT_WIDTH165,4900
#  define LONG_WIDTH LONG_WIDTH168,4952
#  define ULONG_WIDTH ULONG_WIDTH171,5013
#  define LLONG_WIDTH LLONG_WIDTH174,5075
#  define ULLONG_WIDTH ULLONG_WIDTH177,5130

/usr/include/bits/libc-header-start.h,1030
libc-header-start.h1,0
#undef __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION31,1375
#undef __GLIBC_USE_LIB_EXT2__GLIBC_USE_LIB_EXT237,1530
# define __GLIBC_USE_LIB_EXT2 __GLIBC_USE_LIB_EXT240,1661
# define __GLIBC_USE_LIB_EXT2 __GLIBC_USE_LIB_EXT242,1699
#undef __GLIBC_USE_IEC_60559_BFP_EXT__GLIBC_USE_IEC_60559_BFP_EXT47,1824
# define __GLIBC_USE_IEC_60559_BFP_EXT __GLIBC_USE_IEC_60559_BFP_EXT49,1926
# define __GLIBC_USE_IEC_60559_BFP_EXT __GLIBC_USE_IEC_60559_BFP_EXT51,1973
#undef __GLIBC_USE_IEC_60559_FUNCS_EXT__GLIBC_USE_IEC_60559_FUNCS_EXT56,2109
# define __GLIBC_USE_IEC_60559_FUNCS_EXT __GLIBC_USE_IEC_60559_FUNCS_EXT58,2215
# define __GLIBC_USE_IEC_60559_FUNCS_EXT __GLIBC_USE_IEC_60559_FUNCS_EXT60,2264
#undef __GLIBC_USE_IEC_60559_TYPES_EXT__GLIBC_USE_IEC_60559_TYPES_EXT65,2402
# define __GLIBC_USE_IEC_60559_TYPES_EXT __GLIBC_USE_IEC_60559_TYPES_EXT67,2508
# define __GLIBC_USE_IEC_60559_TYPES_EXT __GLIBC_USE_IEC_60559_TYPES_EXT69,2557

/usr/include/features.h,6121
features.h1,0
#define	_FEATURES_H	_FEATURES_H19,809
#undef	__USE_ISOC11__USE_ISOC11119,5460
#undef	__USE_ISOC99__USE_ISOC99120,5480
#undef	__USE_ISOC95__USE_ISOC95121,5500
#undef	__USE_ISOCXX11__USE_ISOCXX11122,5520
#undef	__USE_POSIX__USE_POSIX123,5542
#undef	__USE_POSIX2__USE_POSIX2124,5561
#undef	__USE_POSIX199309__USE_POSIX199309125,5581
#undef	__USE_POSIX199506__USE_POSIX199506126,5606
#undef	__USE_XOPEN__USE_XOPEN127,5631
#undef	__USE_XOPEN_EXTENDED__USE_XOPEN_EXTENDED128,5650
#undef	__USE_UNIX98__USE_UNIX98129,5678
#undef	__USE_XOPEN2K__USE_XOPEN2K130,5698
#undef	__USE_XOPEN2KXSI__USE_XOPEN2KXSI131,5719
#undef	__USE_XOPEN2K8__USE_XOPEN2K8132,5743
#undef	__USE_XOPEN2K8XSI__USE_XOPEN2K8XSI133,5765
#undef	__USE_LARGEFILE__USE_LARGEFILE134,5790
#undef	__USE_LARGEFILE64__USE_LARGEFILE64135,5813
#undef	__USE_FILE_OFFSET64__USE_FILE_OFFSET64136,5838
#undef	__USE_MISC__USE_MISC137,5865
#undef	__USE_ATFILE__USE_ATFILE138,5883
#undef	__USE_GNU__USE_GNU139,5903
#undef	__USE_FORTIFY_LEVEL__USE_FORTIFY_LEVEL140,5920
#undef	__KERNEL_STRICT_NAMES__KERNEL_STRICT_NAMES141,5947
#undef	__GLIBC_USE_DEPRECATED_GETS__GLIBC_USE_DEPRECATED_GETS142,5976
# define __KERNEL_STRICT_NAMES__KERNEL_STRICT_NAMES147,6124
# define __GNUC_PREREQ(__GNUC_PREREQ158,6448
# define __GNUC_PREREQ(__GNUC_PREREQ161,6551
# define __glibc_clang_prereq(__glibc_clang_prereq169,6922
# define __glibc_clang_prereq(__glibc_clang_prereq172,7041
#define __GLIBC_USE(__GLIBC_USE176,7128
# undef  _DEFAULT_SOURCE_DEFAULT_SOURCE185,7557
# define _DEFAULT_SOURCE	_DEFAULT_SOURCE186,7582
# undef  _ISOC95_SOURCE_ISOC95_SOURCE191,7715
# define _ISOC95_SOURCE	_ISOC95_SOURCE192,7739
# undef  _ISOC99_SOURCE_ISOC99_SOURCE193,7765
# define _ISOC99_SOURCE	_ISOC99_SOURCE194,7789
# undef  _ISOC11_SOURCE_ISOC11_SOURCE195,7815
# define _ISOC11_SOURCE	_ISOC11_SOURCE196,7839
# undef  _POSIX_SOURCE_POSIX_SOURCE197,7865
# define _POSIX_SOURCE	_POSIX_SOURCE198,7888
# undef  _POSIX_C_SOURCE_POSIX_C_SOURCE199,7913
# define _POSIX_C_SOURCE	_POSIX_C_SOURCE200,7938
# undef  _XOPEN_SOURCE_XOPEN_SOURCE201,7971
# define _XOPEN_SOURCE	_XOPEN_SOURCE202,7994
# undef  _XOPEN_SOURCE_EXTENDED_XOPEN_SOURCE_EXTENDED203,8021
# define _XOPEN_SOURCE_EXTENDED	_XOPEN_SOURCE_EXTENDED204,8053
# undef	 _LARGEFILE64_SOURCE_LARGEFILE64_SOURCE205,8087
# define _LARGEFILE64_SOURCE	_LARGEFILE64_SOURCE206,8116
# undef  _DEFAULT_SOURCE_DEFAULT_SOURCE207,8147
# define _DEFAULT_SOURCE	_DEFAULT_SOURCE208,8172
# undef  _ATFILE_SOURCE_ATFILE_SOURCE209,8199
# define _ATFILE_SOURCE	_ATFILE_SOURCE210,8223
# undef  _DEFAULT_SOURCE_DEFAULT_SOURCE220,8555
# define _DEFAULT_SOURCE	_DEFAULT_SOURCE221,8580
# define __USE_ISOC11	__USE_ISOC11227,8760
# define __USE_ISOC99	__USE_ISOC99233,8963
# define __USE_ISOC95	__USE_ISOC95239,9183
#  define __USE_ISOC11	__USE_ISOC11245,9316
#  define __USE_ISOCXX11	__USE_ISOCXX11250,9512
#  define __USE_ISOC99	__USE_ISOC99251,9539
#  define __USE_POSIX_IMPLICITLY	__USE_POSIX_IMPLICITLY260,9818
# undef  _POSIX_SOURCE_POSIX_SOURCE262,9861
# define _POSIX_SOURCE	_POSIX_SOURCE263,9884
# undef  _POSIX_C_SOURCE_POSIX_C_SOURCE264,9909
# define _POSIX_C_SOURCE	_POSIX_C_SOURCE265,9934
# define _POSIX_SOURCE	_POSIX_SOURCE271,10138
#  define _POSIX_C_SOURCE	_POSIX_C_SOURCE273,10219
#  define _POSIX_C_SOURCE	_POSIX_C_SOURCE275,10305
#  define _POSIX_C_SOURCE	_POSIX_C_SOURCE277,10397
#  define _POSIX_C_SOURCE	_POSIX_C_SOURCE279,10438
# define __USE_POSIX_IMPLICITLY	__USE_POSIX_IMPLICITLY281,10480
# define _POSIX_SOURCE _POSIX_SOURCE292,11062
# undef  _POSIX_C_SOURCE_POSIX_C_SOURCE293,11089
# define _POSIX_C_SOURCE _POSIX_C_SOURCE294,11114
# define __USE_POSIX	__USE_POSIX300,11279
# define __USE_POSIX2	__USE_POSIX2304,11387
# define __USE_POSIX199309	__USE_POSIX199309308,11483
# define __USE_POSIX199506	__USE_POSIX199506312,11584
# define __USE_XOPEN2K	__USE_XOPEN2K316,11685
# undef __USE_ISOC95__USE_ISOC95317,11711
# define __USE_ISOC95	__USE_ISOC95318,11732
# undef __USE_ISOC99__USE_ISOC99319,11757
# define __USE_ISOC99	__USE_ISOC99320,11778
# define __USE_XOPEN2K8	__USE_XOPEN2K8324,11875
# undef  _ATFILE_SOURCE_ATFILE_SOURCE325,11902
# define _ATFILE_SOURCE	_ATFILE_SOURCE326,11926
# define __USE_XOPEN	__USE_XOPEN330,11981
#  define __USE_XOPEN_EXTENDED	__USE_XOPEN_EXTENDED332,12036
#  define __USE_UNIX98	__USE_UNIX98333,12069
#  undef _LARGEFILE_SOURCE_LARGEFILE_SOURCE334,12094
#  define _LARGEFILE_SOURCE	_LARGEFILE_SOURCE335,12121
#    define __USE_XOPEN2K8	__USE_XOPEN2K8338,12218
#    define __USE_XOPEN2K8XSI	__USE_XOPEN2K8XSI339,12247
#   define __USE_XOPEN2K	__USE_XOPEN2K341,12289
#   define __USE_XOPEN2KXSI	__USE_XOPEN2KXSI342,12316
#   undef __USE_ISOC95__USE_ISOC95343,12346
#   define __USE_ISOC95	__USE_ISOC95344,12369
#   undef __USE_ISOC99__USE_ISOC99345,12396
#   define __USE_ISOC99	__USE_ISOC99346,12419
#   define __USE_XOPEN_EXTENDED	__USE_XOPEN_EXTENDED350,12494
# define __USE_LARGEFILE	__USE_LARGEFILE356,12578
# define __USE_LARGEFILE64	__USE_LARGEFILE64360,12640
# define __USE_FILE_OFFSET64	__USE_FILE_OFFSET64364,12734
# define __USE_MISC	__USE_MISC368,12801
# define __USE_ATFILE	__USE_ATFILE372,12853
# define __USE_GNU	__USE_GNU376,12904
#  define __USE_FORTIFY_LEVEL __USE_FORTIFY_LEVEL385,13210
#  define __USE_FORTIFY_LEVEL __USE_FORTIFY_LEVEL387,13249
# define __USE_FORTIFY_LEVEL __USE_FORTIFY_LEVEL391,13324
# define __GLIBC_USE_DEPRECATED_GETS __GLIBC_USE_DEPRECATED_GETS399,13710
# define __GLIBC_USE_DEPRECATED_GETS __GLIBC_USE_DEPRECATED_GETS401,13755
#undef  __GNU_LIBRARY____GNU_LIBRARY__414,14347
#define __GNU_LIBRARY__ __GNU_LIBRARY__415,14371
#define	__GLIBC__	__GLIBC__419,14530
#define	__GLIBC_MINOR__	__GLIBC_MINOR__420,14550
#define __GLIBC_PREREQ(__GLIBC_PREREQ422,14578
#  define __USE_LARGEFILE	__USE_LARGEFILE434,15007
#  define __USE_LARGEFILE64	__USE_LARGEFILE64435,15035
# define __USE_EXTERN_INLINES	__USE_EXTERN_INLINES444,15317

/usr/include/sys/cdefs.h,6810
cdefs.h1,0
#define	_SYS_CDEFS_H	_SYS_CDEFS_H19,810
#undef	__P__P34,1293
#undef	__PMT__PMT35,1304
#  define __LEAF __LEAF42,1486
#  define __LEAF_ATTR __LEAF_ATTR43,1514
#  define __LEAF__LEAF45,1570
#  define __LEAF_ATTR__LEAF_ATTR46,1587
#  define __THROW	__THROW55,1994
#  define __THROWNL	__THROWNL56,2049
#  define __NTH(__NTH57,2099
#  define __NTHNL(__NTHNL58,2161
#   define __THROW	__THROW61,2275
#   define __THROWNL	__THROWNL62,2303
#   define __NTH(__NTH63,2333
#   define __NTHNL(__NTHNL64,2380
#   define __THROW__THROW66,2425
#   define __THROWNL__THROWNL67,2444
#   define __NTH(__NTH68,2465
#   define __NTHNL(__NTHNL69,2491
# define __inline	__inline75,2560
# define __THROW__THROW77,2608
# define __THROWNL__THROWNL78,2625
# define __NTH(__NTH79,2644
# define __glibc_clang_has_extension(__glibc_clang_has_extension87,2916
# define __glibc_clang_has_extension(__glibc_clang_has_extension89,2986
#define __P(__P94,3182
#define __PMT(__PMT95,3205
#define __CONCAT(__CONCAT100,3336
#define __STRING(__STRING101,3365
#define __ptr_t __ptr_t104,3459
# define __BEGIN_DECLS	__BEGIN_DECLS109,3572
# define __END_DECLS	__END_DECLS110,3608
# define __BEGIN_DECLS__BEGIN_DECLS112,3637
# define __END_DECLS__END_DECLS113,3660
#define __bos(__bos118,3714
#define __bos0(__bos0119,3786
# define __warndecl(__warndecl122,3862
# define __warnattr(__warnattr124,3956
# define __errordecl(__errordecl125,4016
# define __warndecl(__warndecl128,4115
# define __warnattr(__warnattr129,4170
# define __errordecl(__errordecl130,4195
# define __flexarr	__flexarr138,4516
# define __glibc_c99_flexarr_available __glibc_c99_flexarr_available139,4538
# define __flexarr	__flexarr143,4732
# define __glibc_c99_flexarr_available __glibc_c99_flexarr_available144,4754
# define __flexarr	__flexarr148,4948
# define __glibc_c99_flexarr_available __glibc_c99_flexarr_available149,4971
# define __flexarr	__flexarr152,5077
# define __glibc_c99_flexarr_available __glibc_c99_flexarr_available153,5100
# define __REDIRECT(__REDIRECT169,5661
#  define __REDIRECT_NTH(__REDIRECT_NTH171,5761
#  define __REDIRECT_NTHNL(__REDIRECT_NTHNL173,5861
#  define __REDIRECT_NTH(__REDIRECT_NTH176,5972
#  define __REDIRECT_NTHNL(__REDIRECT_NTHNL178,6072
# define __ASMNAME(__ASMNAME181,6184
# define __ASMNAME2(__ASMNAME2182,6253
# define __attribute__(__attribute__196,6681
# define __attribute_malloc__ __attribute_malloc__203,6971
# define __attribute_malloc__ __attribute_malloc__205,7036
# define __attribute_alloc_size__(__attribute_alloc_size__211,7219
# define __attribute_alloc_size__(__attribute_alloc_size__214,7311
# define __attribute_pure__ __attribute_pure__221,7615
# define __attribute_pure__ __attribute_pure__223,7676
# define __attribute_const__ __attribute_const__228,7820
# define __attribute_const__ __attribute_const__230,7883
# define __attribute_used__ __attribute_used__237,8170
# define __attribute_noinline__ __attribute_noinline__238,8225
# define __attribute_used__ __attribute_used__240,8294
# define __attribute_noinline__ __attribute_noinline__241,8351
# define __attribute_deprecated__ __attribute_deprecated__246,8495
# define __attribute_deprecated__ __attribute_deprecated__248,8568
# define __attribute_deprecated_msg__(__attribute_deprecated_msg__256,8907
# define __attribute_deprecated_msg__(__attribute_deprecated_msg__259,8999
# define __attribute_format_arg__(__attribute_format_arg__269,9508
# define __attribute_format_arg__(__attribute_format_arg__271,9588
# define __attribute_format_strfmon__(__attribute_format_strfmon__279,9898
# define __attribute_format_strfmon__(__attribute_format_strfmon__282,10000
# define __nonnull(__nonnull288,10186
# define __nonnull(__nonnull290,10256
# define __attribute_warn_unused_result__ __attribute_warn_unused_result__296,10431
#  define __wur __wur299,10548
# define __attribute_warn_unused_result__ __attribute_warn_unused_result__302,10611
# define __wur __wur305,10686
# undef __always_inline__always_inline313,10984
# define __always_inline __always_inline314,11008
# undef __always_inline__always_inline316,11084
# define __always_inline __always_inline317,11108
# define __attribute_artificial__ __attribute_artificial__323,11309
# define __attribute_artificial__ __attribute_artificial__325,11382
#  define __extern_inline __extern_inline341,12168
#  define __extern_always_inline __extern_always_inline342,12243
#  define __extern_inline __extern_inline345,12343
#  define __extern_always_inline __extern_always_inline346,12385
# define __fortify_function __fortify_function351,12487
# define __va_arg_pack(__va_arg_pack357,12730
# define __va_arg_pack_len(__va_arg_pack_len358,12780
# define __extension__	__extension__366,13100
# define __restrict	__restrict371,13220
# define __restrict_arr	__restrict_arr378,13438
#  define __restrict_arr	__restrict_arr381,13496
#   define __restrict_arr	__restrict_arr384,13623
#   define __restrict_arr	__restrict_arr387,13702
# define __glibc_unlikely(__glibc_unlikely393,13793
# define __glibc_likely(__glibc_likely394,13854
# define __glibc_unlikely(__glibc_unlikely396,13919
# define __glibc_likely(__glibc_likely397,13958
#  define _Noreturn _Noreturn404,14154
#  define _Noreturn_Noreturn406,14212
# define __attribute_nonstring__ __attribute_nonstring__414,14452
# define __attribute_nonstring____attribute_nonstring__416,14523
# define _Static_assert(_Static_assert422,14748
# define __LDBL_COMPAT __LDBL_COMPAT431,15055
#  define __LDBL_REDIR1(__LDBL_REDIR1433,15099
#  define __LDBL_REDIR(__LDBL_REDIR434,15175
#  define __LDBL_REDIR1_NTH(__LDBL_REDIR1_NTH436,15259
#  define __LDBL_REDIR_NTH(__LDBL_REDIR_NTH437,15343
#  define __LDBL_REDIR1_DECL(__LDBL_REDIR1_DECL439,15435
#  define __LDBL_REDIR_DECL(__LDBL_REDIR_DECL441,15537
#  define __REDIRECT_LDBL(__REDIRECT_LDBL443,15641
#  define __REDIRECT_NTH_LDBL(__REDIRECT_NTH_LDBL445,15736
# define __LDBL_REDIR1(__LDBL_REDIR1450,15904
# define __LDBL_REDIR(__LDBL_REDIR451,15958
# define __LDBL_REDIR1_NTH(__LDBL_REDIR1_NTH452,16004
# define __LDBL_REDIR_NTH(__LDBL_REDIR_NTH453,16070
# define __LDBL_REDIR_DECL(__LDBL_REDIR_DECL454,16128
#  define __REDIRECT_LDBL(__REDIRECT_LDBL456,16180
#  define __REDIRECT_NTH_LDBL(__REDIRECT_NTH_LDBL457,16258
# define __glibc_macro_warning1(__glibc_macro_warning1468,16633
# define __glibc_macro_warning(__glibc_macro_warning469,16693
# define __glibc_macro_warning(__glibc_macro_warning472,16788
# define __HAVE_GENERIC_SELECTION __HAVE_GENERIC_SELECTION487,17510
# define __HAVE_GENERIC_SELECTION __HAVE_GENERIC_SELECTION489,17552

/usr/include/bits/wordsize.h,419
wordsize.h1,0
# define __WORDSIZE	__WORDSIZE4,107
# define __WORDSIZE	__WORDSIZE6,136
#define __WORDSIZE32_SIZE_ULONG	__WORDSIZE32_SIZE_ULONG7,159
#define __WORDSIZE32_PTRDIFF_LONG	__WORDSIZE32_PTRDIFF_LONG8,194
# define __WORDSIZE_TIME64_COMPAT32	__WORDSIZE_TIME64_COMPAT3212,256
# define __SYSCALL_WORDSIZE	__SYSCALL_WORDSIZE14,359
# define __WORDSIZE_TIME64_COMPAT32	__WORDSIZE_TIME64_COMPAT3216,397

/usr/include/bits/long-double.h,19
long-double.h1,0

/usr/include/gnu/stubs.h,13
stubs.h1,0

/usr/include/gnu/stubs-64.h,646
stubs-64.h1,0
#define __stub___compat_bdflush__stub___compat_bdflush10,291
#define __stub_chflags__stub_chflags11,323
#define __stub_fattach__stub_fattach12,346
#define __stub_fchflags__stub_fchflags13,369
#define __stub_fdetach__stub_fdetach14,393
#define __stub_getmsg__stub_getmsg15,416
#define __stub_gtty__stub_gtty16,438
#define __stub_lchmod__stub_lchmod17,458
#define __stub_putmsg__stub_putmsg18,480
#define __stub_revoke__stub_revoke19,502
#define __stub_setlogin__stub_setlogin20,524
#define __stub_sigreturn__stub_sigreturn21,548
#define __stub_sstk__stub_sstk22,573
#define __stub_stty__stub_stty23,593

/usr/include/bits/posix1_lim.h,2195
posix1_lim.h1,0
#define	_BITS_POSIX1_LIM_H	_BITS_POSIX1_LIM_H25,948
#define _POSIX_AIO_LISTIO_MAX	_POSIX_AIO_LISTIO_MAX31,1093
#define _POSIX_AIO_MAX	_POSIX_AIO_MAX34,1192
#define	_POSIX_ARG_MAX	_POSIX_ARG_MAX37,1290
# define _POSIX_CHILD_MAX	_POSIX_CHILD_MAX41,1397
# define _POSIX_CHILD_MAX	_POSIX_CHILD_MAX43,1432
#define _POSIX_DELAYTIMER_MAX	_POSIX_DELAYTIMER_MAX47,1520
#define _POSIX_HOST_NAME_MAX	_POSIX_HOST_NAME_MAX51,1674
#define	_POSIX_LINK_MAX	_POSIX_LINK_MAX54,1745
#define	_POSIX_LOGIN_NAME_MAX	_POSIX_LOGIN_NAME_MAX57,1810
#define	_POSIX_MAX_CANON	_POSIX_MAX_CANON60,1903
#define	_POSIX_MAX_INPUT	_POSIX_MAX_INPUT64,2020
#define _POSIX_MQ_OPEN_MAX	_POSIX_MQ_OPEN_MAX67,2110
#define _POSIX_MQ_PRIO_MAX	_POSIX_MQ_PRIO_MAX70,2195
#define	_POSIX_NAME_MAX	_POSIX_NAME_MAX73,2264
# define _POSIX_NGROUPS_MAX	_POSIX_NGROUPS_MAX77,2381
# define _POSIX_NGROUPS_MAX	_POSIX_NGROUPS_MAX79,2417
# define _POSIX_OPEN_MAX	_POSIX_OPEN_MAX84,2534
# define _POSIX_OPEN_MAX	_POSIX_OPEN_MAX86,2568
# define _POSIX_FD_SETSIZE	_POSIX_FD_SETSIZE92,2739
#define	_POSIX_PATH_MAX	_POSIX_PATH_MAX96,2828
#define	_POSIX_PIPE_BUF	_POSIX_PIPE_BUF99,2923
#define _POSIX_RE_DUP_MAX	_POSIX_RE_DUP_MAX103,3088
#define _POSIX_RTSIG_MAX	_POSIX_RTSIG_MAX106,3191
#define _POSIX_SEM_NSEMS_MAX	_POSIX_SEM_NSEMS_MAX109,3267
#define _POSIX_SEM_VALUE_MAX	_POSIX_SEM_VALUE_MAX112,3338
#define _POSIX_SIGQUEUE_MAX	_POSIX_SIGQUEUE_MAX115,3417
#define	_POSIX_SSIZE_MAX	_POSIX_SSIZE_MAX118,3486
#define	_POSIX_STREAM_MAX	_POSIX_STREAM_MAX121,3576
#define _POSIX_SYMLINK_MAX	_POSIX_SYMLINK_MAX124,3652
#define _POSIX_SYMLOOP_MAX	_POSIX_SYMLOOP_MAX128,3803
#define _POSIX_TIMER_MAX	_POSIX_TIMER_MAX131,3871
#define	_POSIX_TTY_NAME_MAX	_POSIX_TTY_NAME_MAX134,3951
# define _POSIX_TZNAME_MAX	_POSIX_TZNAME_MAX138,4067
# define _POSIX_TZNAME_MAX	_POSIX_TZNAME_MAX140,4102
# define _POSIX_QLIMIT	_POSIX_QLIMIT145,4256
# define _POSIX_HIWAT	_POSIX_HIWAT149,4371
# define _POSIX_UIO_MAXIOV	_POSIX_UIO_MAXIOV152,4466
#define _POSIX_CLOCKRES_MIN	_POSIX_CLOCKRES_MIN156,4552
# define SSIZE_MAX	SSIZE_MAX164,4700
# define NGROUPS_MAX	NGROUPS_MAX172,4859

/usr/include/bits/local_lim.h,1325
local_lim.h1,0
# define __undef_NR_OPEN__undef_NR_OPEN25,1227
# define __undef_LINK_MAX__undef_LINK_MAX28,1276
# define __undef_OPEN_MAX__undef_OPEN_MAX31,1326
# define __undef_ARG_MAX__undef_ARG_MAX34,1375
# undef NR_OPENNR_OPEN42,1563
# undef __undef_NR_OPEN__undef_NR_OPEN43,1579
# undef LINK_MAXLINK_MAX47,1666
# undef __undef_LINK_MAX__undef_LINK_MAX48,1683
# undef OPEN_MAXOPEN_MAX52,1771
# undef __undef_OPEN_MAX__undef_OPEN_MAX53,1788
# undef ARG_MAXARG_MAX57,1874
# undef __undef_ARG_MAX__undef_ARG_MAX58,1890
#define _POSIX_THREAD_KEYS_MAX	_POSIX_THREAD_KEYS_MAX62,1966
#define PTHREAD_KEYS_MAX	PTHREAD_KEYS_MAX64,2056
#define _POSIX_THREAD_DESTRUCTOR_ITERATIONS	_POSIX_THREAD_DESTRUCTOR_ITERATIONS67,2162
#define PTHREAD_DESTRUCTOR_ITERATIONS	PTHREAD_DESTRUCTOR_ITERATIONS69,2262
#define _POSIX_THREAD_THREADS_MAX	_POSIX_THREAD_THREADS_MAX72,2379
#undef PTHREAD_THREADS_MAXPTHREAD_THREADS_MAX74,2477
#define AIO_PRIO_DELTA_MAX	AIO_PRIO_DELTA_MAX78,2600
#define PTHREAD_STACK_MIN	PTHREAD_STACK_MIN81,2708
#define DELAYTIMER_MAX	DELAYTIMER_MAX84,2793
#define TTY_NAME_MAX	TTY_NAME_MAX87,2860
#define LOGIN_NAME_MAX	LOGIN_NAME_MAX90,2940
#define HOST_NAME_MAX	HOST_NAME_MAX93,3002
#define MQ_PRIO_MAX	MQ_PRIO_MAX96,3074
#define SEM_VALUE_MAX SEM_VALUE_MAX99,3147

/usr/include/linux/limits.h,541
limits.h1,0
#define _LINUX_LIMITS_H_LINUX_LIMITS_H3,87
#define NR_OPEN	NR_OPEN5,112
#define NGROUPS_MAX NGROUPS_MAX7,142
#define ARG_MAX ARG_MAX8,214
#define LINK_MAX LINK_MAX9,286
#define MAX_CANON MAX_CANON10,345
#define MAX_INPUT MAX_INPUT11,414
#define NAME_MAX NAME_MAX12,479
#define PATH_MAX PATH_MAX13,537
#define PIPE_BUF PIPE_BUF14,609
#define XATTR_NAME_MAX XATTR_NAME_MAX15,678
#define XATTR_SIZE_MAX XATTR_SIZE_MAX16,751
#define XATTR_LIST_MAX XATTR_LIST_MAX17,828
#define RTSIG_MAX	RTSIG_MAX19,906

/usr/include/bits/posix2_lim.h,1001
posix2_lim.h1,0
#define	_BITS_POSIX2_LIM_H	_BITS_POSIX2_LIM_H23,889
#define	_POSIX2_BC_BASE_MAX	_POSIX2_BC_BASE_MAX27,995
#define	_POSIX2_BC_DIM_MAX	_POSIX2_BC_DIM_MAX30,1107
#define	_POSIX2_BC_SCALE_MAX	_POSIX2_BC_SCALE_MAX33,1203
#define	_POSIX2_BC_STRING_MAX	_POSIX2_BC_STRING_MAX36,1314
#define	_POSIX2_COLL_WEIGHTS_MAX	_POSIX2_COLL_WEIGHTS_MAX40,1489
#define	_POSIX2_EXPR_NEST_MAX	_POSIX2_EXPR_NEST_MAX44,1630
#define	_POSIX2_LINE_MAX	_POSIX2_LINE_MAX47,1720
#define	_POSIX2_RE_DUP_MAX	_POSIX2_RE_DUP_MAX51,1883
#define	_POSIX2_CHARCLASS_NAME_MAX	_POSIX2_CHARCLASS_NAME_MAX55,2029
#define	BC_BASE_MAX	BC_BASE_MAX63,2236
#define	BC_DIM_MAX	BC_DIM_MAX66,2303
#define	BC_SCALE_MAX	BC_SCALE_MAX69,2370
#define	BC_STRING_MAX	BC_STRING_MAX72,2442
#define	COLL_WEIGHTS_MAX	COLL_WEIGHTS_MAX75,2519
#define	EXPR_NEST_MAX	EXPR_NEST_MAX78,2577
#define	LINE_MAX	LINE_MAX81,2646
#define	CHARCLASS_NAME_MAX	CHARCLASS_NAME_MAX84,2715
#define	RE_DUP_MAX RE_DUP_MAX88,2806

/usr/include/opencv2/core/hal/interface.h,4332
interface.h1,0
#define OPENCV_CORE_HAL_INTERFACE_HOPENCV_CORE_HAL_INTERFACE_H2,36
#define CV_HAL_ERROR_OK CV_HAL_ERROR_OK9,146
#define CV_HAL_ERROR_NOT_IMPLEMENTED CV_HAL_ERROR_NOT_IMPLEMENTED10,172
#define CV_HAL_ERROR_UNKNOWN CV_HAL_ERROR_UNKNOWN11,211
        typedef unsigned int uint;uint36,862
        typedef std::uint32_t uint;uint38,907
     typedef uint32_t uint;uint42,986
   typedef unsigned uint;uint45,1029
typedef signed char schar;schar48,1063
   typedef unsigned char uchar;uchar51,1109
   typedef unsigned short ushort;ushort52,1141
   typedef __int64 int64;int6456,1228
   typedef unsigned __int64 uint64;uint6457,1254
#  define CV_BIG_INT(CV_BIG_INT58,1290
#  define CV_BIG_UINT(CV_BIG_UINT59,1323
   typedef int64_t int64;int6461,1363
   typedef uint64_t uint64;uint6462,1389
#  define CV_BIG_INT(CV_BIG_INT63,1417
#  define CV_BIG_UINT(CV_BIG_UINT64,1449
#define CV_CN_MAX CV_CN_MAX67,1490
#define CV_CN_SHIFT CV_CN_SHIFT68,1516
#define CV_DEPTH_MAX CV_DEPTH_MAX69,1540
#define CV_8U CV_8U71,1582
#define CV_8S CV_8S72,1600
#define CV_16U CV_16U73,1618
#define CV_16S CV_16S74,1636
#define CV_32S CV_32S75,1654
#define CV_32F CV_32F76,1672
#define CV_64F CV_64F77,1690
#define CV_USRTYPE1 CV_USRTYPE178,1708
#define CV_MAT_DEPTH_MASK CV_MAT_DEPTH_MASK80,1731
#define CV_MAT_DEPTH(CV_MAT_DEPTH81,1782
#define CV_MAKETYPE(CV_MAKETYPE83,1845
#define CV_MAKE_TYPE CV_MAKE_TYPE84,1925
#define CV_8UC1 CV_8UC186,1959
#define CV_8UC2 CV_8UC287,1996
#define CV_8UC3 CV_8UC388,2033
#define CV_8UC4 CV_8UC489,2070
#define CV_8UC(CV_8UC90,2107
#define CV_8SC1 CV_8SC192,2149
#define CV_8SC2 CV_8SC293,2186
#define CV_8SC3 CV_8SC394,2223
#define CV_8SC4 CV_8SC495,2260
#define CV_8SC(CV_8SC96,2297
#define CV_16UC1 CV_16UC198,2339
#define CV_16UC2 CV_16UC299,2378
#define CV_16UC3 CV_16UC3100,2417
#define CV_16UC4 CV_16UC4101,2456
#define CV_16UC(CV_16UC102,2495
#define CV_16SC1 CV_16SC1104,2539
#define CV_16SC2 CV_16SC2105,2578
#define CV_16SC3 CV_16SC3106,2617
#define CV_16SC4 CV_16SC4107,2656
#define CV_16SC(CV_16SC108,2695
#define CV_32SC1 CV_32SC1110,2739
#define CV_32SC2 CV_32SC2111,2778
#define CV_32SC3 CV_32SC3112,2817
#define CV_32SC4 CV_32SC4113,2856
#define CV_32SC(CV_32SC114,2895
#define CV_32FC1 CV_32FC1116,2939
#define CV_32FC2 CV_32FC2117,2978
#define CV_32FC3 CV_32FC3118,3017
#define CV_32FC4 CV_32FC4119,3056
#define CV_32FC(CV_32FC120,3095
#define CV_64FC1 CV_64FC1122,3139
#define CV_64FC2 CV_64FC2123,3178
#define CV_64FC3 CV_64FC3124,3217
#define CV_64FC4 CV_64FC4125,3256
#define CV_64FC(CV_64FC126,3295
#define CV_HAL_CMP_EQ CV_HAL_CMP_EQ132,3405
#define CV_HAL_CMP_GT CV_HAL_CMP_GT133,3429
#define CV_HAL_CMP_GE CV_HAL_CMP_GE134,3453
#define CV_HAL_CMP_LT CV_HAL_CMP_LT135,3477
#define CV_HAL_CMP_LE CV_HAL_CMP_LE136,3501
#define CV_HAL_CMP_NE CV_HAL_CMP_NE137,3525
#define CV_HAL_BORDER_CONSTANT CV_HAL_BORDER_CONSTANT143,3622
#define CV_HAL_BORDER_REPLICATE CV_HAL_BORDER_REPLICATE144,3655
#define CV_HAL_BORDER_REFLECT CV_HAL_BORDER_REFLECT145,3689
#define CV_HAL_BORDER_WRAP CV_HAL_BORDER_WRAP146,3721
#define CV_HAL_BORDER_REFLECT_101 CV_HAL_BORDER_REFLECT_101147,3750
#define CV_HAL_BORDER_TRANSPARENT CV_HAL_BORDER_TRANSPARENT148,3786
#define CV_HAL_BORDER_ISOLATED CV_HAL_BORDER_ISOLATED149,3822
#define CV_HAL_DFT_INVERSE CV_HAL_DFT_INVERSE154,3891
#define CV_HAL_DFT_SCALE CV_HAL_DFT_SCALE155,3927
#define CV_HAL_DFT_ROWS CV_HAL_DFT_ROWS156,3963
#define CV_HAL_DFT_COMPLEX_OUTPUT CV_HAL_DFT_COMPLEX_OUTPUT157,3999
#define CV_HAL_DFT_REAL_OUTPUT CV_HAL_DFT_REAL_OUTPUT158,4036
#define CV_HAL_DFT_TWO_STAGE CV_HAL_DFT_TWO_STAGE159,4073
#define CV_HAL_DFT_STAGE_COLS CV_HAL_DFT_STAGE_COLS160,4110
#define CV_HAL_DFT_IS_CONTINUOUS CV_HAL_DFT_IS_CONTINUOUS161,4147
#define CV_HAL_DFT_IS_INPLACE CV_HAL_DFT_IS_INPLACE162,4184
#define CV_HAL_SVD_NO_UV CV_HAL_SVD_NO_UV167,4254
#define CV_HAL_SVD_SHORT_UV CV_HAL_SVD_SHORT_UV168,4284
#define CV_HAL_SVD_MODIFY_A CV_HAL_SVD_MODIFY_A169,4314
#define CV_HAL_SVD_FULL_UV CV_HAL_SVD_FULL_UV170,4344
#define CV_HAL_GEMM_1_T CV_HAL_GEMM_1_T175,4410
#define CV_HAL_GEMM_2_T CV_HAL_GEMM_2_T176,4436
#define CV_HAL_GEMM_3_T CV_HAL_GEMM_3_T177,4462

/usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/stddef.h,4942
stddef.h1,0
#define _STDDEF_H_STDDEF_H39,1623
#define _STDDEF_H__STDDEF_H_40,1641
#define _ANSI_STDDEF_H_ANSI_STDDEF_H42,1710
#define _SIZE_T_SIZE_T65,2725
#define _PTRDIFF_T_PTRDIFF_T68,2803
#define _WCHAR_T_WCHAR_T74,2996
#undef _PTRDIFF_T__PTRDIFF_T_79,3139
#undef _BSD_PTRDIFF_T__BSD_PTRDIFF_T_80,3158
#undef _SIZE_T__SIZE_T_83,3240
#undef _BSD_SIZE_T__BSD_SIZE_T_84,3256
#undef _WCHAR_T__WCHAR_T_87,3336
#undef _BSD_WCHAR_T__BSD_WCHAR_T_88,3353
#undef _PTRDIFF_T__PTRDIFF_T_95,3637
#undef _TYPE_ptrdiff_t_TYPE_ptrdiff_t106,4170
#undef _TYPE_size_t_TYPE_size_t110,4294
#undef _TYPE_wchar_t_TYPE_wchar_t114,4418
#define _PTRDIFF_T_PTRDIFF_T137,5220
#define _T_PTRDIFF__T_PTRDIFF_138,5239
#define _T_PTRDIFF_T_PTRDIFF139,5259
#define __PTRDIFF_T__PTRDIFF_T140,5278
#define _PTRDIFF_T__PTRDIFF_T_141,5298
#define _BSD_PTRDIFF_T__BSD_PTRDIFF_T_142,5318
#define ___int_ptrdiff_t_h___int_ptrdiff_t_h143,5342
#define _GCC_PTRDIFF_T_GCC_PTRDIFF_T144,5369
#define _PTRDIFF_T_DECLARED_PTRDIFF_T_DECLARED145,5392
#define __PTRDIFF_TYPE__ __PTRDIFF_TYPE__147,5445
typedef __PTRDIFF_TYPE__ ptrdiff_t;ptrdiff_t149,5486
#undef	__need_ptrdiff_t__need_ptrdiff_t161,5823
#define __size_t__	__size_t__187,6536
#define __SIZE_T__	__SIZE_T__188,6566
#define _SIZE_T_SIZE_T189,6606
#define _SYS_SIZE_T_H_SYS_SIZE_T_H190,6622
#define _T_SIZE__T_SIZE_191,6644
#define _T_SIZE_T_SIZE192,6661
#define __SIZE_T__SIZE_T193,6677
#define _SIZE_T__SIZE_T_194,6694
#define _BSD_SIZE_T__BSD_SIZE_T_195,6711
#define _SIZE_T_DEFINED__SIZE_T_DEFINED_196,6732
#define _SIZE_T_DEFINED_SIZE_T_DEFINED197,6757
#define _BSD_SIZE_T_DEFINED_	_BSD_SIZE_T_DEFINED_198,6781
#define _SIZE_T_DECLARED	_SIZE_T_DECLARED199,6823
#define ___int_size_t_h___int_size_t_h200,6864
#define _GCC_SIZE_T_GCC_SIZE_T201,6888
#define _SIZET__SIZET_202,6908
#define __size_t__size_t210,7172
#define __SIZE_TYPE__ __SIZE_TYPE__213,7218
typedef __SIZE_TYPE__ size_t;size_t216,7311
typedef long ssize_t;ssize_t218,7357
#undef	__need_size_t__need_size_t238,7885
#define __wchar_t__	__wchar_t__267,8758
#define __WCHAR_T__	__WCHAR_T__268,8789
#define _WCHAR_T_WCHAR_T269,8830
#define _T_WCHAR__T_WCHAR_270,8847
#define _T_WCHAR_T_WCHAR271,8865
#define __WCHAR_T__WCHAR_T272,8882
#define _WCHAR_T__WCHAR_T_273,8900
#define _BSD_WCHAR_T__BSD_WCHAR_T_274,8918
#define _WCHAR_T_DEFINED__WCHAR_T_DEFINED_275,8940
#define _WCHAR_T_DEFINED_WCHAR_T_DEFINED276,8966
#define _WCHAR_T_H_WCHAR_T_H277,8991
#define ___int_wchar_t_h___int_wchar_t_h278,9010
#define __INT_WCHAR_T_H__INT_WCHAR_T_H279,9035
#define _GCC_WCHAR_T_GCC_WCHAR_T280,9059
#define _WCHAR_T_DECLARED_WCHAR_T_DECLARED281,9080
#undef _BSD_WCHAR_T__BSD_WCHAR_T_294,9743
typedef _BSD_RUNE_T_ rune_t;rune_t297,9840
#define _BSD_WCHAR_T_DEFINED__BSD_WCHAR_T_DEFINED_298,9869
#define _BSD_RUNE_T_DEFINED_	_BSD_RUNE_T_DEFINED_299,9899
#undef _BSD_RUNE_T__BSD_RUNE_T_305,10268
typedef __rune_t        rune_t;rune_t317,10631
#define _RUNE_T_DECLARED_RUNE_T_DECLARED318,10663
#define __WCHAR_TYPE__ __WCHAR_TYPE__325,10740
#undef	__need_wchar_t__need_wchar_t347,11039
#define _WINT_T_WINT_T352,11149
#define __WINT_TYPE__ __WINT_TYPE__355,11188
typedef __WINT_TYPE__ wint_t;wint_t357,11230
#undef __need_wint_t__need_wint_t359,11267
#undef _PTRDIFF_T__PTRDIFF_T_370,11819
#undef _BSD_PTRDIFF_T__BSD_PTRDIFF_T_371,11838
#undef _SIZE_T__SIZE_T_374,11888
#undef _BSD_SIZE_T__BSD_SIZE_T_375,11904
#undef _WCHAR_T__WCHAR_T_378,11952
#undef _BSD_WCHAR_T__BSD_WCHAR_T_379,11969
#undef _PTRDIFF_T__PTRDIFF_T_383,12065
#undef _BSD_PTRDIFF_T__BSD_PTRDIFF_T_384,12084
#undef _SIZE_T__SIZE_T_387,12133
#undef _BSD_SIZE_T__BSD_SIZE_T_388,12149
#undef _WCHAR_T__WCHAR_T_391,12196
#undef _BSD_WCHAR_T__BSD_WCHAR_T_392,12213
#undef NULL	NULL401,12433
#define NULL NULL403,12502
#define NULL NULL406,12560
#define NULL NULL408,12603
#undef	__need_NULL__need_NULL412,12714
#define offsetof(offsetof417,12808
#define _GCC_MAX_ALIGN_T_GCC_MAX_ALIGN_T422,13019
  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));__max_align_ll427,13211
  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));__anon14::__max_align_ll427,13211
  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));__max_align_ld428,13292
  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));__anon14::__max_align_ld428,13292
  __float128 __max_align_f128 __attribute__((__aligned__(__alignof(__float128))));__max_align_f128435,13673
  __float128 __max_align_f128 __attribute__((__aligned__(__alignof(__float128))));__anon14::__max_align_f128435,13673
} max_align_t;max_align_t437,13763
#define _GXX_NULLPTR_T_GXX_NULLPTR_T443,13888
  typedef decltype(nullptr) nullptr_t;nullptr_t444,13911

/usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/stdbool.h,325
stdbool.h1,0
#define _STDBOOL_H_STDBOOL_H29,1046
#define bool	bool33,1087
#define true	true34,1106
#define false	false35,1121
#define _Bool	_Bool40,1214
#define bool	bool44,1318
#define false	false45,1336
#define true	true46,1356
#define __bool_true_false_are_defined	__bool_true_false_are_defined52,1460

/usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/stdint.h,300
stdint.h1,0
#  undef __STDC_LIMIT_MACROS__STDC_LIMIT_MACROS4,98
#  define __STDC_LIMIT_MACROS__STDC_LIMIT_MACROS5,127
#  undef __STDC_CONSTANT_MACROS__STDC_CONSTANT_MACROS6,157
#  define __STDC_CONSTANT_MACROS__STDC_CONSTANT_MACROS7,189
#define _GCC_WRAP_STDINT_H_GCC_WRAP_STDINT_H13,294

/usr/include/stdint.h,7280
stdint.h1,0
#define _STDINT_H	_STDINT_H23,857
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION25,878
typedef signed char		int_least8_t;int_least8_t43,1208
typedef short int		int_least16_t;int_least16_t44,1243
typedef int			int_least32_t;int_least32_t45,1277
typedef long int		int_least64_t;int_least64_t47,1327
typedef long long int		int_least64_t;int_least64_t50,1380
typedef unsigned char		uint_least8_t;uint_least8_t54,1443
typedef unsigned short int	uint_least16_t;uint_least16_t55,1481
typedef unsigned int		uint_least32_t;uint_least32_t56,1524
typedef unsigned long int	uint_least64_t;uint_least64_t58,1583
typedef unsigned long long int	uint_least64_t;uint_least64_t61,1645
typedef signed char		int_fast8_t;int_fast8_t68,1736
typedef long int		int_fast16_t;int_fast16_t70,1791
typedef long int		int_fast32_t;int_fast32_t71,1823
typedef long int		int_fast64_t;int_fast64_t72,1855
typedef int			int_fast16_t;int_fast16_t74,1893
typedef int			int_fast32_t;int_fast32_t75,1921
typedef long long int		int_fast64_t;int_fast64_t77,1963
typedef unsigned char		uint_fast8_t;uint_fast8_t81,2025
typedef unsigned long int	uint_fast16_t;uint_fast16_t83,2083
typedef unsigned long int	uint_fast32_t;uint_fast32_t84,2124
typedef unsigned long int	uint_fast64_t;uint_fast64_t85,2165
typedef unsigned int		uint_fast16_t;uint_fast16_t87,2212
typedef unsigned int		uint_fast32_t;uint_fast32_t88,2249
typedef unsigned long long int	uint_fast64_t;uint_fast64_t90,2300
typedef long int		intptr_t;intptr_t97,2440
#  define __intptr_t_defined__intptr_t_defined98,2468
typedef unsigned long int	uintptr_t;uintptr_t100,2505
typedef int			intptr_t;intptr_t103,2576
#  define __intptr_t_defined__intptr_t_defined104,2600
typedef unsigned int		uintptr_t;uintptr_t106,2637
typedef __intmax_t		intmax_t;intmax_t111,2710
typedef __uintmax_t		uintmax_t;uintmax_t112,2740
#  define __INT64_C(__INT64_C116,2796
#  define __UINT64_C(__UINT64_C117,2826
#  define __INT64_C(__INT64_C119,2865
#  define __UINT64_C(__UINT64_C120,2896
# define INT8_MIN	INT8_MIN126,3013
# define INT16_MIN	INT16_MIN127,3039
# define INT32_MIN	INT32_MIN128,3070
# define INT64_MIN	INT64_MIN129,3106
# define INT8_MAX	INT8_MAX131,3203
# define INT16_MAX	INT16_MAX132,3228
# define INT32_MAX	INT32_MAX133,3256
# define INT64_MAX	INT64_MAX134,3289
# define UINT8_MAX	UINT8_MAX137,3386
# define UINT16_MAX	UINT16_MAX138,3412
# define UINT32_MAX	UINT32_MAX139,3441
# define UINT64_MAX	UINT64_MAX140,3476
# define INT_LEAST8_MIN	INT_LEAST8_MIN144,3597
# define INT_LEAST16_MIN	INT_LEAST16_MIN145,3629
# define INT_LEAST32_MIN	INT_LEAST32_MIN146,3665
# define INT_LEAST64_MIN	INT_LEAST64_MIN147,3706
# define INT_LEAST8_MAX	INT_LEAST8_MAX149,3830
# define INT_LEAST16_MAX	INT_LEAST16_MAX150,3861
# define INT_LEAST32_MAX	INT_LEAST32_MAX151,3894
# define INT_LEAST64_MAX	INT_LEAST64_MAX152,3932
# define UINT_LEAST8_MAX	UINT_LEAST8_MAX155,4056
# define UINT_LEAST16_MAX	UINT_LEAST16_MAX156,4087
# define UINT_LEAST32_MAX	UINT_LEAST32_MAX157,4121
# define UINT_LEAST64_MAX	UINT_LEAST64_MAX158,4161
# define INT_FAST8_MIN	INT_FAST8_MIN162,4292
#  define INT_FAST16_MIN	INT_FAST16_MIN164,4345
#  define INT_FAST32_MIN	INT_FAST32_MIN165,4396
#  define INT_FAST16_MIN	INT_FAST16_MIN167,4454
#  define INT_FAST32_MIN	INT_FAST32_MIN168,4495
# define INT_FAST64_MIN	INT_FAST64_MIN170,4544
# define INT_FAST8_MAX	INT_FAST8_MAX172,4673
#  define INT_FAST16_MAX	INT_FAST16_MAX174,4725
#  define INT_FAST32_MAX	INT_FAST32_MAX175,4773
#  define INT_FAST16_MAX	INT_FAST16_MAX177,4828
#  define INT_FAST32_MAX	INT_FAST32_MAX178,4866
# define INT_FAST64_MAX	INT_FAST64_MAX180,4912
# define UINT_FAST8_MAX	UINT_FAST8_MAX183,5041
#  define UINT_FAST16_MAX	UINT_FAST16_MAX185,5094
#  define UINT_FAST32_MAX	UINT_FAST32_MAX186,5145
#  define UINT_FAST16_MAX	UINT_FAST16_MAX188,5203
#  define UINT_FAST32_MAX	UINT_FAST32_MAX189,5243
# define UINT_FAST64_MAX	UINT_FAST64_MAX191,5291
#  define INTPTR_MIN	INTPTR_MIN196,5442
#  define INTPTR_MAX	INTPTR_MAX197,5490
#  define UINTPTR_MAX	UINTPTR_MAX198,5535
#  define INTPTR_MIN	INTPTR_MIN200,5590
#  define INTPTR_MAX	INTPTR_MAX201,5628
#  define UINTPTR_MAX	UINTPTR_MAX202,5663
# define INTMAX_MIN	INTMAX_MIN207,5759
# define INTMAX_MAX	INTMAX_MAX209,5865
# define UINTMAX_MAX	UINTMAX_MAX212,5971
#  define PTRDIFF_MIN	PTRDIFF_MIN219,6126
#  define PTRDIFF_MAX	PTRDIFF_MAX220,6175
#   define PTRDIFF_MIN	PTRDIFF_MIN223,6260
#   define PTRDIFF_MAX	PTRDIFF_MAX224,6301
#   define PTRDIFF_MIN	PTRDIFF_MIN226,6347
#   define PTRDIFF_MAX	PTRDIFF_MAX227,6387
# define SIG_ATOMIC_MIN	SIG_ATOMIC_MIN232,6475
# define SIG_ATOMIC_MAX	SIG_ATOMIC_MAX233,6516
#  define SIZE_MAX	SIZE_MAX237,6608
#   define SIZE_MAX	SIZE_MAX240,6690
#   define SIZE_MAX	SIZE_MAX242,6734
#  define WCHAR_MIN	WCHAR_MIN249,6893
#  define WCHAR_MAX	WCHAR_MAX250,6926
# define WINT_MIN	WINT_MIN254,6995
# define WINT_MAX	WINT_MAX255,7019
# define INT8_C(INT8_C258,7068
# define INT16_C(INT16_C259,7089
# define INT32_C(INT32_C260,7111
#  define INT64_C(INT64_C262,7155
#  define INT64_C(INT64_C264,7190
# define UINT8_C(UINT8_C268,7245
# define UINT16_C(UINT16_C269,7267
# define UINT32_C(UINT32_C270,7290
#  define UINT64_C(UINT64_C272,7340
#  define UINT64_C(UINT64_C274,7377
#  define INTMAX_C(INTMAX_C279,7460
#  define UINTMAX_C(UINTMAX_C280,7489
#  define INTMAX_C(INTMAX_C282,7527
#  define UINTMAX_C(UINTMAX_C283,7557
# define INT8_WIDTH INT8_WIDTH288,7635
# define UINT8_WIDTH UINT8_WIDTH289,7657
# define INT16_WIDTH INT16_WIDTH290,7680
# define UINT16_WIDTH UINT16_WIDTH291,7704
# define INT32_WIDTH INT32_WIDTH292,7729
# define UINT32_WIDTH UINT32_WIDTH293,7753
# define INT64_WIDTH INT64_WIDTH294,7778
# define UINT64_WIDTH UINT64_WIDTH295,7802
# define INT_LEAST8_WIDTH INT_LEAST8_WIDTH297,7828
# define UINT_LEAST8_WIDTH UINT_LEAST8_WIDTH298,7856
# define INT_LEAST16_WIDTH INT_LEAST16_WIDTH299,7885
# define UINT_LEAST16_WIDTH UINT_LEAST16_WIDTH300,7915
# define INT_LEAST32_WIDTH INT_LEAST32_WIDTH301,7946
# define UINT_LEAST32_WIDTH UINT_LEAST32_WIDTH302,7976
# define INT_LEAST64_WIDTH INT_LEAST64_WIDTH303,8007
# define UINT_LEAST64_WIDTH UINT_LEAST64_WIDTH304,8037
# define INT_FAST8_WIDTH INT_FAST8_WIDTH306,8069
# define UINT_FAST8_WIDTH UINT_FAST8_WIDTH307,8096
# define INT_FAST16_WIDTH INT_FAST16_WIDTH308,8124
# define UINT_FAST16_WIDTH UINT_FAST16_WIDTH309,8161
# define INT_FAST32_WIDTH INT_FAST32_WIDTH310,8199
# define UINT_FAST32_WIDTH UINT_FAST32_WIDTH311,8236
# define INT_FAST64_WIDTH INT_FAST64_WIDTH312,8274
# define UINT_FAST64_WIDTH UINT_FAST64_WIDTH313,8303
# define INTPTR_WIDTH INTPTR_WIDTH315,8334
# define UINTPTR_WIDTH UINTPTR_WIDTH316,8367
# define INTMAX_WIDTH INTMAX_WIDTH318,8402
# define UINTMAX_WIDTH UINTMAX_WIDTH319,8427
# define PTRDIFF_WIDTH PTRDIFF_WIDTH321,8454
# define SIG_ATOMIC_WIDTH SIG_ATOMIC_WIDTH322,8488
# define SIZE_WIDTH SIZE_WIDTH323,8517
# define WCHAR_WIDTH WCHAR_WIDTH324,8548
# define WINT_WIDTH WINT_WIDTH325,8572

/usr/include/bits/types.h,5406
types.h1,0
#define	_BITS_TYPES_H	_BITS_TYPES_H24,951
typedef unsigned char __u_char;__u_char30,1052
typedef unsigned short int __u_short;__u_short31,1084
typedef unsigned int __u_int;__u_int32,1122
typedef unsigned long int __u_long;__u_long33,1152
typedef signed char __int8_t;__int8_t36,1265
typedef unsigned char __uint8_t;__uint8_t37,1295
typedef signed short int __int16_t;__int16_t38,1328
typedef unsigned short int __uint16_t;__uint16_t39,1364
typedef signed int __int32_t;__int32_t40,1403
typedef unsigned int __uint32_t;__uint32_t41,1433
typedef signed long int __int64_t;__int64_t43,1487
typedef unsigned long int __uint64_t;__uint64_t44,1522
__extension__ typedef signed long long int __int64_t;__int64_t46,1566
__extension__ typedef unsigned long long int __uint64_t;__uint64_t47,1620
typedef long int __quad_t;__quad_t52,1737
typedef unsigned long int __u_quad_t;__u_quad_t53,1764
__extension__ typedef long long int __quad_t;__quad_t55,1808
__extension__ typedef unsigned long long int __u_quad_t;__u_quad_t56,1854
typedef long int __intmax_t;__intmax_t61,1971
typedef unsigned long int __uintmax_t;__uintmax_t62,2000
__extension__ typedef long long int __intmax_t;__intmax_t64,2045
__extension__ typedef unsigned long long int __uintmax_t;__uintmax_t65,2093
#define	__S16_TYPE	__S16_TYPE98,3724
#define __U16_TYPE	__U16_TYPE99,3754
#define	__S32_TYPE	__S32_TYPE100,3793
#define __U32_TYPE	__U32_TYPE101,3817
#define __SLONGWORD_TYPE	__SLONGWORD_TYPE102,3850
#define __ULONGWORD_TYPE	__ULONGWORD_TYPE103,3884
# define __SQUAD_TYPE	__SQUAD_TYPE105,3948
# define __UQUAD_TYPE	__UQUAD_TYPE106,3980
# define __SWORD_TYPE	__SWORD_TYPE107,4014
# define __UWORD_TYPE	__UWORD_TYPE108,4041
# define __SLONG32_TYPE	__SLONG32_TYPE109,4077
# define __ULONG32_TYPE	__ULONG32_TYPE110,4111
# define __S64_TYPE	__S64_TYPE111,4154
# define __U64_TYPE	__U64_TYPE112,4184
# define __STD_TYPE	__STD_TYPE115,4330
# define __SQUAD_TYPE	__SQUAD_TYPE117,4396
# define __UQUAD_TYPE	__UQUAD_TYPE118,4428
# define __SWORD_TYPE	__SWORD_TYPE119,4469
# define __UWORD_TYPE	__UWORD_TYPE120,4501
# define __SLONG32_TYPE	__SLONG32_TYPE121,4542
# define __ULONG32_TYPE	__ULONG32_TYPE122,4571
# define __S64_TYPE	__S64_TYPE123,4609
# define __U64_TYPE	__U64_TYPE124,4639
# define __STD_TYPE	__STD_TYPE126,4734
__STD_TYPE __DEV_T_TYPE __dev_t;	/* Type of device numbers.  */__dev_t133,4848
__STD_TYPE __UID_T_TYPE __uid_t;	/* Type of user identifications.  */__uid_t134,4912
__STD_TYPE __GID_T_TYPE __gid_t;	/* Type of group identifications.  */__gid_t135,4982
__STD_TYPE __INO_T_TYPE __ino_t;	/* Type of file serial numbers.  */__ino_t136,5053
__STD_TYPE __INO64_T_TYPE __ino64_t;	/* Type of file serial numbers (LFS).*/__ino64_t137,5122
__STD_TYPE __MODE_T_TYPE __mode_t;	/* Type of file attribute bitmasks.  */__mode_t138,5199
__STD_TYPE __NLINK_T_TYPE __nlink_t;	/* Type of file link counts.  */__nlink_t139,5274
__STD_TYPE __OFF_T_TYPE __off_t;	/* Type of file sizes and offsets.  */__off_t140,5344
__STD_TYPE __OFF64_T_TYPE __off64_t;	/* Type of file sizes and offsets (LFS).  */__off64_t141,5416
__STD_TYPE __PID_T_TYPE __pid_t;	/* Type of process identifications.  */__pid_t142,5498
__STD_TYPE __FSID_T_TYPE __fsid_t;	/* Type of file system IDs.  */__fsid_t143,5571
__STD_TYPE __CLOCK_T_TYPE __clock_t;	/* Type of CPU usage counts.  */__clock_t144,5638
__STD_TYPE __RLIM_T_TYPE __rlim_t;	/* Type for resource measurement.  */__rlim_t145,5708
__STD_TYPE __RLIM64_T_TYPE __rlim64_t;	/* Type for resource measurement (LFS).  */__rlim64_t146,5781
__STD_TYPE __ID_T_TYPE __id_t;		/* General type for IDs.  */__id_t147,5864
__STD_TYPE __TIME_T_TYPE __time_t;	/* Seconds since the Epoch.  */__time_t148,5925
__STD_TYPE __USECONDS_T_TYPE __useconds_t; /* Count of microseconds.  */__useconds_t149,5992
__STD_TYPE __SUSECONDS_T_TYPE __suseconds_t; /* Signed count of microseconds.  */__suseconds_t150,6065
__STD_TYPE __DADDR_T_TYPE __daddr_t;	/* The type of a disk address.  */__daddr_t152,6148
__STD_TYPE __KEY_T_TYPE __key_t;	/* Type of an IPC key.  */__key_t153,6220
__STD_TYPE __CLOCKID_T_TYPE __clockid_t;__clockid_t156,6332
__STD_TYPE __TIMER_T_TYPE __timer_t;__timer_t159,6418
__STD_TYPE __BLKSIZE_T_TYPE __blksize_t;__blksize_t162,6493
__STD_TYPE __BLKCNT_T_TYPE __blkcnt_t;__blkcnt_t167,6632
__STD_TYPE __BLKCNT64_T_TYPE __blkcnt64_t;__blkcnt64_t168,6671
__STD_TYPE __FSBLKCNT_T_TYPE __fsblkcnt_t;__fsblkcnt_t171,6756
__STD_TYPE __FSBLKCNT64_T_TYPE __fsblkcnt64_t;__fsblkcnt64_t172,6799
__STD_TYPE __FSFILCNT_T_TYPE __fsfilcnt_t;__fsfilcnt_t175,6887
__STD_TYPE __FSFILCNT64_T_TYPE __fsfilcnt64_t;__fsfilcnt64_t176,6930
__STD_TYPE __FSWORD_T_TYPE __fsword_t;__fsword_t179,7027
__STD_TYPE __SSIZE_T_TYPE __ssize_t; /* Type of a byte count, or error.  */__ssize_t181,7067
__STD_TYPE __SYSCALL_SLONG_TYPE __syscall_slong_t;__syscall_slong_t184,7190
__STD_TYPE __SYSCALL_ULONG_TYPE __syscall_ulong_t;__syscall_ulong_t186,7289
typedef __off64_t __loff_t;	/* Type of file sizes and offsets (LFS).  */__loff_t190,7448
typedef char *__caddr_t;__caddr_t191,7521
__STD_TYPE __SWORD_TYPE __intptr_t;__intptr_t194,7614
__STD_TYPE __U32_TYPE __socklen_t;__socklen_t197,7692
typedef int __sig_atomic_t;__sig_atomic_t202,7916
#undef __STD_TYPE__STD_TYPE204,7945

/usr/include/bits/typesizes.h,2254
typesizes.h1,0
#define	_BITS_TYPESIZES_H	_BITS_TYPESIZES_H24,997
# define __SYSCALL_SLONG_TYPE	__SYSCALL_SLONG_TYPE31,1259
# define __SYSCALL_ULONG_TYPE	__SYSCALL_ULONG_TYPE32,1302
# define __SYSCALL_SLONG_TYPE	__SYSCALL_SLONG_TYPE34,1351
# define __SYSCALL_ULONG_TYPE	__SYSCALL_ULONG_TYPE35,1398
#define __DEV_T_TYPE	__DEV_T_TYPE38,1453
#define __UID_T_TYPE	__UID_T_TYPE39,1488
#define __GID_T_TYPE	__GID_T_TYPE40,1521
#define __INO_T_TYPE	__INO_T_TYPE41,1554
#define __INO64_T_TYPE	__INO64_T_TYPE42,1597
#define __MODE_T_TYPE	__MODE_T_TYPE43,1634
# define __NLINK_T_TYPE	__NLINK_T_TYPE45,1686
# define __FSWORD_T_TYPE	__FSWORD_T_TYPE46,1732
# define __NLINK_T_TYPE	__NLINK_T_TYPE48,1784
# define __FSWORD_T_TYPE	__FSWORD_T_TYPE49,1822
#define __OFF_T_TYPE	__OFF_T_TYPE51,1867
#define __OFF64_T_TYPE	__OFF64_T_TYPE52,1910
#define __PID_T_TYPE	__PID_T_TYPE53,1947
#define __RLIM_T_TYPE	__RLIM_T_TYPE54,1980
#define __RLIM64_T_TYPE	__RLIM64_T_TYPE55,2024
#define __BLKCNT_T_TYPE	__BLKCNT_T_TYPE56,2062
#define __BLKCNT64_T_TYPE	__BLKCNT64_T_TYPE57,2108
#define __FSBLKCNT_T_TYPE	__FSBLKCNT_T_TYPE58,2147
#define __FSBLKCNT64_T_TYPE	__FSBLKCNT64_T_TYPE59,2194
#define __FSFILCNT_T_TYPE	__FSFILCNT_T_TYPE60,2235
#define __FSFILCNT64_T_TYPE	__FSFILCNT64_T_TYPE61,2282
#define __ID_T_TYPE	__ID_T_TYPE62,2323
#define __CLOCK_T_TYPE	__CLOCK_T_TYPE63,2355
#define __TIME_T_TYPE	__TIME_T_TYPE64,2400
#define __USECONDS_T_TYPE	__USECONDS_T_TYPE65,2444
#define __SUSECONDS_T_TYPE	__SUSECONDS_T_TYPE66,2481
#define __DADDR_T_TYPE	__DADDR_T_TYPE67,2529
#define __KEY_T_TYPE	__KEY_T_TYPE68,2564
#define __CLOCKID_T_TYPE	__CLOCKID_T_TYPE69,2597
#define __TIMER_T_TYPE	__TIMER_T_TYPE70,2633
#define __BLKSIZE_T_TYPE	__BLKSIZE_T_TYPE71,2664
#define __FSID_T_TYPE	__FSID_T_TYPE72,2710
#define __SSIZE_T_TYPE	__SSIZE_T_TYPE73,2758
#define __CPU_MASK_TYPE __CPU_MASK_TYPE74,2795
# define __OFF_T_MATCHES_OFF64_T	__OFF_T_MATCHES_OFF64_T80,3045
# define __INO_T_MATCHES_INO64_T	__INO_T_MATCHES_INO64_T83,3116
# define __RLIM_T_MATCHES_RLIM64_T	__RLIM_T_MATCHES_RLIM64_T86,3192
# define __RLIM_T_MATCHES_RLIM64_T	__RLIM_T_MATCHES_RLIM64_T88,3235
#define __FD_SETSIZE	__FD_SETSIZE92,3338

/usr/include/bits/wchar.h,309
wchar.h1,0
#define _BITS_WCHAR_H	_BITS_WCHAR_H20,848
# define __WCHAR_MAX	__WCHAR_MAX34,1562
# define __WCHAR_MAX	__WCHAR_MAX36,1617
# define __WCHAR_MAX	__WCHAR_MAX38,1666
# define __WCHAR_MIN	__WCHAR_MIN42,1737
# define __WCHAR_MIN	__WCHAR_MIN44,1792
# define __WCHAR_MIN	__WCHAR_MIN46,1831

/usr/include/bits/stdint-intn.h,240
stdint-intn.h1,0
#define _BITS_STDINT_INTN_H	_BITS_STDINT_INTN_H20,841
typedef __int8_t int8_t;int8_t24,897
typedef __int16_t int16_t;int16_t25,922
typedef __int32_t int32_t;int32_t26,949
typedef __int64_t int64_t;int64_t27,976

/usr/include/bits/stdint-uintn.h,255
stdint-uintn.h1,0
#define _BITS_STDINT_UINTN_H	_BITS_STDINT_UINTN_H20,843
typedef __uint8_t uint8_t;uint8_t24,900
typedef __uint16_t uint16_t;uint16_t25,927
typedef __uint32_t uint32_t;uint32_t26,956
typedef __uint64_t uint64_t;uint64_t27,985

/usr/include/opencv2/core/cv_cpu_dispatch.h,3315
cv_cpu_dispatch.h1,0
#define CV_CPU_OPTIMIZATION_NAMESPACE CV_CPU_OPTIMIZATION_NAMESPACE11,308
#define CV_CPU_OPTIMIZATION_NAMESPACE_BEGIN CV_CPU_OPTIMIZATION_NAMESPACE_BEGIN12,383
#define CV_CPU_OPTIMIZATION_NAMESPACE_END CV_CPU_OPTIMIZATION_NAMESPACE_END13,476
#define CV_CPU_OPTIMIZATION_NAMESPACE CV_CPU_OPTIMIZATION_NAMESPACE15,526
#define CV_CPU_OPTIMIZATION_NAMESPACE_BEGIN CV_CPU_OPTIMIZATION_NAMESPACE_BEGIN16,577
#define CV_CPU_OPTIMIZATION_NAMESPACE_END CV_CPU_OPTIMIZATION_NAMESPACE_END17,646
#define __CV_CPU_DISPATCH_CHAIN_END(__CV_CPU_DISPATCH_CHAIN_END21,699
#define __CV_CPU_DISPATCH(__CV_CPU_DISPATCH22,768
#define __CV_CPU_DISPATCH_EXPAND(__CV_CPU_DISPATCH_EXPAND23,884
#define CV_CPU_DISPATCH(CV_CPU_DISPATCH24,986
#  define CV_MMX CV_MMX33,1316
#  define CV_SSE CV_SSE34,1335
#  define CV_SSE2 CV_SSE235,1354
#  define CV_SSE3 CV_SSE339,1433
#  define CV_SSSE3 CV_SSSE343,1513
#  define CV_SSE4_1 CV_SSE4_147,1595
#  define CV_SSE4_2 CV_SSE4_251,1678
#      define CV_POPCNT_U64 CV_POPCNT_U6457,1805
#    define CV_POPCNT_U32 CV_POPCNT_U3259,1859
#      define CV_POPCNT_U64 CV_POPCNT_U6463,1966
#    define CV_POPCNT_U32 CV_POPCNT_U3265,2026
#  define CV_POPCNT CV_POPCNT67,2080
#  define CV_AVX CV_AVX71,2160
#  define CV_FP16 CV_FP1679,2349
#  define CV_AVX2 CV_AVX283,2428
#  define CV_AVX_512F CV_AVX_512F87,2511
#  define CV_AVX512_SKX CV_AVX512_SKX91,2600
#  define CV_FMA3 CV_FMA394,2660
# define CV_NEON CV_NEON100,2770
#  define CV_NEON CV_NEON103,2891
#  undef vectorvector112,3097
#  undef pixelpixel113,3113
#  undef boolbool114,3128
#  define CV_VSX CV_VSX115,3142
struct VZeroUpperGuard {VZeroUpperGuard121,3315
    inline ~VZeroUpperGuard() { _mm256_zeroupper(); }~VZeroUpperGuard125,3398
    inline ~VZeroUpperGuard() { _mm256_zeroupper(); }VZeroUpperGuard::~VZeroUpperGuard125,3398
#define __CV_AVX_GUARD __CV_AVX_GUARD127,3455
#define CV_AVX_GUARD CV_AVX_GUARD131,3570
#define CV_AVX_GUARDCV_AVX_GUARD133,3612
#  define CV_MMX CV_MMX144,3918
#  define CV_SSE CV_SSE145,3937
#  define CV_SSE2 CV_SSE2146,3956
# define CV_NEON CV_NEON150,4060
#  define CV_NEON CV_NEON153,4181
#  undef vectorvector156,4299
#  undef pixelpixel157,4315
#  undef boolbool158,4330
#  define CV_VSX CV_VSX159,4344
#  define CV_MMX CV_MMX167,4449
#  define CV_SSE CV_SSE170,4490
#  define CV_SSE2 CV_SSE2173,4532
#  define CV_SSE3 CV_SSE3176,4575
#  define CV_SSSE3 CV_SSSE3179,4619
#  define CV_SSE4_1 CV_SSE4_1182,4665
#  define CV_SSE4_2 CV_SSE4_2185,4712
#  define CV_POPCNT CV_POPCNT188,4759
#  define CV_AVX CV_AVX191,4803
#  define CV_FP16 CV_FP16194,4845
#  define CV_AVX2 CV_AVX2197,4888
#  define CV_FMA3 CV_FMA3200,4931
#  define CV_AVX_512F CV_AVX_512F203,4978
#  define CV_AVX_512BW CV_AVX_512BW206,5030
#  define CV_AVX_512CD CV_AVX_512CD209,5083
#  define CV_AVX_512DQ CV_AVX_512DQ212,5136
#  define CV_AVX_512ER CV_AVX_512ER215,5189
#  define CV_AVX_512IFMA512 CV_AVX_512IFMA512218,5247
#  define CV_AVX_512PF CV_AVX_512PF221,5305
#  define CV_AVX_512VBMI CV_AVX_512VBMI224,5360
#  define CV_AVX_512VL CV_AVX_512VL227,5415
#  define CV_AVX512_SKX CV_AVX512_SKX230,5469
#  define CV_NEON CV_NEON234,5519
#  define CV_VSX CV_VSX238,5562

/usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/emmintrin.h,16556
emmintrin.h1,0
#define _EMMINTRIN_H_INCLUDED_EMMINTRIN_H_INCLUDED28,1154
#define __DISABLE_SSE2____DISABLE_SSE2__36,1329
typedef double __v2df __attribute__ ((__vector_size__ (16)));__v2df40,1388
typedef long long __v2di __attribute__ ((__vector_size__ (16)));__v2di41,1450
typedef unsigned long long __v2du __attribute__ ((__vector_size__ (16)));__v2du42,1515
typedef int __v4si __attribute__ ((__vector_size__ (16)));__v4si43,1589
typedef unsigned int __v4su __attribute__ ((__vector_size__ (16)));__v4su44,1648
typedef short __v8hi __attribute__ ((__vector_size__ (16)));__v8hi45,1716
typedef unsigned short __v8hu __attribute__ ((__vector_size__ (16)));__v8hu46,1777
typedef char __v16qi __attribute__ ((__vector_size__ (16)));__v16qi47,1847
typedef unsigned char __v16qu __attribute__ ((__vector_size__ (16)));__v16qu48,1908
typedef long long __m128i __attribute__ ((__vector_size__ (16), __may_alias__));__m128i52,2104
typedef double __m128d __attribute__ ((__vector_size__ (16), __may_alias__));__m128d53,2185
typedef long long __m128i_u __attribute__ ((__vector_size__ (16), __may_alias__, __aligned__ (1)));__m128i_u56,2308
typedef double __m128d_u __attribute__ ((__vector_size__ (16), __may_alias__, __aligned__ (1)));__m128d_u57,2408
#define _MM_SHUFFLE2(_MM_SHUFFLE260,2568
_mm_set_sd (double __F)_mm_set_sd65,2778
_mm_set1_pd (double __F)_mm_set1_pd72,2998
_mm_set_pd1 (double __F)_mm_set_pd178,3165
_mm_set_pd (double __W, double __X)_mm_set_pd85,3379
_mm_setr_pd (double __W, double __X)_mm_setr_pd92,3622
_mm_undefined_pd (void)_mm_undefined_pd99,3836
_mm_setzero_pd (void)_mm_setzero_pd107,4024
_mm_move_sd (__m128d __A, __m128d __B)_mm_move_sd114,4249
_mm_load_pd (double const *__P)_mm_load_pd121,4526
_mm_loadu_pd (double const *__P)_mm_loadu_pd128,4758
_mm_load1_pd (double const *__P)_mm_load1_pd135,4973
_mm_load_sd (double const *__P)_mm_load_sd142,5194
_mm_load_pd1 (double const *__P)_mm_load_pd1148,5350
_mm_loadr_pd (double const *__P)_mm_loadr_pd155,5584
_mm_store_pd (double *__P, __m128d __A)_mm_store_pd163,5882
_mm_storeu_pd (double *__P, __m128d __A)_mm_storeu_pd170,6112
_mm_store_sd (double *__P, __m128d __A)_mm_store_sd177,6309
_mm_cvtsd_f64 (__m128d __A)_mm_cvtsd_f64183,6471
_mm_storel_pd (double *__P, __m128d __A)_mm_storel_pd189,6619
_mm_storeh_pd (double *__P, __m128d __A)_mm_storeh_pd196,6816
_mm_store1_pd (double *__P, __m128d __A)_mm_store1_pd204,7069
_mm_store_pd1 (double *__P, __m128d __A)_mm_store_pd1210,7279
_mm_storer_pd (double *__P, __m128d __A)_mm_storer_pd217,7518
_mm_cvtsi128_si32 (__m128i __A)_mm_cvtsi128_si32223,7727
_mm_cvtsi128_si64 (__m128i __A)_mm_cvtsi128_si64231,7954
_mm_cvtsi128_si64x (__m128i __A)_mm_cvtsi128_si64x238,8139
_mm_add_pd (__m128d __A, __m128d __B)_mm_add_pd245,8302
_mm_add_sd (__m128d __A, __m128d __B)_mm_add_sd251,8484
_mm_sub_pd (__m128d __A, __m128d __B)_mm_sub_pd257,8685
_mm_sub_sd (__m128d __A, __m128d __B)_mm_sub_sd263,8867
_mm_mul_pd (__m128d __A, __m128d __B)_mm_mul_pd269,9068
_mm_mul_sd (__m128d __A, __m128d __B)_mm_mul_sd275,9250
_mm_div_pd (__m128d __A, __m128d __B)_mm_div_pd281,9451
_mm_div_sd (__m128d __A, __m128d __B)_mm_div_sd287,9633
_mm_sqrt_pd (__m128d __A)_mm_sqrt_pd293,9834
_mm_sqrt_sd (__m128d __A, __m128d __B)_mm_sqrt_sd300,10051
_mm_min_pd (__m128d __A, __m128d __B)_mm_min_pd307,10309
_mm_min_sd (__m128d __A, __m128d __B)_mm_min_sd313,10510
_mm_max_pd (__m128d __A, __m128d __B)_mm_max_pd319,10711
_mm_max_sd (__m128d __A, __m128d __B)_mm_max_sd325,10912
_mm_and_pd (__m128d __A, __m128d __B)_mm_and_pd331,11113
_mm_andnot_pd (__m128d __A, __m128d __B)_mm_andnot_pd337,11314
_mm_or_pd (__m128d __A, __m128d __B)_mm_or_pd343,11519
_mm_xor_pd (__m128d __A, __m128d __B)_mm_xor_pd349,11718
_mm_cmpeq_pd (__m128d __A, __m128d __B)_mm_cmpeq_pd355,11919
_mm_cmplt_pd (__m128d __A, __m128d __B)_mm_cmplt_pd361,12124
_mm_cmple_pd (__m128d __A, __m128d __B)_mm_cmple_pd367,12329
_mm_cmpgt_pd (__m128d __A, __m128d __B)_mm_cmpgt_pd373,12534
_mm_cmpge_pd (__m128d __A, __m128d __B)_mm_cmpge_pd379,12739
_mm_cmpneq_pd (__m128d __A, __m128d __B)_mm_cmpneq_pd385,12944
_mm_cmpnlt_pd (__m128d __A, __m128d __B)_mm_cmpnlt_pd391,13151
_mm_cmpnle_pd (__m128d __A, __m128d __B)_mm_cmpnle_pd397,13358
_mm_cmpngt_pd (__m128d __A, __m128d __B)_mm_cmpngt_pd403,13565
_mm_cmpnge_pd (__m128d __A, __m128d __B)_mm_cmpnge_pd409,13772
_mm_cmpord_pd (__m128d __A, __m128d __B)_mm_cmpord_pd415,13979
_mm_cmpunord_pd (__m128d __A, __m128d __B)_mm_cmpunord_pd421,14186
_mm_cmpeq_sd (__m128d __A, __m128d __B)_mm_cmpeq_sd427,14397
_mm_cmplt_sd (__m128d __A, __m128d __B)_mm_cmplt_sd433,14602
_mm_cmple_sd (__m128d __A, __m128d __B)_mm_cmple_sd439,14807
_mm_cmpgt_sd (__m128d __A, __m128d __B)_mm_cmpgt_sd445,15012
_mm_cmpge_sd (__m128d __A, __m128d __B)_mm_cmpge_sd455,15296
_mm_cmpneq_sd (__m128d __A, __m128d __B)_mm_cmpneq_sd465,15580
_mm_cmpnlt_sd (__m128d __A, __m128d __B)_mm_cmpnlt_sd471,15787
_mm_cmpnle_sd (__m128d __A, __m128d __B)_mm_cmpnle_sd477,15994
_mm_cmpngt_sd (__m128d __A, __m128d __B)_mm_cmpngt_sd483,16201
_mm_cmpnge_sd (__m128d __A, __m128d __B)_mm_cmpnge_sd493,16489
_mm_cmpord_sd (__m128d __A, __m128d __B)_mm_cmpord_sd503,16777
_mm_cmpunord_sd (__m128d __A, __m128d __B)_mm_cmpunord_sd509,16984
_mm_comieq_sd (__m128d __A, __m128d __B)_mm_comieq_sd515,17191
_mm_comilt_sd (__m128d __A, __m128d __B)_mm_comilt_sd521,17385
_mm_comile_sd (__m128d __A, __m128d __B)_mm_comile_sd527,17579
_mm_comigt_sd (__m128d __A, __m128d __B)_mm_comigt_sd533,17773
_mm_comige_sd (__m128d __A, __m128d __B)_mm_comige_sd539,17967
_mm_comineq_sd (__m128d __A, __m128d __B)_mm_comineq_sd545,18161
_mm_ucomieq_sd (__m128d __A, __m128d __B)_mm_ucomieq_sd551,18357
_mm_ucomilt_sd (__m128d __A, __m128d __B)_mm_ucomilt_sd557,18553
_mm_ucomile_sd (__m128d __A, __m128d __B)_mm_ucomile_sd563,18749
_mm_ucomigt_sd (__m128d __A, __m128d __B)_mm_ucomigt_sd569,18945
_mm_ucomige_sd (__m128d __A, __m128d __B)_mm_ucomige_sd575,19141
_mm_ucomineq_sd (__m128d __A, __m128d __B)_mm_ucomineq_sd581,19337
_mm_set_epi64x (long long __q1, long long __q0)_mm_set_epi64x589,19601
_mm_set_epi64 (__m64 __q1,  __m64 __q0)_mm_set_epi64595,19801
_mm_set_epi32 (int __q3, int __q2, int __q1, int __q0)_mm_set_epi32601,19997
_mm_set_epi16 (short __q7, short __q6, short __q5, short __q4,_mm_set_epi16607,20216
_mm_set_epi8 (char __q15, char __q14, char __q13, char __q12,_mm_set_epi8615,20527
_mm_set1_epi64x (long long __A)_mm_set1_epi64x629,21069
_mm_set1_epi64 (__m64 __A)_mm_set1_epi64635,21233
_mm_set1_epi32 (int __A)_mm_set1_epi32641,21391
_mm_set1_epi16 (short __A)_mm_set1_epi16647,21557
_mm_set1_epi8 (char __A)_mm_set1_epi8653,21745
_mm_setr_epi64 (__m64 __q0, __m64 __q1)_mm_setr_epi64663,22109
_mm_setr_epi32 (int __q0, int __q1, int __q2, int __q3)_mm_setr_epi32669,22282
_mm_setr_epi16 (short __q0, short __q1, short __q2, short __q3,_mm_setr_epi16675,22483
_mm_setr_epi8 (char __q00, char __q01, char __q02, char __q03,_mm_setr_epi8682,22773
_mm_load_si128 (__m128i const *__P)_mm_load_si128694,23309
_mm_loadu_si128 (__m128i_u const *__P)_mm_loadu_si128700,23456
_mm_loadl_epi64 (__m128i_u const *__P)_mm_loadl_epi64706,23606
_mm_store_si128 (__m128i *__P, __m128i __B)_mm_store_si128712,23792
_mm_storeu_si128 (__m128i_u *__P, __m128i __B)_mm_storeu_si128718,23943
_mm_storel_epi64 (__m128i_u *__P, __m128i __B)_mm_storel_epi64724,24097
_mm_movepi64_pi64 (__m128i __B)_mm_movepi64_pi64730,24284
_mm_movpi64_epi64 (__m64 __A)_mm_movpi64_epi64736,24447
_mm_move_epi64 (__m128i __A)_mm_move_epi64742,24615
_mm_undefined_si128 (void)_mm_undefined_si128749,24832
_mm_setzero_si128 (void)_mm_setzero_si128757,25023
_mm_cvtepi32_pd (__m128i __A)_mm_cvtepi32_pd763,25200
_mm_cvtepi32_ps (__m128i __A)_mm_cvtepi32_ps769,25383
_mm_cvtpd_epi32 (__m128d __A)_mm_cvtpd_epi32775,25566
_mm_cvtpd_pi32 (__m128d __A)_mm_cvtpd_pi32781,25748
_mm_cvtpd_ps (__m128d __A)_mm_cvtpd_ps787,25928
_mm_cvttpd_epi32 (__m128d __A)_mm_cvttpd_epi32793,26108
_mm_cvttpd_pi32 (__m128d __A)_mm_cvttpd_pi32799,26292
_mm_cvtpi32_pd (__m64 __A)_mm_cvtpi32_pd805,26475
_mm_cvtps_epi32 (__m128 __A)_mm_cvtps_epi32811,26656
_mm_cvttps_epi32 (__m128 __A)_mm_cvttps_epi32817,26839
_mm_cvtps_pd (__m128 __A)_mm_cvtps_pd823,27024
_mm_cvtsd_si32 (__m128d __A)_mm_cvtsd_si32829,27200
_mm_cvtsd_si64 (__m128d __A)_mm_cvtsd_si64837,27418
_mm_cvtsd_si64x (__m128d __A)_mm_cvtsd_si64x844,27624
_mm_cvttsd_si32 (__m128d __A)_mm_cvttsd_si32851,27804
_mm_cvttsd_si64 (__m128d __A)_mm_cvttsd_si64859,28024
_mm_cvttsd_si64x (__m128d __A)_mm_cvttsd_si64x866,28232
_mm_cvtsd_ss (__m128 __A, __m128d __B)_mm_cvtsd_ss873,28417
_mm_cvtsi32_sd (__m128d __A, int __B)_mm_cvtsi32_sd879,28623
_mm_cvtsi64_sd (__m128d __A, long long __B)_mm_cvtsi64_sd887,28862
_mm_cvtsi64x_sd (__m128d __A, long long __B)_mm_cvtsi64x_sd894,29095
_mm_cvtss_sd (__m128d __A, __m128 __B)_mm_cvtss_sd901,29308
_mm_shuffle_pd(__m128d __A, __m128d __B, const int __mask)_mm_shuffle_pd908,29534
#define _mm_shuffle_pd(_mm_shuffle_pd913,29679
_mm_unpackhi_pd (__m128d __A, __m128d __B)_mm_unpackhi_pd919,29917
_mm_unpacklo_pd (__m128d __A, __m128d __B)_mm_unpacklo_pd925,30126
_mm_loadh_pd (__m128d __A, double const *__B)_mm_loadh_pd931,30335
_mm_loadl_pd (__m128d __A, double const *__B)_mm_loadl_pd937,30538
_mm_movemask_pd (__m128d __A)_mm_movemask_pd943,30737
_mm_packs_epi16 (__m128i __A, __m128i __B)_mm_packs_epi16949,30911
_mm_packs_epi32 (__m128i __A, __m128i __B)_mm_packs_epi32955,31123
_mm_packus_epi16 (__m128i __A, __m128i __B)_mm_packus_epi16961,31335
_mm_unpackhi_epi8 (__m128i __A, __m128i __B)_mm_unpackhi_epi8967,31548
_mm_unpackhi_epi16 (__m128i __A, __m128i __B)_mm_unpackhi_epi16973,31765
_mm_unpackhi_epi32 (__m128i __A, __m128i __B)_mm_unpackhi_epi32979,31981
_mm_unpackhi_epi64 (__m128i __A, __m128i __B)_mm_unpackhi_epi64985,32197
_mm_unpacklo_epi8 (__m128i __A, __m128i __B)_mm_unpacklo_epi8991,32414
_mm_unpacklo_epi16 (__m128i __A, __m128i __B)_mm_unpacklo_epi16997,32631
_mm_unpacklo_epi32 (__m128i __A, __m128i __B)_mm_unpacklo_epi321003,32847
_mm_unpacklo_epi64 (__m128i __A, __m128i __B)_mm_unpacklo_epi641009,33063
_mm_add_epi8 (__m128i __A, __m128i __B)_mm_add_epi81015,33280
_mm_add_epi16 (__m128i __A, __m128i __B)_mm_add_epi161021,33466
_mm_add_epi32 (__m128i __A, __m128i __B)_mm_add_epi321027,33651
_mm_add_epi64 (__m128i __A, __m128i __B)_mm_add_epi641033,33836
_mm_adds_epi8 (__m128i __A, __m128i __B)_mm_adds_epi81039,34021
_mm_adds_epi16 (__m128i __A, __m128i __B)_mm_adds_epi161045,34231
_mm_adds_epu8 (__m128i __A, __m128i __B)_mm_adds_epu81051,34440
_mm_adds_epu16 (__m128i __A, __m128i __B)_mm_adds_epu161057,34651
_mm_sub_epi8 (__m128i __A, __m128i __B)_mm_sub_epi81063,34861
_mm_sub_epi16 (__m128i __A, __m128i __B)_mm_sub_epi161069,35047
_mm_sub_epi32 (__m128i __A, __m128i __B)_mm_sub_epi321075,35232
_mm_sub_epi64 (__m128i __A, __m128i __B)_mm_sub_epi641081,35417
_mm_subs_epi8 (__m128i __A, __m128i __B)_mm_subs_epi81087,35602
_mm_subs_epi16 (__m128i __A, __m128i __B)_mm_subs_epi161093,35812
_mm_subs_epu8 (__m128i __A, __m128i __B)_mm_subs_epu81099,36021
_mm_subs_epu16 (__m128i __A, __m128i __B)_mm_subs_epu161105,36232
_mm_madd_epi16 (__m128i __A, __m128i __B)_mm_madd_epi161111,36442
_mm_mulhi_epi16 (__m128i __A, __m128i __B)_mm_mulhi_epi161117,36652
_mm_mullo_epi16 (__m128i __A, __m128i __B)_mm_mullo_epi161123,36862
_mm_mul_su32 (__m64 __A, __m64 __B)_mm_mul_su321129,37047
_mm_mul_epu32 (__m128i __A, __m128i __B)_mm_mul_epu321135,37246
_mm_slli_epi16 (__m128i __A, int __B)_mm_slli_epi161141,37455
_mm_slli_epi32 (__m128i __A, int __B)_mm_slli_epi321147,37652
_mm_slli_epi64 (__m128i __A, int __B)_mm_slli_epi641153,37849
_mm_srai_epi16 (__m128i __A, int __B)_mm_srai_epi161159,38046
_mm_srai_epi32 (__m128i __A, int __B)_mm_srai_epi321165,38243
_mm_bsrli_si128 (__m128i __A, const int __N)_mm_bsrli_si1281172,38460
_mm_bslli_si128 (__m128i __A, const int __N)_mm_bslli_si1281178,38661
_mm_srli_si128 (__m128i __A, const int __N)_mm_srli_si1281184,38862
_mm_slli_si128 (__m128i __A, const int __N)_mm_slli_si1281190,39062
#define _mm_bsrli_si128(_mm_bsrli_si1281195,39176
#define _mm_bslli_si128(_mm_bslli_si1281197,39276
#define _mm_srli_si128(_mm_srli_si1281199,39376
#define _mm_slli_si128(_mm_slli_si1281201,39475
_mm_srli_epi16 (__m128i __A, int __B)_mm_srli_epi161206,39673
_mm_srli_epi32 (__m128i __A, int __B)_mm_srli_epi321212,39870
_mm_srli_epi64 (__m128i __A, int __B)_mm_srli_epi641218,40067
_mm_sll_epi16 (__m128i __A, __m128i __B)_mm_sll_epi161224,40264
_mm_sll_epi32 (__m128i __A, __m128i __B)_mm_sll_epi321230,40470
_mm_sll_epi64 (__m128i __A, __m128i __B)_mm_sll_epi641236,40676
_mm_sra_epi16 (__m128i __A, __m128i __B)_mm_sra_epi161242,40882
_mm_sra_epi32 (__m128i __A, __m128i __B)_mm_sra_epi321248,41089
_mm_srl_epi16 (__m128i __A, __m128i __B)_mm_srl_epi161254,41296
_mm_srl_epi32 (__m128i __A, __m128i __B)_mm_srl_epi321260,41503
_mm_srl_epi64 (__m128i __A, __m128i __B)_mm_srl_epi641266,41710
_mm_and_si128 (__m128i __A, __m128i __B)_mm_and_si1281272,41917
_mm_andnot_si128 (__m128i __A, __m128i __B)_mm_andnot_si1281278,42102
_mm_or_si128 (__m128i __A, __m128i __B)_mm_or_si1281284,42312
_mm_xor_si128 (__m128i __A, __m128i __B)_mm_xor_si1281290,42496
_mm_cmpeq_epi8 (__m128i __A, __m128i __B)_mm_cmpeq_epi81296,42681
_mm_cmpeq_epi16 (__m128i __A, __m128i __B)_mm_cmpeq_epi161302,42870
_mm_cmpeq_epi32 (__m128i __A, __m128i __B)_mm_cmpeq_epi321308,43058
_mm_cmplt_epi8 (__m128i __A, __m128i __B)_mm_cmplt_epi81314,43246
_mm_cmplt_epi16 (__m128i __A, __m128i __B)_mm_cmplt_epi161320,43434
_mm_cmplt_epi32 (__m128i __A, __m128i __B)_mm_cmplt_epi321326,43621
_mm_cmpgt_epi8 (__m128i __A, __m128i __B)_mm_cmpgt_epi81332,43808
_mm_cmpgt_epi16 (__m128i __A, __m128i __B)_mm_cmpgt_epi161338,43996
_mm_cmpgt_epi32 (__m128i __A, __m128i __B)_mm_cmpgt_epi321344,44183
_mm_extract_epi16 (__m128i const __A, int const __N)_mm_extract_epi161351,44386
_mm_insert_epi16 (__m128i const __A, int const __D, int const __N)_mm_insert_epi161357,44609
#define _mm_extract_epi16(_mm_extract_epi161362,44758
#define _mm_insert_epi16(_mm_insert_epi161364,44880
_mm_max_epi16 (__m128i __A, __m128i __B)_mm_max_epi161370,45112
_mm_max_epu8 (__m128i __A, __m128i __B)_mm_max_epu81376,45320
_mm_min_epi16 (__m128i __A, __m128i __B)_mm_min_epi161382,45529
_mm_min_epu8 (__m128i __A, __m128i __B)_mm_min_epu81388,45737
_mm_movemask_epi8 (__m128i __A)_mm_movemask_epi81394,45942
_mm_mulhi_epu16 (__m128i __A, __m128i __B)_mm_mulhi_epu161400,46122
_mm_shufflehi_epi16 (__m128i __A, const int __mask)_mm_shufflehi_epi161407,46353
_mm_shufflelo_epi16 (__m128i __A, const int __mask)_mm_shufflelo_epi161413,46565
_mm_shuffle_epi32 (__m128i __A, const int __mask)_mm_shuffle_epi321419,46777
#define _mm_shufflehi_epi16(_mm_shufflehi_epi161424,46900
#define _mm_shufflelo_epi16(_mm_shufflelo_epi161426,47005
#define _mm_shuffle_epi32(_mm_shuffle_epi321428,47110
_mm_maskmoveu_si128 (__m128i __A, __m128i __B, char *__C)_mm_maskmoveu_si1281433,47308
_mm_avg_epu8 (__m128i __A, __m128i __B)_mm_avg_epu81439,47525
_mm_avg_epu16 (__m128i __A, __m128i __B)_mm_avg_epu161445,47733
_mm_sad_epu8 (__m128i __A, __m128i __B)_mm_sad_epu81451,47940
_mm_stream_si32 (int *__A, int __B)_mm_stream_si321457,48146
_mm_stream_si64 (long long int *__A, long long int __B)_mm_stream_si641464,48329
_mm_stream_si128 (__m128i *__A, __m128i __B)_mm_stream_si1281471,48523
_mm_stream_pd (double *__A, __m128d __B)_mm_stream_pd1477,48716
_mm_clflush (void const *__A)_mm_clflush1483,48895
_mm_lfence (void)_mm_lfence1489,49050
_mm_mfence (void)_mm_mfence1495,49189
_mm_cvtsi32_si128 (int __A)_mm_cvtsi32_si1281501,49331
_mm_cvtsi64_si128 (long long __A)_mm_cvtsi64_si1281509,49536
_mm_cvtsi64x_si128 (long long __A)_mm_cvtsi64x_si1281516,49728
_mm_castpd_ps(__m128d __A)_mm_castpd_ps1525,50029
_mm_castpd_si128(__m128d __A)_mm_castpd_si1281531,50175
_mm_castps_pd(__m128 __A)_mm_castps_pd1537,50325
_mm_castps_si128(__m128 __A)_mm_castps_si1281543,50471
_mm_castsi128_ps(__m128i __A)_mm_castsi128_ps1549,50619
_mm_castsi128_pd(__m128i __A)_mm_castsi128_pd1555,50768
#undef __DISABLE_SSE2____DISABLE_SSE2__1561,50851

/usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/xmmintrin.h,11617
xmmintrin.h1,0
#define _XMMINTRIN_H_INCLUDED_XMMINTRIN_H_INCLUDED28,1154
enum _mm_hint_mm_hint37,1376
  _MM_HINT_ET0 = 7,_MM_HINT_ET040,1445
  _MM_HINT_ET1 = 6,_MM_HINT_ET141,1465
  _MM_HINT_T0 = 3,_MM_HINT_T042,1485
  _MM_HINT_T1 = 2,_MM_HINT_T143,1504
  _MM_HINT_T2 = 1,_MM_HINT_T244,1523
  _MM_HINT_NTA = 0_MM_HINT_NTA45,1542
_mm_prefetch (const void *__P, enum _mm_hint __I)_mm_prefetch52,1818
#define _mm_prefetch(_mm_prefetch57,1935
#define __DISABLE_SSE____DISABLE_SSE__64,2095
typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));__m12869,2266
typedef float __m128_u __attribute__ ((__vector_size__ (16), __may_alias__, __aligned__ (1)));__m128_u72,2386
typedef float __v4sf __attribute__ ((__vector_size__ (16)));__v4sf75,2542
#define _MM_SHUFFLE(_MM_SHUFFLE78,2666
#define _MM_EXCEPT_MASK _MM_EXCEPT_MASK82,2786
#define _MM_EXCEPT_INVALID _MM_EXCEPT_INVALID83,2823
#define _MM_EXCEPT_DENORM _MM_EXCEPT_DENORM84,2860
#define _MM_EXCEPT_DIV_ZERO _MM_EXCEPT_DIV_ZERO85,2897
#define _MM_EXCEPT_OVERFLOW _MM_EXCEPT_OVERFLOW86,2934
#define _MM_EXCEPT_UNDERFLOW _MM_EXCEPT_UNDERFLOW87,2971
#define _MM_EXCEPT_INEXACT _MM_EXCEPT_INEXACT88,3008
#define _MM_MASK_MASK _MM_MASK_MASK90,3046
#define _MM_MASK_INVALID _MM_MASK_INVALID91,3083
#define _MM_MASK_DENORM _MM_MASK_DENORM92,3120
#define _MM_MASK_DIV_ZERO _MM_MASK_DIV_ZERO93,3157
#define _MM_MASK_OVERFLOW _MM_MASK_OVERFLOW94,3194
#define _MM_MASK_UNDERFLOW _MM_MASK_UNDERFLOW95,3231
#define _MM_MASK_INEXACT _MM_MASK_INEXACT96,3268
#define _MM_ROUND_MASK _MM_ROUND_MASK98,3306
#define _MM_ROUND_NEAREST _MM_ROUND_NEAREST99,3343
#define _MM_ROUND_DOWN _MM_ROUND_DOWN100,3380
#define _MM_ROUND_UP _MM_ROUND_UP101,3417
#define _MM_ROUND_TOWARD_ZERO _MM_ROUND_TOWARD_ZERO102,3454
#define _MM_FLUSH_ZERO_MASK _MM_FLUSH_ZERO_MASK104,3492
#define _MM_FLUSH_ZERO_ON _MM_FLUSH_ZERO_ON105,3529
#define _MM_FLUSH_ZERO_OFF _MM_FLUSH_ZERO_OFF106,3566
_mm_undefined_ps (void)_mm_undefined_ps110,3729
_mm_setzero_ps (void)_mm_setzero_ps118,3915
_mm_add_ss (__m128 __A, __m128 __B)_mm_add_ss128,4264
_mm_sub_ss (__m128 __A, __m128 __B)_mm_sub_ss134,4462
_mm_mul_ss (__m128 __A, __m128 __B)_mm_mul_ss140,4660
_mm_div_ss (__m128 __A, __m128 __B)_mm_div_ss146,4858
_mm_sqrt_ss (__m128 __A)_mm_sqrt_ss152,5056
_mm_rcp_ss (__m128 __A)_mm_rcp_ss158,5231
_mm_rsqrt_ss (__m128 __A)_mm_rsqrt_ss164,5404
_mm_min_ss (__m128 __A, __m128 __B)_mm_min_ss170,5581
_mm_max_ss (__m128 __A, __m128 __B)_mm_max_ss176,5779
_mm_add_ps (__m128 __A, __m128 __B)_mm_add_ps184,6054
_mm_sub_ps (__m128 __A, __m128 __B)_mm_sub_ps190,6232
_mm_mul_ps (__m128 __A, __m128 __B)_mm_mul_ps196,6410
_mm_div_ps (__m128 __A, __m128 __B)_mm_div_ps202,6588
_mm_sqrt_ps (__m128 __A)_mm_sqrt_ps208,6766
_mm_rcp_ps (__m128 __A)_mm_rcp_ps214,6941
_mm_rsqrt_ps (__m128 __A)_mm_rsqrt_ps220,7114
_mm_min_ps (__m128 __A, __m128 __B)_mm_min_ps226,7291
_mm_max_ps (__m128 __A, __m128 __B)_mm_max_ps232,7489
_mm_and_ps (__m128 __A, __m128 __B)_mm_and_ps240,7750
_mm_andnot_ps (__m128 __A, __m128 __B)_mm_andnot_ps246,7923
_mm_or_ps (__m128 __A, __m128 __B)_mm_or_ps252,8100
_mm_xor_ps (__m128 __A, __m128 __B)_mm_xor_ps258,8271
_mm_cmpeq_ss (__m128 __A, __m128 __B)_mm_cmpeq_ss268,8667
_mm_cmplt_ss (__m128 __A, __m128 __B)_mm_cmplt_ss274,8869
_mm_cmple_ss (__m128 __A, __m128 __B)_mm_cmple_ss280,9071
_mm_cmpgt_ss (__m128 __A, __m128 __B)_mm_cmpgt_ss286,9273
_mm_cmpge_ss (__m128 __A, __m128 __B)_mm_cmpge_ss296,9549
_mm_cmpneq_ss (__m128 __A, __m128 __B)_mm_cmpneq_ss306,9825
_mm_cmpnlt_ss (__m128 __A, __m128 __B)_mm_cmpnlt_ss312,10029
_mm_cmpnle_ss (__m128 __A, __m128 __B)_mm_cmpnle_ss318,10233
_mm_cmpngt_ss (__m128 __A, __m128 __B)_mm_cmpngt_ss324,10437
_mm_cmpnge_ss (__m128 __A, __m128 __B)_mm_cmpnge_ss334,10717
_mm_cmpord_ss (__m128 __A, __m128 __B)_mm_cmpord_ss344,10997
_mm_cmpunord_ss (__m128 __A, __m128 __B)_mm_cmpunord_ss350,11201
_mm_cmpeq_ps (__m128 __A, __m128 __B)_mm_cmpeq_ps360,11593
_mm_cmplt_ps (__m128 __A, __m128 __B)_mm_cmplt_ps366,11795
_mm_cmple_ps (__m128 __A, __m128 __B)_mm_cmple_ps372,11997
_mm_cmpgt_ps (__m128 __A, __m128 __B)_mm_cmpgt_ps378,12199
_mm_cmpge_ps (__m128 __A, __m128 __B)_mm_cmpge_ps384,12401
_mm_cmpneq_ps (__m128 __A, __m128 __B)_mm_cmpneq_ps390,12603
_mm_cmpnlt_ps (__m128 __A, __m128 __B)_mm_cmpnlt_ps396,12807
_mm_cmpnle_ps (__m128 __A, __m128 __B)_mm_cmpnle_ps402,13011
_mm_cmpngt_ps (__m128 __A, __m128 __B)_mm_cmpngt_ps408,13215
_mm_cmpnge_ps (__m128 __A, __m128 __B)_mm_cmpnge_ps414,13419
_mm_cmpord_ps (__m128 __A, __m128 __B)_mm_cmpord_ps420,13623
_mm_cmpunord_ps (__m128 __A, __m128 __B)_mm_cmpunord_ps426,13827
_mm_comieq_ss (__m128 __A, __m128 __B)_mm_comieq_ss435,14121
_mm_comilt_ss (__m128 __A, __m128 __B)_mm_comilt_ss441,14311
_mm_comile_ss (__m128 __A, __m128 __B)_mm_comile_ss447,14501
_mm_comigt_ss (__m128 __A, __m128 __B)_mm_comigt_ss453,14691
_mm_comige_ss (__m128 __A, __m128 __B)_mm_comige_ss459,14881
_mm_comineq_ss (__m128 __A, __m128 __B)_mm_comineq_ss465,15071
_mm_ucomieq_ss (__m128 __A, __m128 __B)_mm_ucomieq_ss471,15263
_mm_ucomilt_ss (__m128 __A, __m128 __B)_mm_ucomilt_ss477,15455
_mm_ucomile_ss (__m128 __A, __m128 __B)_mm_ucomile_ss483,15647
_mm_ucomigt_ss (__m128 __A, __m128 __B)_mm_ucomigt_ss489,15839
_mm_ucomige_ss (__m128 __A, __m128 __B)_mm_ucomige_ss495,16031
_mm_ucomineq_ss (__m128 __A, __m128 __B)_mm_ucomineq_ss501,16223
_mm_cvtss_si32 (__m128 __A)_mm_cvtss_si32509,16516
_mm_cvt_ss2si (__m128 __A)_mm_cvt_ss2si515,16685
_mm_cvtss_si64 (__m128 __A)_mm_cvtss_si64526,16983
_mm_cvtss_si64x (__m128 __A)_mm_cvtss_si64x533,17188
_mm_cvtps_pi32 (__m128 __A)_mm_cvtps_pi32542,17509
_mm_cvt_ps2pi (__m128 __A)_mm_cvt_ps2pi548,17688
_mm_cvttss_si32 (__m128 __A)_mm_cvttss_si32555,17896
_mm_cvtt_ss2si (__m128 __A)_mm_cvtt_ss2si561,18067
_mm_cvttss_si64 (__m128 __A)_mm_cvttss_si64571,18326
_mm_cvttss_si64x (__m128 __A)_mm_cvttss_si64x578,18533
_mm_cvttps_pi32 (__m128 __A)_mm_cvttps_pi32587,18818
_mm_cvtt_ps2pi (__m128 __A)_mm_cvtt_ps2pi593,18999
_mm_cvtsi32_ss (__m128 __A, int __B)_mm_cvtsi32_ss600,19223
_mm_cvt_si2ss (__m128 __A, int __B)_mm_cvt_si2ss606,19418
_mm_cvtsi64_ss (__m128 __A, long long __B)_mm_cvtsi64_ss616,19697
_mm_cvtsi64x_ss (__m128 __A, long long __B)_mm_cvtsi64x_ss623,19928
_mm_cvtpi32_ps (__m128 __A, __m64 __B)_mm_cvtpi32_ps632,20245
_mm_cvt_pi2ps (__m128 __A, __m64 __B)_mm_cvt_pi2ps638,20450
_mm_cvtpi16_ps (__m64 __A)_mm_cvtpi16_ps645,20683
_mm_cvtpu16_ps (__m64 __A)_mm_cvtpu16_ps670,21644
_mm_cvtpi8_ps (__m64 __A)_mm_cvtpi8_ps689,22344
_mm_cvtpu8_ps(__m64 __A)_mm_cvtpu8_ps706,22948
_mm_cvtpi32x2_ps(__m64 __A, __m64 __B)_mm_cvtpi32x2_ps714,23237
_mm_cvtps_pi16(__m128 __A)_mm_cvtps_pi16724,23673
_mm_cvtps_pi8(__m128 __A)_mm_cvtps_pi8735,24119
_mm_shuffle_ps (__m128 __A, __m128 __B, int const __mask)_mm_shuffle_ps744,24440
#define _mm_shuffle_ps(_mm_shuffle_ps749,24584
_mm_unpackhi_ps (__m128 __A, __m128 __B)_mm_unpackhi_ps756,24896
_mm_unpacklo_ps (__m128 __A, __m128 __B)_mm_unpacklo_ps763,25173
_mm_loadh_pi (__m128 __A, __m64 const *__P)_mm_loadh_pi771,25504
_mm_storeh_pi (__m64 *__P, __m128 __A)_mm_storeh_pi778,25771
_mm_movehl_ps (__m128 __A, __m128 __B)_mm_movehl_ps785,26032
_mm_movelh_ps (__m128 __A, __m128 __B)_mm_movelh_ps792,26306
_mm_loadl_pi (__m128 __A, __m64 const *__P)_mm_loadl_pi800,26634
_mm_storel_pi (__m64 *__P, __m128 __A)_mm_storel_pi807,26901
_mm_movemask_ps (__m128 __A)_mm_movemask_ps814,27167
_mm_getcsr (void)_mm_getcsr821,27397
_MM_GET_EXCEPTION_STATE (void)_MM_GET_EXCEPTION_STATE828,27606
_MM_GET_EXCEPTION_MASK (void)_MM_GET_EXCEPTION_MASK834,27779
_MM_GET_ROUNDING_MODE (void)_MM_GET_ROUNDING_MODE840,27949
_MM_GET_FLUSH_ZERO_MODE (void)_MM_GET_FLUSH_ZERO_MODE846,28119
_mm_setcsr (unsigned int __I)_mm_setcsr853,28326
_MM_SET_EXCEPTION_STATE(unsigned int __mask)_MM_SET_EXCEPTION_STATE860,28532
_MM_SET_EXCEPTION_MASK (unsigned int __mask)_MM_SET_EXCEPTION_MASK866,28728
_MM_SET_ROUNDING_MODE (unsigned int __mode)_MM_SET_ROUNDING_MODE872,28922
_MM_SET_FLUSH_ZERO_MODE (unsigned int __mode)_MM_SET_FLUSH_ZERO_MODE878,29116
_mm_set_ss (float __F)_mm_set_ss885,29381
_mm_set1_ps (float __F)_mm_set1_ps892,29623
_mm_set_ps1 (float __F)_mm_set_ps1898,29805
_mm_load_ss (float const *__P)_mm_load_ss905,30015
_mm_load1_ps (float const *__P)_mm_load1_ps912,30228
_mm_load_ps1 (float const *__P)_mm_load_ps1918,30384
_mm_load_ps (float const *__P)_mm_load_ps925,30615
_mm_loadu_ps (float const *__P)_mm_loadu_ps932,30845
_mm_loadr_ps (float const *__P)_mm_loadr_ps939,31076
_mm_set_ps (const float __Z, const float __Y, const float __X, const float __W)_mm_set_ps947,31351
_mm_setr_ps (float __Z, float __Y, float __X, float __W)_mm_setr_ps954,31625
_mm_store_ss (float *__P, __m128 __A)_mm_store_ss961,31874
_mm_cvtss_f32 (__m128 __A)_mm_cvtss_f32967,32033
_mm_store_ps (float *__P, __m128 __A)_mm_store_ps974,32249
_mm_storeu_ps (float *__P, __m128 __A)_mm_storeu_ps981,32477
_mm_store1_ps (float *__P, __m128 __A)_mm_store1_ps988,32688
_mm_store_ps1 (float *__P, __m128 __A)_mm_store_ps1996,32955
_mm_storer_ps (float *__P, __m128 __A)_mm_storer_ps1003,33193
_mm_move_ss (__m128 __A, __m128 __B)_mm_move_ss1012,33522
_mm_extract_pi16 (__m64 const __A, int const __N)_mm_extract_pi161020,33817
_m_pextrw (__m64 const __A, int const __N)_m_pextrw1026,34016
#define _mm_extract_pi16(_mm_extract_pi161031,34107
#define _m_pextrw(_m_pextrw1034,34210
_mm_insert_pi16 (__m64 const __A, int const __D, int const __N)_mm_insert_pi161041,34463
_m_pinsrw (__m64 const __A, int const __D, int const __N)_m_pinsrw1047,34691
#define _mm_insert_pi16(_mm_insert_pi161052,34801
#define _m_pinsrw(_m_pinsrw1056,34928
_mm_max_pi16 (__m64 __A, __m64 __B)_mm_max_pi161061,35142
_m_pmaxsw (__m64 __A, __m64 __B)_m_pmaxsw1067,35339
_mm_max_pu8 (__m64 __A, __m64 __B)_mm_max_pu81074,35566
_m_pmaxub (__m64 __A, __m64 __B)_m_pmaxub1080,35762
_mm_min_pi16 (__m64 __A, __m64 __B)_mm_min_pi161087,35987
_m_pminsw (__m64 __A, __m64 __B)_m_pminsw1093,36184
_mm_min_pu8 (__m64 __A, __m64 __B)_mm_min_pu81100,36411
_m_pminub (__m64 __A, __m64 __B)_m_pminub1106,36607
_mm_movemask_pi8 (__m64 __A)_mm_movemask_pi81113,36823
_m_pmovmskb (__m64 __A)_m_pmovmskb1119,36992
_mm_mulhi_pu16 (__m64 __A, __m64 __B)_mm_mulhi_pu161127,37283
_m_pmulhuw (__m64 __A, __m64 __B)_m_pmulhuw1133,37483
_mm_shuffle_pi16 (__m64 __A, int const __N)_mm_shuffle_pi161142,37766
_m_pshufw (__m64 __A, int const __N)_m_pshufw1148,37963
#define _mm_shuffle_pi16(_mm_shuffle_pi161153,38048
#define _m_pshufw(_m_pshufw1156,38147
_mm_maskmove_si64 (__m64 __A, __m64 __N, char *__P)_mm_maskmove_si641163,38456
_m_maskmovq (__m64 __A, __m64 __N, char *__P)_m_maskmovq1169,38660
_mm_avg_pu8 (__m64 __A, __m64 __B)_mm_avg_pu81176,38914
_m_pavgb (__m64 __A, __m64 __B)_m_pavgb1182,39109
_mm_avg_pu16 (__m64 __A, __m64 __B)_mm_avg_pu161189,39346
_m_pavgw (__m64 __A, __m64 __B)_m_pavgw1195,39542
_mm_sad_pu8 (__m64 __A, __m64 __B)_mm_sad_pu81204,39873
_m_psadbw (__m64 __A, __m64 __B)_m_psadbw1210,40069
_mm_stream_pi (__m64 *__P, __m64 __A)_mm_stream_pi1217,40303
_mm_stream_ps (float *__P, __m128 __A)_mm_stream_ps1224,40567
_mm_sfence (void)_mm_sfence1232,40841
#define _MM_TRANSPOSE4_PS(_MM_TRANSPOSE4_PS1238,40946
#undef __DISABLE_SSE____DISABLE_SSE__1255,41633
_mm_pause (void)_mm_pause1265,42126

/usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/mmintrin.h,8536
mmintrin.h1,0
#define _MMINTRIN_H_INCLUDED_MMINTRIN_H_INCLUDED28,1153
#define __DISABLE_MMX____DISABLE_MMX__37,1358
typedef int __m64 __attribute__ ((__vector_size__ (8), __may_alias__));__m6442,1529
typedef int __m64_u __attribute__ ((__vector_size__ (8), __may_alias__, __aligned__ (1)));__m64_u45,1644
typedef int __v2si __attribute__ ((__vector_size__ (8)));__v2si48,1796
typedef short __v4hi __attribute__ ((__vector_size__ (8)));__v4hi49,1854
typedef char __v8qi __attribute__ ((__vector_size__ (8)));__v8qi50,1914
typedef long long __v1di __attribute__ ((__vector_size__ (8)));__v1di51,1973
typedef float __v2sf __attribute__ ((__vector_size__ (8)));__v2sf52,2037
_mm_empty (void)_mm_empty56,2221
_m_empty (void)_m_empty62,2357
_mm_cvtsi32_si64 (int __i)_mm_cvtsi32_si6469,2562
_m_from_int (int __i)_m_from_int75,2740
_m_from_int64 (long long __i)_m_from_int6485,2969
_mm_cvtsi64_m64 (long long __i)_mm_cvtsi64_m6491,3116
_mm_cvtsi64x_si64 (long long __i)_mm_cvtsi64x_si6498,3293
_mm_set_pi64x (long long __i)_mm_set_pi64x104,3444
_mm_cvtsi64_si32 (__m64 __i)_mm_cvtsi64_si32112,3665
_m_to_int (__m64 __i)_m_to_int118,3841
_m_to_int64 (__m64 __i)_m_to_int64128,4089
_mm_cvtm64_si64 (__m64 __i)_mm_cvtm64_si64134,4236
_mm_cvtsi64_si64x (__m64 __i)_mm_cvtsi64_si64x141,4415
_mm_packs_pi16 (__m64 __m1, __m64 __m2)_mm_packs_pi16151,4779
_m_packsswb (__m64 __m1, __m64 __m2)_m_packsswb157,4984
_mm_packs_pi32 (__m64 __m1, __m64 __m2)_mm_packs_pi32166,5360
_m_packssdw (__m64 __m1, __m64 __m2)_m_packssdw172,5565
_mm_packs_pu16 (__m64 __m1, __m64 __m2)_mm_packs_pu16181,5944
_m_packuswb (__m64 __m1, __m64 __m2)_m_packuswb187,6149
_mm_unpackhi_pi8 (__m64 __m1, __m64 __m2)_mm_unpackhi_pi8195,6439
_m_punpckhbw (__m64 __m1, __m64 __m2)_m_punpckhbw201,6647
_mm_unpackhi_pi16 (__m64 __m1, __m64 __m2)_mm_unpackhi_pi16209,6940
_m_punpckhwd (__m64 __m1, __m64 __m2)_m_punpckhwd215,7149
_mm_unpackhi_pi32 (__m64 __m1, __m64 __m2)_mm_unpackhi_pi32223,7433
_m_punpckhdq (__m64 __m1, __m64 __m2)_m_punpckhdq229,7642
_mm_unpacklo_pi8 (__m64 __m1, __m64 __m2)_mm_unpacklo_pi8237,7934
_m_punpcklbw (__m64 __m1, __m64 __m2)_m_punpcklbw243,8142
_mm_unpacklo_pi16 (__m64 __m1, __m64 __m2)_mm_unpacklo_pi16251,8433
_m_punpcklwd (__m64 __m1, __m64 __m2)_m_punpcklwd257,8642
_mm_unpacklo_pi32 (__m64 __m1, __m64 __m2)_mm_unpacklo_pi32265,8924
_m_punpckldq (__m64 __m1, __m64 __m2)_m_punpckldq271,9133
_mm_add_pi8 (__m64 __m1, __m64 __m2)_mm_add_pi8278,9367
_m_paddb (__m64 __m1, __m64 __m2)_m_paddb284,9566
_mm_add_pi16 (__m64 __m1, __m64 __m2)_mm_add_pi16291,9792
_m_paddw (__m64 __m1, __m64 __m2)_m_paddw297,9992
_mm_add_pi32 (__m64 __m1, __m64 __m2)_mm_add_pi32304,10219
_m_paddd (__m64 __m1, __m64 __m2)_m_paddd310,10419
#define __DISABLE_SSE2____DISABLE_SSE2__319,10630
_mm_add_si64 (__m64 __m1, __m64 __m2)_mm_add_si64323,10767
#undef __DISABLE_SSE2____DISABLE_SSE2__328,10901
_mm_adds_pi8 (__m64 __m1, __m64 __m2)_mm_adds_pi8335,11167
_m_paddsb (__m64 __m1, __m64 __m2)_m_paddsb341,11368
_mm_adds_pi16 (__m64 __m1, __m64 __m2)_mm_adds_pi16349,11633
_m_paddsw (__m64 __m1, __m64 __m2)_m_paddsw355,11835
_mm_adds_pu8 (__m64 __m1, __m64 __m2)_mm_adds_pu8363,12101
_m_paddusb (__m64 __m1, __m64 __m2)_m_paddusb369,12303
_mm_adds_pu16 (__m64 __m1, __m64 __m2)_mm_adds_pu16377,12571
_m_paddusw (__m64 __m1, __m64 __m2)_m_paddusw383,12774
_mm_sub_pi8 (__m64 __m1, __m64 __m2)_mm_sub_pi8390,13009
_m_psubb (__m64 __m1, __m64 __m2)_m_psubb396,13208
_mm_sub_pi16 (__m64 __m1, __m64 __m2)_mm_sub_pi16403,13441
_m_psubw (__m64 __m1, __m64 __m2)_m_psubw409,13641
_mm_sub_pi32 (__m64 __m1, __m64 __m2)_mm_sub_pi32416,13875
_m_psubd (__m64 __m1, __m64 __m2)_m_psubd422,14075
#define __DISABLE_SSE2____DISABLE_SSE2__431,14286
_mm_sub_si64 (__m64 __m1, __m64 __m2)_mm_sub_si64435,14423
#undef __DISABLE_SSE2____DISABLE_SSE2__440,14557
_mm_subs_pi8 (__m64 __m1, __m64 __m2)_mm_subs_pi8447,14831
_m_psubsb (__m64 __m1, __m64 __m2)_m_psubsb453,15032
_mm_subs_pi16 (__m64 __m1, __m64 __m2)_mm_subs_pi16461,15305
_m_psubsw (__m64 __m1, __m64 __m2)_m_psubsw467,15507
_mm_subs_pu8 (__m64 __m1, __m64 __m2)_mm_subs_pu8475,15781
_m_psubusb (__m64 __m1, __m64 __m2)_m_psubusb481,15983
_mm_subs_pu16 (__m64 __m1, __m64 __m2)_mm_subs_pu16489,16259
_m_psubusw (__m64 __m1, __m64 __m2)_m_psubusw495,16462
_mm_madd_pi16 (__m64 __m1, __m64 __m2)_mm_madd_pi16504,16810
_m_pmaddwd (__m64 __m1, __m64 __m2)_m_pmaddwd510,17013
_mm_mulhi_pi16 (__m64 __m1, __m64 __m2)_mm_mulhi_pi16518,17318
_m_pmulhw (__m64 __m1, __m64 __m2)_m_pmulhw524,17521
_mm_mullo_pi16 (__m64 __m1, __m64 __m2)_mm_mullo_pi16532,17804
_m_pmullw (__m64 __m1, __m64 __m2)_m_pmullw538,18007
_mm_sll_pi16 (__m64 __m, __m64 __count)_mm_sll_pi16545,18226
_m_psllw (__m64 __m, __m64 __count)_m_psllw551,18430
_mm_slli_pi16 (__m64 __m, int __count)_mm_slli_pi16557,18598
_m_psllwi (__m64 __m, int __count)_m_psllwi563,18794
_mm_sll_pi32 (__m64 __m, __m64 __count)_mm_sll_pi32570,19013
_m_pslld (__m64 __m, __m64 __count)_m_pslld576,19217
_mm_slli_pi32 (__m64 __m, int __count)_mm_slli_pi32582,19385
_m_pslldi (__m64 __m, int __count)_m_pslldi588,19581
_mm_sll_si64 (__m64 __m, __m64 __count)_mm_sll_si64595,19799
_m_psllq (__m64 __m, __m64 __count)_m_psllq601,20003
_mm_slli_si64 (__m64 __m, int __count)_mm_slli_si64607,20171
_m_psllqi (__m64 __m, int __count)_m_psllqi613,20367
_mm_sra_pi16 (__m64 __m, __m64 __count)_mm_sra_pi16620,20611
_m_psraw (__m64 __m, __m64 __count)_m_psraw626,20815
_mm_srai_pi16 (__m64 __m, int __count)_mm_srai_pi16632,20983
_m_psrawi (__m64 __m, int __count)_m_psrawi638,21179
_mm_sra_pi32 (__m64 __m, __m64 __count)_mm_sra_pi32645,21422
_m_psrad (__m64 __m, __m64 __count)_m_psrad651,21626
_mm_srai_pi32 (__m64 __m, int __count)_mm_srai_pi32657,21794
_m_psradi (__m64 __m, int __count)_m_psradi663,21990
_mm_srl_pi16 (__m64 __m, __m64 __count)_mm_srl_pi16670,22227
_m_psrlw (__m64 __m, __m64 __count)_m_psrlw676,22431
_mm_srli_pi16 (__m64 __m, int __count)_mm_srli_pi16682,22599
_m_psrlwi (__m64 __m, int __count)_m_psrlwi688,22795
_mm_srl_pi32 (__m64 __m, __m64 __count)_mm_srl_pi32695,23031
_m_psrld (__m64 __m, __m64 __count)_m_psrld701,23235
_mm_srli_pi32 (__m64 __m, int __count)_mm_srli_pi32707,23403
_m_psrldi (__m64 __m, int __count)_m_psrldi713,23599
_mm_srl_si64 (__m64 __m, __m64 __count)_mm_srl_si64720,23833
_m_psrlq (__m64 __m, __m64 __count)_m_psrlq726,24037
_mm_srli_si64 (__m64 __m, int __count)_mm_srli_si64732,24205
_m_psrlqi (__m64 __m, int __count)_m_psrlqi738,24401
_mm_and_si64 (__m64 __m1, __m64 __m2)_mm_and_si64745,24621
_m_pand (__m64 __m1, __m64 __m2)_m_pand751,24796
_mm_andnot_si64 (__m64 __m1, __m64 __m2)_mm_andnot_si64759,25061
_m_pandn (__m64 __m1, __m64 __m2)_m_pandn765,25240
_mm_or_si64 (__m64 __m1, __m64 __m2)_mm_or_si64772,25468
_m_por (__m64 __m1, __m64 __m2)_m_por778,25641
_mm_xor_si64 (__m64 __m1, __m64 __m2)_mm_xor_si64785,25863
_m_pxor (__m64 __m1, __m64 __m2)_m_pxor791,26038
_mm_cmpeq_pi8 (__m64 __m1, __m64 __m2)_mm_cmpeq_pi8799,26316
_m_pcmpeqb (__m64 __m1, __m64 __m2)_m_pcmpeqb805,26519
_mm_cmpgt_pi8 (__m64 __m1, __m64 __m2)_mm_cmpgt_pi8811,26686
_m_pcmpgtb (__m64 __m1, __m64 __m2)_m_pcmpgtb817,26889
_mm_cmpeq_pi16 (__m64 __m1, __m64 __m2)_mm_cmpeq_pi16825,27173
_m_pcmpeqw (__m64 __m1, __m64 __m2)_m_pcmpeqw831,27377
_mm_cmpgt_pi16 (__m64 __m1, __m64 __m2)_mm_cmpgt_pi16837,27545
_m_pcmpgtw (__m64 __m1, __m64 __m2)_m_pcmpgtw843,27749
_mm_cmpeq_pi32 (__m64 __m1, __m64 __m2)_mm_cmpeq_pi32851,28037
_m_pcmpeqd (__m64 __m1, __m64 __m2)_m_pcmpeqd857,28241
_mm_cmpgt_pi32 (__m64 __m1, __m64 __m2)_mm_cmpgt_pi32863,28409
_m_pcmpgtd (__m64 __m1, __m64 __m2)_m_pcmpgtd869,28613
_mm_setzero_si64 (void)_mm_setzero_si64876,28811
_mm_set_pi32 (int __i1, int __i0)_mm_set_pi32883,29021
_mm_set_pi16 (short __w3, short __w2, short __w1, short __w0)_mm_set_pi16890,29281
_mm_set_pi8 (char __b7, char __b6, char __b5, char __b4,_mm_set_pi8897,29581
_mm_setr_pi32 (int __i0, int __i1)_mm_setr_pi32906,29947
_mm_setr_pi16 (short __w0, short __w1, short __w2, short __w3)_mm_setr_pi16912,30112
_mm_setr_pi8 (char __b0, char __b1, char __b2, char __b3,_mm_setr_pi8918,30317
_mm_set1_pi32 (int __i)_mm_set1_pi32926,30665
_mm_set1_pi16 (short __w)_mm_set1_pi16933,30891
_mm_set1_pi8 (char __b)_mm_set1_pi8940,31129
#undef __DISABLE_MMX____DISABLE_MMX__945,31243

/usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/mm_malloc.h,259
mm_malloc.h1,0
#define _MM_MALLOC_H_INCLUDED_MM_MALLOC_H_INCLUDED25,1034
extern int posix_memalign (void **, size_t, size_t);posix_memalign32,1204
_mm_malloc (size_t __size, size_t __alignment)_mm_malloc38,1360
_mm_free (void *__ptr)_mm_free52,1704

/usr/include/stdlib.h,9536
stdlib.h1,0
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION24,871
#define __need_size_t__need_size_t28,1017
#define __need_wchar_t__need_wchar_t29,1039
#define __need_NULL__need_NULL30,1062
#define	_STDLIB_H	_STDLIB_H35,1118
# define WEXITSTATUS(WEXITSTATUS43,1408
# define WTERMSIG(WTERMSIG44,1460
# define WSTOPSIG(WSTOPSIG45,1506
# define WIFEXITED(WIFEXITED46,1552
# define WIFSIGNALED(WIFSIGNALED47,1600
# define WIFSTOPPED(WIFSTOPPED48,1652
#  define WIFCONTINUED(WIFCONTINUED50,1725
    int quot;			/* Quotient.  */quot60,1961
    int quot;			/* Quotient.  */__anon15::quot60,1961
    int rem;			/* Remainder.  */rem61,1994
    int rem;			/* Remainder.  */__anon15::rem61,1994
  } div_t;div_t62,2027
    long int quot;		/* Quotient.  */quot68,2110
    long int quot;		/* Quotient.  */__anon16::quot68,2110
    long int rem;		/* Remainder.  */rem69,2147
    long int rem;		/* Remainder.  */__anon16::rem69,2147
  } ldiv_t;ldiv_t70,2184
# define __ldiv_t_defined	__ldiv_t_defined71,2196
    long long int quot;		/* Quotient.  */quot78,2348
    long long int quot;		/* Quotient.  */__anon17::quot78,2348
    long long int rem;		/* Remainder.  */rem79,2390
    long long int rem;		/* Remainder.  */__anon17::rem79,2390
  } lldiv_t;lldiv_t80,2432
# define __lldiv_t_defined	__lldiv_t_defined81,2445
#define	RAND_MAX	RAND_MAX86,2545
#define	EXIT_FAILURE	EXIT_FAILURE91,2694
#define	EXIT_SUCCESS	EXIT_SUCCESS92,2745
#define	MB_CUR_MAX	MB_CUR_MAX96,2871
extern size_t __ctype_get_mb_cur_max (void) __THROW __wur;__wur97,2918
     __THROW __nonnull ((1));__THROW119,3732
		     char **__restrict __endptr) __THROW __nonnull ((1));__THROW124,3914
     __THROW __nonnull ((1));__THROW128,4069
     __THROW __nonnull ((1));__THROW136,4300
     __THROW __nonnull ((1));__THROW142,4484
     __THROW __nonnull ((1));__THROW148,4668
     __THROW __nonnull ((1));__THROW154,4857
     __THROW __nonnull ((1));__THROW160,5046
     __THROW __nonnull ((1));__THROW166,5235
     __THROW __nonnull ((1));__THROW172,5429
     __THROW __nonnull ((1));__THROW178,5608
     __THROW __nonnull ((1));__THROW182,5802
     __THROW __nonnull ((1));__THROW189,6020
     __THROW __nonnull ((1));__THROW194,6242
     __THROW __nonnull ((1));__THROW202,6488
     __THROW __nonnull ((1));__THROW207,6705
     __THROW __nonnull ((3));__THROW214,6950
     __THROW __nonnull ((3));__THROW218,7071
     __THROW __nonnull ((3));__THROW222,7198
     __THROW __nonnull ((3));__THROW228,7390
     __THROW __nonnull ((3));__THROW234,7582
     __THROW __nonnull ((3));__THROW240,7774
     __THROW __nonnull ((3));__THROW246,7963
     __THROW __nonnull ((3));__THROW252,8152
     __THROW __nonnull ((3));__THROW258,8341
     __THROW __nonnull ((3));__THROW264,8534
			  locale_t __loc) __THROW __nonnull ((1, 4));__THROW276,8914
     __THROW __nonnull ((1, 4));__THROW281,9103
     __THROW __nonnull ((1, 4));__THROW287,9278
     __THROW __nonnull ((1, 4));__THROW293,9469
     __THROW __nonnull ((1, 3));__THROW297,9605
     __THROW __nonnull ((1, 3));__THROW301,9746
     __THROW __nonnull ((1, 3));__THROW306,9903
     __THROW __nonnull ((1, 3));__THROW312,10074
     __THROW __nonnull ((1, 3));__THROW319,10253
     __THROW __nonnull ((1, 3));__THROW326,10432
     __THROW __nonnull ((1, 3));__THROW333,10618
     __THROW __nonnull ((1, 3));__THROW340,10804
     __THROW __nonnull ((1, 3));__THROW347,10990
     __THROW __nonnull ((1, 3));__THROW354,11169
__NTH (atoi (const char *__nptr))atoi361,11277
__NTH (atol (const char *__nptr))atol366,11392
__NTH (atoll (const char *__nptr))atoll373,11542
extern char *l64a (long int __n) __THROW __wur;__wur385,11896
			size_t __statelen) __THROW __nonnull ((2));__THROW411,13111
extern char *setstate (char *__statebuf) __THROW __nonnull ((1));__THROW415,13292
struct random_datarandom_data423,13556
    int32_t *fptr;		/* Front pointer.  */fptr425,13579
    int32_t *fptr;		/* Front pointer.  */random_data::fptr425,13579
    int32_t *rptr;		/* Rear pointer.  */rptr426,13621
    int32_t *rptr;		/* Rear pointer.  */random_data::rptr426,13621
    int32_t *state;		/* Array of state values.  */state427,13662
    int32_t *state;		/* Array of state values.  */random_data::state427,13662
    int rand_type;		/* Type of random number generator.  */rand_type428,13713
    int rand_type;		/* Type of random number generator.  */random_data::rand_type428,13713
    int rand_deg;		/* Degree of random number generator.  */rand_deg429,13773
    int rand_deg;		/* Degree of random number generator.  */random_data::rand_deg429,13773
    int rand_sep;		/* Distance between front and rear.  */rand_sep430,13834
    int rand_sep;		/* Distance between front and rear.  */random_data::rand_sep430,13834
    int32_t *end_ptr;		/* Pointer behind state table.  */end_ptr431,13893
    int32_t *end_ptr;		/* Pointer behind state table.  */random_data::end_ptr431,13893
		     int32_t *__restrict __result) __THROW __nonnull ((1, 2));__THROW435,14016
     __THROW __nonnull ((2));__THROW438,14152
     __THROW __nonnull ((2, 4));__THROW443,14320
     __THROW __nonnull ((1, 2));__THROW447,14453
extern double erand48 (unsigned short int __xsubi[3]) __THROW __nonnull ((1));__THROW468,15127
     __THROW __nonnull ((1));__THROW473,15357
     __THROW __nonnull ((1));__THROW478,15537
     __THROW __nonnull ((1));__THROW483,15723
extern void lcong48 (unsigned short int __param[7]) __THROW __nonnull ((1));__THROW484,15753
struct drand48_datadrand48_data490,16036
    unsigned short int __x[3];	/* Current state.  */__x492,16060
    unsigned short int __x[3];	/* Current state.  */drand48_data::__x492,16060
    unsigned short int __old_x[3]; /* Old state.  */__old_x493,16113
    unsigned short int __old_x[3]; /* Old state.  */drand48_data::__old_x493,16113
    unsigned short int __c;	/* Additive const. in congruential formula.  */__c494,16166
    unsigned short int __c;	/* Additive const. in congruential formula.  */drand48_data::__c494,16166
    unsigned short int __init;	/* Flag for initializing.  */__init495,16242
    unsigned short int __init;	/* Flag for initializing.  */drand48_data::__init495,16242
    __extension__ unsigned long long int __a;	/* Factor in congruential__a496,16303
    __extension__ unsigned long long int __a;	/* Factor in congruentialdrand48_data::__a496,16303
		      double *__restrict __result) __THROW __nonnull ((1, 2));__THROW502,16547
		      double *__restrict __result) __THROW __nonnull ((1, 2));__THROW505,16715
     __THROW __nonnull ((1, 2));__THROW510,16938
     __THROW __nonnull ((1, 2));__THROW514,17113
     __THROW __nonnull ((1, 2));__THROW519,17303
     __THROW __nonnull ((1, 2));__THROW523,17478
     __THROW __nonnull ((2));__THROW527,17622
		     struct drand48_data *__buffer) __THROW __nonnull ((1, 2));__THROW530,17707
     __THROW __nonnull ((1, 2));__THROW534,17866
extern void *malloc (size_t __size) __THROW __attribute_malloc__ __wur;__wur539,17997
     __THROW __attribute_malloc__ __wur;__wur542,18194
     __THROW __attribute_warn_unused_result__;__attribute_warn_unused_result__550,18581
     __THROW __attribute_warn_unused_result__;__attribute_warn_unused_result__559,19052
extern void *valloc (size_t __size) __THROW __attribute_malloc__ __wur;__wur572,19444
extern int atexit (void (*__func) (void)) __THROW __nonnull ((1));__THROW592,20123
extern int at_quick_exit (void (*__func) (void)) __THROW __nonnull ((1));__THROW600,20447
     __THROW __nonnull ((1));__THROW608,20731
extern int putenv (char *__string) __THROW __nonnull ((1));__THROW644,22191
     __THROW __nonnull ((2));__THROW651,22455
extern int unsetenv (const char *__name) __THROW __nonnull ((1));__THROW654,22540
extern char *mktemp (char *__template) __THROW __nonnull ((1));__THROW672,23253
#   define mkstemp mkstemp691,24000
#   define mkstemps mkstemps713,24669
#   define mkostemp mkostemp745,25783
#   define mkostemps mkostemps767,26481
		       char *__restrict __resolved) __THROW __wur;__wur798,27486
# define __COMPAR_FN_T__COMPAR_FN_T804,27621
typedef int (*__compar_fn_t) (const void *, const void *);__compar_fn_t805,27644
typedef __compar_fn_t comparison_fn_t;comparison_fn_t808,27722
typedef int (*__compar_d_fn_t) (const void *, const void *, void *);__compar_d_fn_t812,27793
extern int abs (int __x) __THROW __attribute__ ((__const__)) __wur;__wur837,28651
extern long int labs (long int __x) __THROW __attribute__ ((__const__)) __wur;__wur838,28719
     __THROW __attribute__ ((__const__)) __wur;__wur842,28880
     __THROW __attribute__ ((__const__)) __wur;__wur850,29130
     __THROW __attribute__ ((__const__)) __wur;__wur852,29234
     __THROW __attribute__ ((__const__)) __wur;__wur857,29393
		   size_t __len) __THROW __nonnull ((3, 4, 5));__THROW901,31254
		   size_t __len) __THROW __nonnull ((3, 4, 5));__THROW904,31431
     __THROW __nonnull ((3, 4, 5));__THROW909,31636
     __THROW __nonnull ((3, 4, 5));__THROW913,31826
extern void setkey (const char *__key) __THROW __nonnull ((1));__THROW963,33743
extern char *ptsname (int __fd) __THROW __wur;__wur988,34526
     __THROW __nonnull ((2));__THROW996,34847
extern int getpt (void);getpt999,34947
     __THROW __nonnull ((1));__THROW1007,35272

/usr/include/bits/waitflags.h,338
waitflags.h1,0
#define	WNOHANG	WNOHANG25,1021
#define	WUNTRACED	WUNTRACED26,1068
# define WSTOPPED	WSTOPPED30,1238
# define WEXITED	WEXITED31,1306
# define WCONTINUED	WCONTINUED32,1351
# define WNOWAIT	WNOWAIT33,1404
#define __WNOTHREAD __WNOTHREAD36,1477
#define __WALL	__WALL38,1582
#define __WCLONE	__WCLONE39,1636

/usr/include/bits/waitstatus.h,531
waitstatus.h1,0
#define	__WEXITSTATUS(__WEXITSTATUS28,1094
#define	__WTERMSIG(__WTERMSIG31,1207
#define	__WSTOPSIG(__WSTOPSIG34,1318
#define	__WIFEXITED(__WIFEXITED37,1423
#define __WIFSIGNALED(__WIFSIGNALED40,1538
#define	__WIFSTOPPED(__WIFSTOPPED44,1681
# define __WIFCONTINUED(__WIFCONTINUED49,1906
#define	__WCOREDUMP(__WCOREDUMP53,2032
#define	__W_EXITCODE(__W_EXITCODE56,2132
#define	__W_STOPCODE(__W_STOPCODE57,2184
#define __W_CONTINUED	__W_CONTINUED58,2230
#define	__WCOREFLAG	__WCOREFLAG59,2260

/usr/include/bits/floatn.h,1143
floatn.h1,0
#define _BITS_FLOATN_H_BITS_FLOATN_H20,867
# define __HAVE_FLOAT128 __HAVE_FLOAT12832,1353
# define __HAVE_FLOAT128 __HAVE_FLOAT12834,1386
# define __HAVE_DISTINCT_FLOAT128 __HAVE_DISTINCT_FLOAT12840,1585
# define __HAVE_DISTINCT_FLOAT128 __HAVE_DISTINCT_FLOAT12842,1627
#define __HAVE_FLOAT64X __HAVE_FLOAT64X48,1863
#define __HAVE_FLOAT64X_LONG_DOUBLE __HAVE_FLOAT64X_LONG_DOUBLE54,2114
#   define __f128(__f12863,2415
#   define __f128(__f12865,2449
typedef _Complex float __cfloat128 __attribute__ ((__mode__ (__TC__)));__cfloat12874,2733
#   define __CFLOAT128 __CFLOAT12875,2805
#   define __CFLOAT128 __CFLOAT12877,2848
typedef __float128 _Float128;_Float12886,3106
#   define __builtin_huge_valf128(__builtin_huge_valf12891,3234
#   define __builtin_copysignf128 __builtin_copysignf128100,3634
#   define __builtin_fabsf128 __builtin_fabsf128101,3688
#   define __builtin_inff128(__builtin_inff128102,3734
#   define __builtin_nanf128(__builtin_nanf128103,3796
#   define __builtin_nansf128(__builtin_nansf128104,3860
#   define __builtin_signbitf128 __builtin_signbitf128112,4214

/usr/include/bits/floatn-common.h,4233
floatn-common.h1,0
#define _BITS_FLOATN_COMMON_H_BITS_FLOATN_COMMON_H21,931
#define __HAVE_FLOAT16 __HAVE_FLOAT1634,1498
#define __HAVE_FLOAT32 __HAVE_FLOAT3235,1523
#define __HAVE_FLOAT64 __HAVE_FLOAT6436,1548
#define __HAVE_FLOAT32X __HAVE_FLOAT32X37,1573
#define __HAVE_FLOAT128X __HAVE_FLOAT128X38,1599
#define __HAVE_DISTINCT_FLOAT16 __HAVE_DISTINCT_FLOAT1652,2366
#define __HAVE_DISTINCT_FLOAT32 __HAVE_DISTINCT_FLOAT3253,2413
#define __HAVE_DISTINCT_FLOAT64 __HAVE_DISTINCT_FLOAT6454,2447
#define __HAVE_DISTINCT_FLOAT32X __HAVE_DISTINCT_FLOAT32X55,2481
#define __HAVE_DISTINCT_FLOAT64X __HAVE_DISTINCT_FLOAT64X56,2516
#define __HAVE_DISTINCT_FLOAT128X __HAVE_DISTINCT_FLOAT128X57,2551
# define __HAVE_FLOATN_NOT_TYPEDEF __HAVE_FLOATN_NOT_TYPEDEF63,2856
# define __HAVE_FLOATN_NOT_TYPEDEF __HAVE_FLOATN_NOT_TYPEDEF65,2899
#   define __f16(__f1676,3282
#   define __f16(__f1678,3328
#   define __f32(__f3284,3444
#   define __f32(__f3286,3477
#    define __f64(__f6493,3625
#    define __f64(__f6495,3660
#   define __f64(__f6498,3701
#   define __f32x(__f32x104,3818
#   define __f32x(__f32x106,3849
#    define __f64x(__f64x113,4003
#    define __f64x(__f64x115,4039
#   define __f64x(__f64x118,4090
#   define __f128x(__f128x126,4274
typedef _Complex float __cfloat16 __attribute__ ((__mode__ (__HC__)));__cfloat16133,4450
#   define __CFLOAT16 __CFLOAT16134,4521
#   define __CFLOAT16 __CFLOAT16136,4562
#   define __CFLOAT32 __CFLOAT32142,4691
#   define __CFLOAT32 __CFLOAT32144,4736
#    define __CFLOAT64 __CFLOAT64151,4897
#    define __CFLOAT64 __CFLOAT64153,4950
#   define __CFLOAT64 __CFLOAT64156,5007
#   define __CFLOAT32X __CFLOAT32X162,5137
#   define __CFLOAT32X __CFLOAT32X164,5184
#    define __CFLOAT64X __CFLOAT64X171,5351
#    define __CFLOAT64X __CFLOAT64X173,5405
#   define __CFLOAT64X __CFLOAT64X176,5459
#   define __CFLOAT128X __CFLOAT128X184,5653
typedef float _Float16 __attribute__ ((__mode__ (__HF__)));_Float16192,5859
#   define __builtin_huge_valf16(__builtin_huge_valf16196,5957
#   define __builtin_inff16(__builtin_inff16197,6027
#   define __builtin_nanf16(__builtin_nanf16198,6087
#   define __builtin_nansf16(__builtin_nansf16199,6149
typedef float _Float32;_Float32207,6304
#   define __builtin_huge_valf32(__builtin_huge_valf32211,6366
#   define __builtin_inff32(__builtin_inff32212,6426
#   define __builtin_nanf32(__builtin_nanf32213,6476
#   define __builtin_nansf32(__builtin_nansf32214,6528
typedef long double _Float64;_Float64231,7049
#    define __builtin_huge_valf64(__builtin_huge_valf64235,7119
#    define __builtin_inff64(__builtin_inff64236,7180
#    define __builtin_nanf64(__builtin_nanf64237,7231
#    define __builtin_nansf64(__builtin_nansf64238,7284
typedef double _Float64;_Float64244,7411
#    define __builtin_huge_valf64(__builtin_huge_valf64248,7476
#    define __builtin_inff64(__builtin_inff64249,7536
#    define __builtin_nanf64(__builtin_nanf64250,7586
#    define __builtin_nansf64(__builtin_nansf64251,7638
typedef double _Float32x;_Float32x261,7795
#   define __builtin_huge_valf32x(__builtin_huge_valf32x265,7859
#   define __builtin_inff32x(__builtin_inff32x266,7919
#   define __builtin_nanf32x(__builtin_nanf32x267,7969
#   define __builtin_nansf32x(__builtin_nansf32x268,8021
typedef long double _Float64x;_Float64x278,8203
#    define __builtin_huge_valf64x(__builtin_huge_valf64x282,8274
#    define __builtin_inff64x(__builtin_inff64x283,8336
#    define __builtin_nanf64x(__builtin_nanf64x284,8388
#    define __builtin_nansf64x(__builtin_nansf64x285,8442
typedef _Float128 _Float64x;_Float64x291,8570
#    define __builtin_huge_valf64x(__builtin_huge_valf64x295,8639
#    define __builtin_inff64x(__builtin_inff64x296,8704
#    define __builtin_nanf64x(__builtin_nanf64x297,8759
#    define __builtin_nansf64x(__builtin_nansf64x298,8816
#   define __builtin_huge_valf128x(__builtin_huge_valf128x312,9062
#   define __builtin_inff128x(__builtin_inff128x313,9136
#   define __builtin_nanf128x(__builtin_nanf128x314,9200
#   define __builtin_nansf128x(__builtin_nansf128x315,9266

/usr/include/sys/types.h,4255
types.h1,0
#define	_SYS_TYPES_H	_SYS_TYPES_H23,883
typedef __u_char u_char;u_char33,1014
typedef __u_short u_short;u_short34,1039
typedef __u_int u_int;u_int35,1066
typedef __u_long u_long;u_long36,1089
typedef __quad_t quad_t;quad_t37,1114
typedef __u_quad_t u_quad_t;u_quad_t38,1139
typedef __fsid_t fsid_t;fsid_t39,1168
#  define __u_char_defined__u_char_defined40,1193
typedef __loff_t loff_t;loff_t44,1236
typedef __ino_t ino_t;ino_t48,1315
typedef __ino64_t ino_t;ino_t50,1345
# define __ino_t_defined__ino_t_defined52,1378
typedef __ino64_t ino64_t;ino64_t55,1470
# define __ino64_t_defined__ino64_t_defined56,1497
typedef __dev_t dev_t;dev_t60,1556
# define __dev_t_defined__dev_t_defined61,1579
typedef __gid_t gid_t;gid_t65,1636
# define __gid_t_defined__gid_t_defined66,1659
typedef __mode_t mode_t;mode_t70,1717
# define __mode_t_defined__mode_t_defined71,1742
typedef __nlink_t nlink_t;nlink_t75,1802
# define __nlink_t_defined__nlink_t_defined76,1829
typedef __uid_t uid_t;uid_t80,1888
# define __uid_t_defined__uid_t_defined81,1911
typedef __off_t off_t;off_t86,1997
typedef __off64_t off_t;off_t88,2027
# define __off_t_defined__off_t_defined90,2060
typedef __off64_t off64_t;off64_t93,2152
# define __off64_t_defined__off64_t_defined94,2179
typedef __pid_t pid_t;pid_t98,2238
# define __pid_t_defined__pid_t_defined99,2261
typedef __id_t id_t;id_t104,2379
# define __id_t_defined__id_t_defined105,2400
typedef __ssize_t ssize_t;ssize_t109,2458
# define __ssize_t_defined__ssize_t_defined110,2485
typedef __daddr_t daddr_t;daddr_t115,2565
typedef __caddr_t caddr_t;caddr_t116,2592
#  define __daddr_t_defined__daddr_t_defined117,2619
typedef __key_t key_t;key_t122,2739
# define __key_t_defined__key_t_defined123,2762
typedef __useconds_t useconds_t;useconds_t135,3032
#  define __useconds_t_defined__useconds_t_defined136,3065
typedef __suseconds_t suseconds_t;suseconds_t139,3135
#  define __suseconds_t_defined__suseconds_t_defined140,3170
#define	__need_size_t__need_size_t144,3218
typedef unsigned long int ulong;ulong149,3323
typedef unsigned short int ushort;ushort150,3356
typedef unsigned int uint;uint151,3391
typedef	unsigned char u_int8_t;u_int8_t161,3611
typedef	unsigned short int u_int16_t;u_int16_t162,3643
typedef	unsigned int u_int32_t;u_int32_t163,3681
typedef unsigned long int u_int64_t;u_int64_t165,3735
__extension__ typedef unsigned long long int u_int64_t;u_int64_t167,3779
typedef int register_t;register_t170,3844
# define __u_intN_t(__u_intN_t175,3948
typedef int register_t __attribute__ ((__mode__ (__word__)));register_t183,4150
#define __BIT_TYPES_DEFINED__	__BIT_TYPES_DEFINED__189,4307
# define __SYSMACROS_DEPRECATED_INCLUSION__SYSMACROS_DEPRECATED_INCLUSION204,4901
# undef __SYSMACROS_DEPRECATED_INCLUSION__SYSMACROS_DEPRECATED_INCLUSION206,4971
typedef __blksize_t blksize_t;blksize_t212,5129
# define __blksize_t_defined__blksize_t_defined213,5160
typedef __blkcnt_t blkcnt_t;	 /* Type to count number of disk blocks.  */blkcnt_t219,5305
#  define __blkcnt_t_defined__blkcnt_t_defined220,5379
typedef __fsblkcnt_t fsblkcnt_t; /* Type to count file system blocks.  */fsblkcnt_t223,5446
#  define __fsblkcnt_t_defined__fsblkcnt_t_defined224,5520
typedef __fsfilcnt_t fsfilcnt_t; /* Type to count file system inodes.  */fsfilcnt_t227,5589
#  define __fsfilcnt_t_defined__fsfilcnt_t_defined228,5663
typedef __blkcnt64_t blkcnt_t;	   /* Type to count number of disk blocks.  */blkcnt_t232,5736
#  define __blkcnt_t_defined__blkcnt_t_defined233,5814
typedef __fsblkcnt64_t fsblkcnt_t; /* Type to count file system blocks.  */fsblkcnt_t236,5881
#  define __fsblkcnt_t_defined__fsblkcnt_t_defined237,5957
typedef __fsfilcnt64_t fsfilcnt_t; /* Type to count file system inodes.  */fsfilcnt_t240,6026
#  define __fsfilcnt_t_defined__fsfilcnt_t_defined241,6102
typedef __blkcnt64_t blkcnt64_t;     /* Type to count number of disk blocks. */blkcnt64_t246,6174
typedef __fsblkcnt64_t fsblkcnt64_t; /* Type to count file system blocks.  */fsblkcnt64_t247,6254
typedef __fsfilcnt64_t fsfilcnt64_t; /* Type to count file system inodes.  */fsfilcnt64_t248,6332

/usr/include/bits/types/clock_t.h,106
clock_t.h1,0
#define __clock_t_defined __clock_t_defined2,26
typedef __clock_t clock_t;clock_t7,108

/usr/include/bits/types/clockid_t.h,118
clockid_t.h1,0
#define __clockid_t_defined __clockid_t_defined2,28
typedef __clockid_t clockid_t;clockid_t7,135

/usr/include/bits/types/time_t.h,100
time_t.h1,0
#define __time_t_defined __time_t_defined2,25
typedef __time_t time_t;time_t7,105

/usr/include/bits/types/timer_t.h,106
timer_t.h1,0
#define __timer_t_defined __timer_t_defined2,26
typedef __timer_t timer_t;timer_t7,124

/usr/include/endian.h,1351
endian.h1,0
#define	_ENDIAN_H	_ENDIAN_H19,807
#define	__LITTLE_ENDIAN	__LITTLE_ENDIAN31,1344
#define	__BIG_ENDIAN	__BIG_ENDIAN32,1373
#define	__PDP_ENDIAN	__PDP_ENDIAN33,1399
# define __FLOAT_WORD_ORDER __FLOAT_WORD_ORDER41,1637
# define LITTLE_ENDIAN	LITTLE_ENDIAN45,1704
# define BIG_ENDIAN	BIG_ENDIAN46,1743
# define PDP_ENDIAN	PDP_ENDIAN47,1776
# define BYTE_ORDER	BYTE_ORDER48,1809
# define __LONG_LONG_PAIR(__LONG_LONG_PAIR52,1886
# define __LONG_LONG_PAIR(__LONG_LONG_PAIR54,1962
#  define htobe16(htobe1664,2191
#  define htole16(htole1665,2227
#  define be16toh(be16toh66,2270
#  define le16toh(le16toh67,2306
#  define htobe32(htobe3269,2350
#  define htole32(htole3270,2386
#  define be32toh(be32toh71,2429
#  define le32toh(le32toh72,2465
#  define htobe64(htobe6474,2509
#  define htole64(htole6475,2545
#  define be64toh(be64toh76,2588
#  define le64toh(le64toh77,2624
#  define htobe16(htobe1680,2675
#  define htole16(htole1681,2718
#  define be16toh(be16toh82,2754
#  define le16toh(le16toh83,2797
#  define htobe32(htobe3285,2834
#  define htole32(htole3286,2877
#  define be32toh(be32toh87,2913
#  define le32toh(le32toh88,2956
#  define htobe64(htobe6490,2993
#  define htole64(htole6491,3036
#  define be64toh(be64toh92,3072
#  define le64toh(le64toh93,3115

/usr/include/bits/endian.h,55
endian.h1,0
#define __BYTE_ORDER __BYTE_ORDER7,139

/usr/include/bits/byteswap.h,709
byteswap.h1,0
#define _BITS_BYTESWAP_H _BITS_BYTESWAP_H24,1029
#define __bswap_constant_16(__bswap_constant_1631,1166
#define __bswap_constant_32(__bswap_constant_3238,1361
__bswap_32 (unsigned int __bsx)__bswap_3245,1602
#   define __bswap_32(__bswap_3258,2161
#   define __bswap_32(__bswap_3267,2473
#  define __bswap_32(__bswap_3282,2946
__bswap_32 (unsigned int __bsx)__bswap_3288,3113
# define __bswap_constant_64(__bswap_constant_6497,3256
__bswap_64 (__uint64_t __bsx)__bswap_64109,3795
#  define __bswap_64(__bswap_64114,3889
#  define __bswap_64(__bswap_64123,4191
# define __bswap_constant_64(__bswap_constant_64138,5050
__bswap_64 (__uint64_t __bsx)__bswap_64149,5554

/usr/include/bits/byteswap-16.h,158
byteswap-16.h1,0
#  define __bswap_16(__bswap_1625,1001
#  define __bswap_16(__bswap_1638,1433
__bswap_16 (unsigned short int __bsx)__bswap_1645,1644

/usr/include/bits/uintn-identity.h,268
uintn-identity.h1,0
#define _BITS_UINTN_IDENTITY_H _BITS_UINTN_IDENTITY_H24,1042
__uint16_identity (__uint16_t __x)__uint16_identity33,1287
__uint32_identity (__uint32_t __x)__uint32_identity39,1368
__uint64_identity (__uint64_t __x)__uint64_identity45,1449

/usr/include/sys/select.h,977
select.h1,0
#define _SYS_SELECT_H	_SYS_SELECT_H22,960
typedef __suseconds_t suseconds_t;suseconds_t43,1417
# define __suseconds_t_defined__suseconds_t_defined44,1452
typedef long int __fd_mask;__fd_mask49,1554
#undef	__NFDBITS__NFDBITS52,1649
#define __NFDBITS	__NFDBITS54,1729
#define	__FD_ELT(__FD_ELT55,1778
#define	__FD_MASK(__FD_MASK56,1816
    __fd_mask fds_bits[__FD_SETSIZE / __NFDBITS];fds_bits64,2060
    __fd_mask fds_bits[__FD_SETSIZE / __NFDBITS];__anon18::fds_bits64,2060
# define __FDS_BITS(__FDS_BITS65,2110
  } fd_set;fd_set70,2263
#define	FD_SETSIZE	FD_SETSIZE73,2331
typedef __fd_mask fd_mask;fd_mask77,2448
# define NFDBITS	NFDBITS80,2551
#define	FD_SET(FD_SET85,2623
#define	FD_CLR(FD_CLR86,2672
#define	FD_ISSET(FD_ISSET87,2721
#define	FD_ZERO(FD_ZERO88,2774
extern int select (int __nfds, fd_set *__restrict __readfds,select101,3267
extern int pselect (int __nfds, fd_set *__restrict __readfds,pselect113,3713

/usr/include/bits/select.h,296
select.h1,0
#  define __FD_ZERO_STOS __FD_ZERO_STOS28,987
#  define __FD_ZERO_STOS __FD_ZERO_STOS30,1027
# define __FD_ZERO(__FD_ZERO33,1069
# define __FD_ZERO(__FD_ZERO48,1555
#define __FD_SET(__FD_SET58,1841
#define __FD_CLR(__FD_CLR60,1929
#define __FD_ISSET(__FD_ISSET62,2018

/usr/include/bits/types/sigset_t.h,112
sigset_t.h1,0
#define __sigset_t_defined __sigset_t_defined2,27
typedef __sigset_t sigset_t;sigset_t7,158

/usr/include/bits/types/__sigset_t.h,268
__sigset_t.h1,0
#define ____sigset_t_defined____sigset_t_defined2,29
#define _SIGSET_NWORDS _SIGSET_NWORDS4,59
  unsigned long int __val[_SIGSET_NWORDS];__val7,141
  unsigned long int __val[_SIGSET_NWORDS];__anon19::__val7,141
} __sigset_t;__sigset_t8,184

/usr/include/bits/types/struct_timeval.h,341
struct_timeval.h1,0
#define __timeval_defined __timeval_defined2,26
struct timevaltimeval8,178
  __time_t tv_sec;		/* Seconds.  */tv_sec10,195
  __time_t tv_sec;		/* Seconds.  */timeval::tv_sec10,195
  __suseconds_t tv_usec;	/* Microseconds.  */tv_usec11,231
  __suseconds_t tv_usec;	/* Microseconds.  */timeval::tv_usec11,231

/usr/include/bits/types/struct_timespec.h,354
struct_timespec.h1,0
#define __timespec_defined __timespec_defined2,27
struct timespectimespec8,207
  __time_t tv_sec;		/* Seconds.  */tv_sec10,225
  __time_t tv_sec;		/* Seconds.  */timespec::tv_sec10,225
  __syscall_slong_t tv_nsec;	/* Nanoseconds.  */tv_nsec11,261
  __syscall_slong_t tv_nsec;	/* Nanoseconds.  */timespec::tv_nsec11,261

/usr/include/sys/sysmacros.h,1069
sysmacros.h1,0
# define _SYS_SYSMACROS_H_OUTER _SYS_SYSMACROS_H_OUTER22,913
#undef majormajor30,1273
#undef minorminor31,1286
#undef makedevmakedev32,1299
#define _SYS_SYSMACROS_H _SYS_SYSMACROS_H37,1437
#define __SYSMACROS_DM(__SYSMACROS_DM52,2026
#define __SYSMACROS_DM1(__SYSMACROS_DM162,2537
#define __SYSMACROS_DECL_TEMPL(__SYSMACROS_DECL_TEMPL64,2604
#define __SYSMACROS_IMPL_TEMPL(__SYSMACROS_IMPL_TEMPL67,2730
# undef __SYSMACROS_DECL_TEMPL__SYSMACROS_DECL_TEMPL90,3333
# undef __SYSMACROS_IMPL_TEMPL__SYSMACROS_IMPL_TEMPL91,3364
# undef __SYSMACROS_DECLARE_MAJOR__SYSMACROS_DECLARE_MAJOR92,3395
# undef __SYSMACROS_DECLARE_MINOR__SYSMACROS_DECLARE_MINOR93,3429
# undef __SYSMACROS_DECLARE_MAKEDEV__SYSMACROS_DECLARE_MAKEDEV94,3463
# undef __SYSMACROS_DEFINE_MAJOR__SYSMACROS_DEFINE_MAJOR95,3499
# undef __SYSMACROS_DEFINE_MINOR__SYSMACROS_DEFINE_MINOR96,3532
# undef __SYSMACROS_DEFINE_MAKEDEV__SYSMACROS_DEFINE_MAKEDEV97,3565
# define major(major101,3648
# define minor(minor102,3711
# define makedev(makedev103,3774

/usr/include/bits/sysmacros.h,485
sysmacros.h1,0
#define _BITS_SYSMACROS_H _BITS_SYSMACROS_H20,866
#define __SYSMACROS_DECLARE_MAJOR(__SYSMACROS_DECLARE_MAJOR36,1575
#define __SYSMACROS_DEFINE_MAJOR(__SYSMACROS_DEFINE_MAJOR39,1677
#define __SYSMACROS_DECLARE_MINOR(__SYSMACROS_DECLARE_MINOR48,1980
#define __SYSMACROS_DEFINE_MINOR(__SYSMACROS_DEFINE_MINOR51,2082
#define __SYSMACROS_DECLARE_MAKEDEV(__SYSMACROS_DECLARE_MAKEDEV60,2385
#define __SYSMACROS_DEFINE_MAKEDEV(__SYSMACROS_DEFINE_MAKEDEV63,2515

/usr/include/bits/pthreadtypes.h,3145
pthreadtypes.h1,0
# define _BITS_PTHREADTYPES_COMMON_H	_BITS_PTHREADTYPES_COMMON_H20,887
typedef unsigned long int pthread_t;pthread_t27,1122
  char __size[__SIZEOF_PTHREAD_MUTEXATTR_T];__size34,1287
  char __size[__SIZEOF_PTHREAD_MUTEXATTR_T];__anon20::__size34,1287
  int __align;__align35,1332
  int __align;__anon20::__align35,1332
} pthread_mutexattr_t;pthread_mutexattr_t36,1347
  char __size[__SIZEOF_PTHREAD_CONDATTR_T];__size43,1510
  char __size[__SIZEOF_PTHREAD_CONDATTR_T];__anon21::__size43,1510
  int __align;__align44,1554
  int __align;__anon21::__align44,1554
} pthread_condattr_t;pthread_condattr_t45,1569
typedef unsigned int pthread_key_t;pthread_key_t49,1629
typedef int __ONCE_ALIGNMENT pthread_once_t;pthread_once_t53,1693
union pthread_attr_tpthread_attr_t56,1740
  char __size[__SIZEOF_PTHREAD_ATTR_T];__size58,1763
  char __size[__SIZEOF_PTHREAD_ATTR_T];pthread_attr_t::__size58,1763
  long int __align;__align59,1803
  long int __align;pthread_attr_t::__align59,1803
typedef union pthread_attr_t pthread_attr_t;pthread_attr_t62,1856
# define __have_pthread_attr_t __have_pthread_attr_t63,1901
  struct __pthread_mutex_s __data;__data69,1959
  struct __pthread_mutex_s __data;__anon22::__data69,1959
  char __size[__SIZEOF_PTHREAD_MUTEX_T];__size70,1994
  char __size[__SIZEOF_PTHREAD_MUTEX_T];__anon22::__size70,1994
  long int __align;__align71,2035
  long int __align;__anon22::__align71,2035
} pthread_mutex_t;pthread_mutex_t72,2055
  struct __pthread_cond_s __data;__data77,2092
  struct __pthread_cond_s __data;__anon23::__data77,2092
  char __size[__SIZEOF_PTHREAD_COND_T];__size78,2126
  char __size[__SIZEOF_PTHREAD_COND_T];__anon23::__size78,2126
  __extension__ long long int __align;__align79,2166
  __extension__ long long int __align;__anon23::__align79,2166
} pthread_cond_t;pthread_cond_t80,2205
  struct __pthread_rwlock_arch_t __data;__data88,2424
  struct __pthread_rwlock_arch_t __data;__anon24::__data88,2424
  char __size[__SIZEOF_PTHREAD_RWLOCK_T];__size89,2465
  char __size[__SIZEOF_PTHREAD_RWLOCK_T];__anon24::__size89,2465
  long int __align;__align90,2507
  long int __align;__anon24::__align90,2507
} pthread_rwlock_t;pthread_rwlock_t91,2527
  char __size[__SIZEOF_PTHREAD_RWLOCKATTR_T];__size95,2564
  char __size[__SIZEOF_PTHREAD_RWLOCKATTR_T];__anon25::__size95,2564
  long int __align;__align96,2610
  long int __align;__anon25::__align96,2610
} pthread_rwlockattr_t;pthread_rwlockattr_t97,2630
typedef volatile int pthread_spinlock_t;pthread_spinlock_t103,2717
  char __size[__SIZEOF_PTHREAD_BARRIER_T];__size110,2868
  char __size[__SIZEOF_PTHREAD_BARRIER_T];__anon26::__size110,2868
  long int __align;__align111,2911
  long int __align;__anon26::__align111,2911
} pthread_barrier_t;pthread_barrier_t112,2931
  char __size[__SIZEOF_PTHREAD_BARRIERATTR_T];__size116,2969
  char __size[__SIZEOF_PTHREAD_BARRIERATTR_T];__anon27::__size116,2969
  int __align;__align117,3016
  int __align;__anon27::__align117,3016
} pthread_barrierattr_t;pthread_barrierattr_t118,3031

/usr/include/bits/thread-shared-types.h,4152
thread-shared-types.h1,0
#define _THREAD_SHARED_TYPES_H _THREAD_SHARED_TYPES_H20,887
typedef struct __pthread_internal_list__pthread_internal_list82,3401
  struct __pthread_internal_list *__prev;__prev84,3442
  struct __pthread_internal_list *__prev;__pthread_internal_list::__prev84,3442
  struct __pthread_internal_list *__next;__next85,3484
  struct __pthread_internal_list *__next;__pthread_internal_list::__next85,3484
} __pthread_list_t;__pthread_list_t86,3526
typedef struct __pthread_internal_slist__pthread_internal_slist88,3552
  struct __pthread_internal_slist *__next;__next90,3594
  struct __pthread_internal_slist *__next;__pthread_internal_slist::__next90,3594
} __pthread_slist_t;__pthread_slist_t91,3637
#  define __PTHREAD_SPINS_DATA	__PTHREAD_SPINS_DATA97,3760
#  define __PTHREAD_SPINS __PTHREAD_SPINS100,3831
#  define __PTHREAD_SPINS_DATA	__PTHREAD_SPINS_DATA102,3881
#  define __PTHREAD_SPINS __PTHREAD_SPINS108,4003
#  define __spins __spins109,4046
#  define __elision __elision110,4088
# define __PTHREAD_SPINS_DATA __PTHREAD_SPINS_DATA113,4148
# define __PTHREAD_SPINS __PTHREAD_SPINS115,4258
struct __pthread_mutex_s__pthread_mutex_s118,4293
  int __lock __LOCK_ALIGNMENT;__LOCK_ALIGNMENT120,4320
  int __lock __LOCK_ALIGNMENT;__pthread_mutex_s::__LOCK_ALIGNMENT120,4320
  unsigned int __count;__count121,4351
  unsigned int __count;__pthread_mutex_s::__count121,4351
  int __owner;__owner122,4375
  int __owner;__pthread_mutex_s::__owner122,4375
  unsigned int __nusers;__nusers124,4429
  unsigned int __nusers;__pthread_mutex_s::__nusers124,4429
  int __kind;__kind128,4583
  int __kind;__pthread_mutex_s::__kind128,4583
  unsigned int __nusers;__nusers131,4666
  unsigned int __nusers;__pthread_mutex_s::__nusers131,4666
  __PTHREAD_SPINS_DATA;__PTHREAD_SPINS_DATA134,4729
  __PTHREAD_SPINS_DATA;__pthread_mutex_s::__PTHREAD_SPINS_DATA134,4729
  __pthread_list_t __list;__list135,4753
  __pthread_list_t __list;__pthread_mutex_s::__list135,4753
# define __PTHREAD_MUTEX_HAVE_PREV __PTHREAD_MUTEX_HAVE_PREV136,4780
    __PTHREAD_SPINS_DATA;__PTHREAD_SPINS_DATA140,4854
    __PTHREAD_SPINS_DATA;__pthread_mutex_s::__anon28::__PTHREAD_SPINS_DATA140,4854
    __pthread_slist_t __list;__list141,4880
    __pthread_slist_t __list;__pthread_mutex_s::__anon28::__list141,4880
# define __PTHREAD_MUTEX_HAVE_PREV __PTHREAD_MUTEX_HAVE_PREV143,4915
struct __pthread_cond_s__pthread_cond_s151,5044
    __extension__ unsigned long long int __wseq;__wseq155,5096
    __extension__ unsigned long long int __wseq;__pthread_cond_s::__anon29::__wseq155,5096
      unsigned int __low;__low158,5162
      unsigned int __low;__pthread_cond_s::__anon29::__anon30::__low158,5162
      unsigned int __high;__high159,5188
      unsigned int __high;__pthread_cond_s::__anon29::__anon30::__high159,5188
    } __wseq32;__wseq32160,5215
    } __wseq32;__pthread_cond_s::__anon29::__wseq32160,5215
    __extension__ unsigned long long int __g1_start;__g1_start164,5262
    __extension__ unsigned long long int __g1_start;__pthread_cond_s::__anon31::__g1_start164,5262
      unsigned int __low;__low167,5332
      unsigned int __low;__pthread_cond_s::__anon31::__anon32::__low167,5332
      unsigned int __high;__high168,5358
      unsigned int __high;__pthread_cond_s::__anon31::__anon32::__high168,5358
    } __g1_start32;__g1_start32169,5385
    } __g1_start32;__pthread_cond_s::__anon31::__g1_start32169,5385
  unsigned int __g_refs[2] __LOCK_ALIGNMENT;__LOCK_ALIGNMENT171,5410
  unsigned int __g_refs[2] __LOCK_ALIGNMENT;__pthread_cond_s::__LOCK_ALIGNMENT171,5410
  unsigned int __g_size[2];__g_size172,5455
  unsigned int __g_size[2];__pthread_cond_s::__g_size172,5455
  unsigned int __g1_orig_size;__g1_orig_size173,5483
  unsigned int __g1_orig_size;__pthread_cond_s::__g1_orig_size173,5483
  unsigned int __wrefs;__wrefs174,5514
  unsigned int __wrefs;__pthread_cond_s::__wrefs174,5514
  unsigned int __g_signals[2];__g_signals175,5538
  unsigned int __g_signals[2];__pthread_cond_s::__g_signals175,5538

/usr/include/bits/pthreadtypes-arch.h,4595
pthreadtypes-arch.h1,0
#define _BITS_PTHREADTYPES_ARCH_H	_BITS_PTHREADTYPES_ARCH_H19,823
#  define __SIZEOF_PTHREAD_MUTEX_T __SIZEOF_PTHREAD_MUTEX_T25,928
#  define __SIZEOF_PTHREAD_ATTR_T __SIZEOF_PTHREAD_ATTR_T26,966
#  define __SIZEOF_PTHREAD_MUTEX_T __SIZEOF_PTHREAD_MUTEX_T27,1003
#  define __SIZEOF_PTHREAD_RWLOCK_T __SIZEOF_PTHREAD_RWLOCK_T28,1041
#  define __SIZEOF_PTHREAD_BARRIER_T __SIZEOF_PTHREAD_BARRIER_T29,1080
#  define __SIZEOF_PTHREAD_MUTEX_T __SIZEOF_PTHREAD_MUTEX_T31,1127
#  define __SIZEOF_PTHREAD_ATTR_T __SIZEOF_PTHREAD_ATTR_T32,1165
#  define __SIZEOF_PTHREAD_MUTEX_T __SIZEOF_PTHREAD_MUTEX_T33,1202
#  define __SIZEOF_PTHREAD_RWLOCK_T __SIZEOF_PTHREAD_RWLOCK_T34,1240
#  define __SIZEOF_PTHREAD_BARRIER_T __SIZEOF_PTHREAD_BARRIER_T35,1279
# define __SIZEOF_PTHREAD_MUTEX_T __SIZEOF_PTHREAD_MUTEX_T38,1333
# define __SIZEOF_PTHREAD_ATTR_T __SIZEOF_PTHREAD_ATTR_T39,1370
# define __SIZEOF_PTHREAD_MUTEX_T __SIZEOF_PTHREAD_MUTEX_T40,1406
# define __SIZEOF_PTHREAD_RWLOCK_T __SIZEOF_PTHREAD_RWLOCK_T41,1443
# define __SIZEOF_PTHREAD_BARRIER_T __SIZEOF_PTHREAD_BARRIER_T42,1481
#define __SIZEOF_PTHREAD_MUTEXATTR_T __SIZEOF_PTHREAD_MUTEXATTR_T44,1527
#define __SIZEOF_PTHREAD_COND_T __SIZEOF_PTHREAD_COND_T45,1566
#define __SIZEOF_PTHREAD_CONDATTR_T __SIZEOF_PTHREAD_CONDATTR_T46,1601
#define __SIZEOF_PTHREAD_RWLOCKATTR_T __SIZEOF_PTHREAD_RWLOCKATTR_T47,1639
#define __SIZEOF_PTHREAD_BARRIERATTR_T __SIZEOF_PTHREAD_BARRIERATTR_T48,1679
#define __PTHREAD_COMPAT_PADDING_MID__PTHREAD_COMPAT_PADDING_MID51,1767
#define __PTHREAD_COMPAT_PADDING_END__PTHREAD_COMPAT_PADDING_END52,1804
#define __PTHREAD_MUTEX_LOCK_ELISION __PTHREAD_MUTEX_LOCK_ELISION53,1841
# define __PTHREAD_MUTEX_NUSERS_AFTER_KIND __PTHREAD_MUTEX_NUSERS_AFTER_KIND55,1901
# define __PTHREAD_MUTEX_USE_UNION __PTHREAD_MUTEX_USE_UNION56,1947
# define __PTHREAD_MUTEX_NUSERS_AFTER_KIND __PTHREAD_MUTEX_NUSERS_AFTER_KIND58,1999
# define __PTHREAD_MUTEX_USE_UNION __PTHREAD_MUTEX_USE_UNION59,2045
#define __LOCK_ALIGNMENT__LOCK_ALIGNMENT62,2099
#define __ONCE_ALIGNMENT__ONCE_ALIGNMENT63,2124
struct __pthread_rwlock_arch_t__pthread_rwlock_arch_t65,2150
  unsigned int __readers;__readers67,2183
  unsigned int __readers;__pthread_rwlock_arch_t::__readers67,2183
  unsigned int __writers;__writers68,2209
  unsigned int __writers;__pthread_rwlock_arch_t::__writers68,2209
  unsigned int __wrphase_futex;__wrphase_futex69,2235
  unsigned int __wrphase_futex;__pthread_rwlock_arch_t::__wrphase_futex69,2235
  unsigned int __writers_futex;__writers_futex70,2267
  unsigned int __writers_futex;__pthread_rwlock_arch_t::__writers_futex70,2267
  unsigned int __pad3;__pad371,2299
  unsigned int __pad3;__pthread_rwlock_arch_t::__pad371,2299
  unsigned int __pad4;__pad472,2322
  unsigned int __pad4;__pthread_rwlock_arch_t::__pad472,2322
  int __cur_writer;__cur_writer74,2363
  int __cur_writer;__pthread_rwlock_arch_t::__cur_writer74,2363
  int __shared;__shared75,2383
  int __shared;__pthread_rwlock_arch_t::__shared75,2383
  signed char __rwelision;__rwelision76,2399
  signed char __rwelision;__pthread_rwlock_arch_t::__rwelision76,2399
  unsigned char __pad1[3];__pad178,2445
  unsigned char __pad1[3];__pthread_rwlock_arch_t::__pad178,2445
#  define __PTHREAD_RWLOCK_ELISION_EXTRA __PTHREAD_RWLOCK_ELISION_EXTRA79,2472
  unsigned char __pad1[7];__pad181,2535
  unsigned char __pad1[7];__pthread_rwlock_arch_t::__pad181,2535
#  define __PTHREAD_RWLOCK_ELISION_EXTRA __PTHREAD_RWLOCK_ELISION_EXTRA82,2562
  unsigned long int __pad2;__pad284,2638
  unsigned long int __pad2;__pthread_rwlock_arch_t::__pad284,2638
  unsigned int __flags;__flags87,2764
  unsigned int __flags;__pthread_rwlock_arch_t::__flags87,2764
# define __PTHREAD_RWLOCK_INT_FLAGS_SHARED	__PTHREAD_RWLOCK_INT_FLAGS_SHARED88,2788
  unsigned char __flags;__flags92,2937
  unsigned char __flags;__pthread_rwlock_arch_t::__flags92,2937
  unsigned char __shared;__shared93,2962
  unsigned char __shared;__pthread_rwlock_arch_t::__shared93,2962
  signed char __rwelision;__rwelision94,2988
  signed char __rwelision;__pthread_rwlock_arch_t::__rwelision94,2988
# define __PTHREAD_RWLOCK_ELISION_EXTRA __PTHREAD_RWLOCK_ELISION_EXTRA95,3015
  unsigned char __pad2;__pad296,3057
  unsigned char __pad2;__pthread_rwlock_arch_t::__pad296,3057
  int __cur_writer;__cur_writer97,3081
  int __cur_writer;__pthread_rwlock_arch_t::__cur_writer97,3081
# define __cleanup_fct_attribute __cleanup_fct_attribute103,3182

/usr/include/alloca.h,153
alloca.h1,0
#define	_ALLOCA_H	_ALLOCA_H19,807
#define	__need_size_t__need_size_t23,851
#undef	allocaalloca29,949
# define alloca(alloca35,1102

/usr/include/bits/stdlib-float.h,66
stdlib-float.h1,0
__NTH (atof (const char *__nptr))atof25,995

/usr/include/assert.h,632
assert.h1,0
# undef	_ASSERT_H_ASSERT_H24,863
# undef	assertassert25,881
# undef __ASSERT_VOID_CAST__ASSERT_VOID_CAST26,896
#  undef assert_perrorassert_perror29,942
#define	_ASSERT_H	_ASSERT_H34,997
# define __ASSERT_VOID_CAST __ASSERT_VOID_CAST38,1088
# define __ASSERT_VOID_CAST __ASSERT_VOID_CAST40,1140
# define assert(assert50,1343
#  define assert_perror(assert_perror59,1619
#  define assert(assert89,2633
#  define assert_perror(assert_perror114,3615
#   define __ASSERT_FUNCTION	__ASSERT_FUNCTION126,4177
# undef static_assertstatic_assert139,4494
# define static_assert static_assert140,4516

/usr/include/string.h,5489
string.h1,0
#define	_STRING_H	_STRING_H23,868
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION25,889
#define	__need_size_t__need_size_t31,1041
#define	__need_NULL__need_NULL32,1063
# define __CORRECT_ISO_CPP_STRING_H_PROTO__CORRECT_ISO_CPP_STRING_H_PROTO37,1215
		     size_t __n) __THROW __nonnull ((1, 2));__THROW43,1378
     __THROW __nonnull ((1, 2));__THROW47,1586
     __THROW __nonnull ((1, 2));__THROW55,1971
extern void *memset (void *__s, int __c, size_t __n) __THROW __nonnull ((1));__THROW60,2066
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__64,2249
      __THROW __asm ("memchr") __attribute_pure__ __nonnull ((1));__attribute_pure__71,2444
      __THROW __asm ("memchr") __attribute_pure__ __nonnull ((1));__attribute_pure__73,2576
      __THROW __attribute_pure__ __nonnull ((1));__attribute_pure__91,3003
     __THROW __asm ("rawmemchr") __attribute_pure__ __nonnull ((1));__attribute_pure__99,3257
     __THROW __asm ("rawmemchr") __attribute_pure__ __nonnull ((1));__attribute_pure__101,3388
     __THROW __attribute_pure__ __nonnull ((1));__attribute_pure__104,3514
      __THROW __asm ("memrchr") __attribute_pure__ __nonnull ((1));__attribute_pure__110,3731
      __THROW __asm ("memrchr") __attribute_pure__ __nonnull ((1));__attribute_pure__112,3871
      __THROW __attribute_pure__ __nonnull ((1));__attribute_pure__115,4006
     __THROW __nonnull ((1, 2));__THROW122,4174
     __THROW __nonnull ((1, 2));__THROW126,4358
     __THROW __nonnull ((1, 2));__THROW130,4497
		      size_t __n) __THROW __nonnull ((1, 2));__THROW133,4667
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__137,4797
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__140,4959
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__144,5116
     __THROW __nonnull ((2));__THROW148,5337
     __THROW __attribute_pure__ __nonnull ((1, 2, 3));__attribute_pure__156,5635
			 locale_t __l) __THROW __nonnull ((2, 4));__THROW160,5861
     __THROW __attribute_malloc__ __nonnull ((1));__attribute_malloc__167,6107
     __THROW __attribute_malloc__ __nonnull ((1));__attribute_malloc__175,6430
# define strdupa(strdupa180,6591
# define strndupa(strndupa190,6966
     __THROW __asm ("strchr") __attribute_pure__ __nonnull ((1));__attribute_pure__206,7476
     __THROW __asm ("strchr") __attribute_pure__ __nonnull ((1));__attribute_pure__208,7595
     __THROW __attribute_pure__ __nonnull ((1));__attribute_pure__226,7975
     __THROW __asm ("strrchr") __attribute_pure__ __nonnull ((1));__attribute_pure__233,8171
     __THROW __asm ("strrchr") __attribute_pure__ __nonnull ((1));__attribute_pure__235,8292
     __THROW __attribute_pure__ __nonnull ((1));__attribute_pure__253,8678
     __THROW __asm ("strchrnul") __attribute_pure__ __nonnull ((1));__attribute_pure__261,8970
     __THROW __asm ("strchrnul") __attribute_pure__ __nonnull ((1));__attribute_pure__263,9101
     __THROW __attribute_pure__ __nonnull ((1));__attribute_pure__266,9227
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__273,9463
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__277,9681
     __THROW __asm ("strpbrk") __attribute_pure__ __nonnull ((1, 2));__attribute_pure__283,9909
     __THROW __asm ("strpbrk") __attribute_pure__ __nonnull ((1, 2));__attribute_pure__285,10046
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__303,10484
     __THROW __asm ("strstr") __attribute_pure__ __nonnull ((1, 2));__attribute_pure__310,10715
     __THROW __asm ("strstr") __attribute_pure__ __nonnull ((1, 2));__attribute_pure__312,10857
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__330,11324
     __THROW __nonnull ((2));__THROW336,11522
     __THROW __nonnull ((2, 3));__THROW343,11793
     __THROW __nonnull ((2, 3));__THROW347,11961
     __THROW __asm ("strcasestr") __attribute_pure__ __nonnull ((1, 2));__attribute_pure__354,12210
     __THROW __asm ("strcasestr") __attribute_pure__ __nonnull ((1, 2));__attribute_pure__357,12375
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__360,12526
     __THROW __attribute_pure__ __nonnull ((1, 3));__attribute_pure__370,12857
     __THROW __nonnull ((1, 2));__THROW376,13096
     __THROW __nonnull ((1, 2));__THROW379,13226
     __THROW __attribute_pure__ __nonnull ((1));__attribute_pure__385,13338
     __THROW __attribute_pure__ __nonnull ((1));__attribute_pure__391,13616
			   __xpg_strerror_r) __nonnull ((2));__xpg_strerror_r411,14448
     __THROW __nonnull ((2));__THROW414,14570
#   define strerror_r strerror_r415,14600
extern void explicit_bzero (void *__s, size_t __n) __THROW __nonnull ((1));__THROW435,15185
     __THROW __nonnull ((1, 2));__THROW441,15480
     __THROW __nonnull ((1, 2));__THROW450,15821
     __THROW __nonnull ((1, 2));__THROW452,15930
     __THROW __nonnull ((1, 2));__THROW458,16178
     __THROW __nonnull ((1, 2));__THROW461,16308
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__467,16501
extern char *strfry (char *__string) __THROW __nonnull ((1));__THROW470,16584
extern void *memfrob (void *__s, size_t __n) __THROW __nonnull ((1));__THROW473,16679
extern char *basename (const char *__filename) __THROW __nonnull ((1));__THROW486,17237

/usr/include/bits/types/locale_t.h,123
locale_t.h1,0
#define _BITS_TYPES_LOCALE_T_H _BITS_TYPES_LOCALE_T_H20,847
typedef __locale_t locale_t;locale_t24,917

/usr/include/bits/types/__locale_t.h,853
__locale_t.h1,0
#define _BITS_TYPES___LOCALE_T_H _BITS_TYPES___LOCALE_T_H21,939
struct __locale_struct__locale_struct28,1224
  struct __locale_data *__locales[13]; /* 13 = __LC_LAST. */__locales31,1309
  struct __locale_data *__locales[13]; /* 13 = __LC_LAST. */__locale_struct::__locales31,1309
  const unsigned short int *__ctype_b;__ctype_b34,1448
  const unsigned short int *__ctype_b;__locale_struct::__ctype_b34,1448
  const int *__ctype_tolower;__ctype_tolower35,1487
  const int *__ctype_tolower;__locale_struct::__ctype_tolower35,1487
  const int *__ctype_toupper;__ctype_toupper36,1517
  const int *__ctype_toupper;__locale_struct::__ctype_toupper36,1517
  const char *__names[13];__names39,1608
  const char *__names[13];__locale_struct::__names39,1608
typedef struct __locale_struct *__locale_t;__locale_t42,1639

/usr/include/strings.h,1472
strings.h1,0
#define	_STRINGS_H	_STRINGS_H19,808
#define __need_size_t__need_size_t22,852
# define __CORRECT_ISO_CPP_STRINGS_H_PROTO__CORRECT_ISO_CPP_STRINGS_H_PROTO27,1006
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__35,1241
  __THROW __nonnull ((1, 2));__THROW39,1428
extern void bzero (void *__s, size_t __n) __THROW __nonnull ((1));__THROW42,1489
     __THROW __asm ("index") __attribute_pure__ __nonnull ((1));__attribute_pure__49,1715
     __THROW __asm ("index") __attribute_pure__ __nonnull ((1));__attribute_pure__51,1832
     __THROW __attribute_pure__ __nonnull ((1));__attribute_pure__69,2214
     __THROW __asm ("rindex") __attribute_pure__ __nonnull ((1));__attribute_pure__77,2431
     __THROW __asm ("rindex") __attribute_pure__ __nonnull ((1));__attribute_pure__79,2550
     __THROW __attribute_pure__ __nonnull ((1));__attribute_pure__97,2938
extern int ffs (int __i) __THROW __attribute_const__;__attribute_const__104,3227
extern int ffsl (long int __l) __THROW __attribute_const__;__attribute_const__110,3403
     __THROW __attribute_const__;__attribute_const__112,3515
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__117,3658
     __THROW __attribute_pure__ __nonnull ((1, 2));__attribute_pure__121,3848
     __THROW __attribute_pure__ __nonnull ((1, 2, 3));__attribute_pure__129,4170
     __THROW __attribute_pure__ __nonnull ((1, 2, 4));__attribute_pure__135,4421

/usr/lib/gcc/x86_64-pc-linux-gnu/8.1.0/include/float.h,12810
float.h1,0
#define _FLOAT_H____FLOAT_H___29,1059
#undef FLT_RADIXFLT_RADIX32,1123
#define FLT_RADIX	FLT_RADIX33,1140
#undef FLT_MANT_DIGFLT_MANT_DIG36,1235
#undef DBL_MANT_DIGDBL_MANT_DIG37,1255
#undef LDBL_MANT_DIGLDBL_MANT_DIG38,1275
#define FLT_MANT_DIG	FLT_MANT_DIG39,1296
#define DBL_MANT_DIG	DBL_MANT_DIG40,1334
#define LDBL_MANT_DIG	LDBL_MANT_DIG41,1372
#undef FLT_DIGFLT_DIG50,1709
#undef DBL_DIGDBL_DIG51,1724
#undef LDBL_DIGLDBL_DIG52,1739
#define FLT_DIG	FLT_DIG53,1755
#define DBL_DIG	DBL_DIG54,1784
#define LDBL_DIG	LDBL_DIG55,1813
#undef FLT_MIN_EXPFLT_MIN_EXP58,1919
#undef DBL_MIN_EXPDBL_MIN_EXP59,1938
#undef LDBL_MIN_EXPLDBL_MIN_EXP60,1957
#define FLT_MIN_EXP	FLT_MIN_EXP61,1977
#define DBL_MIN_EXP	DBL_MIN_EXP62,2013
#define LDBL_MIN_EXP	LDBL_MIN_EXP63,2049
#undef FLT_MIN_10_EXPFLT_MIN_10_EXP70,2240
#undef DBL_MIN_10_EXPDBL_MIN_10_EXP71,2262
#undef LDBL_MIN_10_EXPLDBL_MIN_10_EXP72,2284
#define FLT_MIN_10_EXP	FLT_MIN_10_EXP73,2307
#define DBL_MIN_10_EXP	DBL_MIN_10_EXP74,2349
#define LDBL_MIN_10_EXP	LDBL_MIN_10_EXP75,2391
#undef FLT_MAX_EXPFLT_MAX_EXP78,2516
#undef DBL_MAX_EXPDBL_MAX_EXP79,2535
#undef LDBL_MAX_EXPLDBL_MAX_EXP80,2554
#define FLT_MAX_EXP	FLT_MAX_EXP81,2574
#define DBL_MAX_EXP	DBL_MAX_EXP82,2610
#define LDBL_MAX_EXP	LDBL_MAX_EXP83,2646
#undef FLT_MAX_10_EXPFLT_MAX_10_EXP90,2846
#undef DBL_MAX_10_EXPDBL_MAX_10_EXP91,2868
#undef LDBL_MAX_10_EXPLDBL_MAX_10_EXP92,2890
#define FLT_MAX_10_EXP	FLT_MAX_10_EXP93,2913
#define DBL_MAX_10_EXP	DBL_MAX_10_EXP94,2955
#define LDBL_MAX_10_EXP	LDBL_MAX_10_EXP95,2997
#undef FLT_MAXFLT_MAX101,3124
#undef DBL_MAXDBL_MAX102,3139
#undef LDBL_MAXLDBL_MAX103,3154
#define FLT_MAX	FLT_MAX104,3170
#define DBL_MAX	DBL_MAX105,3199
#define LDBL_MAX	LDBL_MAX106,3228
#undef FLT_EPSILONFLT_EPSILON110,3393
#undef DBL_EPSILONDBL_EPSILON111,3412
#undef LDBL_EPSILONLDBL_EPSILON112,3431
#define FLT_EPSILON	FLT_EPSILON113,3451
#define DBL_EPSILON	DBL_EPSILON114,3487
#define LDBL_EPSILON	LDBL_EPSILON115,3523
#undef FLT_MINFLT_MIN118,3635
#undef DBL_MINDBL_MIN119,3650
#undef LDBL_MINLDBL_MIN120,3665
#define FLT_MIN	FLT_MIN121,3681
#define DBL_MIN	DBL_MIN122,3710
#define LDBL_MIN	LDBL_MIN123,3739
#undef FLT_ROUNDSFLT_ROUNDS127,3924
#define FLT_ROUNDS FLT_ROUNDS128,3942
#undef FLT_EVAL_METHODFLT_EVAL_METHOD193,7039
#define FLT_EVAL_METHOD FLT_EVAL_METHOD195,7103
#define FLT_EVAL_METHOD	FLT_EVAL_METHOD197,7164
#undef DECIMAL_DIGDECIMAL_DIG208,7546
#define DECIMAL_DIG	DECIMAL_DIG209,7565
#undef FLT_DECIMAL_DIGFLT_DECIMAL_DIG215,7743
#undef DBL_DECIMAL_DIGDBL_DECIMAL_DIG216,7766
#undef LDBL_DECIMAL_DIGLDBL_DECIMAL_DIG217,7789
#define FLT_DECIMAL_DIG	FLT_DECIMAL_DIG218,7813
#define DBL_DECIMAL_DIG	DBL_DECIMAL_DIG219,7858
#define LDBL_DECIMAL_DIG	LDBL_DECIMAL_DIG220,7903
#undef FLT_HAS_SUBNORMFLT_HAS_SUBNORM223,7998
#undef DBL_HAS_SUBNORMDBL_HAS_SUBNORM224,8021
#undef LDBL_HAS_SUBNORMLDBL_HAS_SUBNORM225,8044
#define FLT_HAS_SUBNORM	FLT_HAS_SUBNORM226,8068
#define DBL_HAS_SUBNORM	DBL_HAS_SUBNORM227,8112
#define LDBL_HAS_SUBNORM	LDBL_HAS_SUBNORM228,8156
#undef FLT_TRUE_MINFLT_TRUE_MIN231,8256
#undef DBL_TRUE_MINDBL_TRUE_MIN232,8276
#undef LDBL_TRUE_MINLDBL_TRUE_MIN233,8296
#define FLT_TRUE_MIN	FLT_TRUE_MIN234,8317
#define DBL_TRUE_MIN	DBL_TRUE_MIN235,8357
#define LDBL_TRUE_MIN	LDBL_TRUE_MIN236,8397
#define CR_DECIMAL_DIG	CR_DECIMAL_DIG244,8654
#undef FLT16_MANT_DIGFLT16_MANT_DIG252,8878
#define FLT16_MANT_DIG	FLT16_MANT_DIG253,8900
#undef FLT16_DIGFLT16_DIG254,8943
#define FLT16_DIG	FLT16_DIG255,8960
#undef FLT16_MIN_EXPFLT16_MIN_EXP256,8993
#define FLT16_MIN_EXP	FLT16_MIN_EXP257,9014
#undef FLT16_MIN_10_EXPFLT16_MIN_10_EXP258,9055
#define FLT16_MIN_10_EXP	FLT16_MIN_10_EXP259,9079
#undef FLT16_MAX_EXPFLT16_MAX_EXP260,9125
#define FLT16_MAX_EXP	FLT16_MAX_EXP261,9146
#undef FLT16_MAX_10_EXPFLT16_MAX_10_EXP262,9187
#define FLT16_MAX_10_EXP	FLT16_MAX_10_EXP263,9211
#undef FLT16_MAXFLT16_MAX264,9257
#define FLT16_MAX	FLT16_MAX265,9274
#undef FLT16_EPSILONFLT16_EPSILON266,9307
#define FLT16_EPSILON	FLT16_EPSILON267,9328
#undef FLT16_MINFLT16_MIN268,9369
#define FLT16_MIN	FLT16_MIN269,9386
#undef FLT16_DECIMAL_DIGFLT16_DECIMAL_DIG270,9419
#define FLT16_DECIMAL_DIG	FLT16_DECIMAL_DIG271,9444
#undef FLT16_TRUE_MINFLT16_TRUE_MIN272,9492
#define FLT16_TRUE_MIN	FLT16_TRUE_MIN273,9514
#undef FLT32_MANT_DIGFLT32_MANT_DIG277,9620
#define FLT32_MANT_DIG	FLT32_MANT_DIG278,9642
#undef FLT32_DIGFLT32_DIG279,9685
#define FLT32_DIG	FLT32_DIG280,9702
#undef FLT32_MIN_EXPFLT32_MIN_EXP281,9735
#define FLT32_MIN_EXP	FLT32_MIN_EXP282,9756
#undef FLT32_MIN_10_EXPFLT32_MIN_10_EXP283,9797
#define FLT32_MIN_10_EXP	FLT32_MIN_10_EXP284,9821
#undef FLT32_MAX_EXPFLT32_MAX_EXP285,9867
#define FLT32_MAX_EXP	FLT32_MAX_EXP286,9888
#undef FLT32_MAX_10_EXPFLT32_MAX_10_EXP287,9929
#define FLT32_MAX_10_EXP	FLT32_MAX_10_EXP288,9953
#undef FLT32_MAXFLT32_MAX289,9999
#define FLT32_MAX	FLT32_MAX290,10016
#undef FLT32_EPSILONFLT32_EPSILON291,10049
#define FLT32_EPSILON	FLT32_EPSILON292,10070
#undef FLT32_MINFLT32_MIN293,10111
#define FLT32_MIN	FLT32_MIN294,10128
#undef FLT32_DECIMAL_DIGFLT32_DECIMAL_DIG295,10161
#define FLT32_DECIMAL_DIG	FLT32_DECIMAL_DIG296,10186
#undef FLT32_TRUE_MINFLT32_TRUE_MIN297,10234
#define FLT32_TRUE_MIN	FLT32_TRUE_MIN298,10256
#undef FLT64_MANT_DIGFLT64_MANT_DIG302,10362
#define FLT64_MANT_DIG	FLT64_MANT_DIG303,10384
#undef FLT64_DIGFLT64_DIG304,10427
#define FLT64_DIG	FLT64_DIG305,10444
#undef FLT64_MIN_EXPFLT64_MIN_EXP306,10477
#define FLT64_MIN_EXP	FLT64_MIN_EXP307,10498
#undef FLT64_MIN_10_EXPFLT64_MIN_10_EXP308,10539
#define FLT64_MIN_10_EXP	FLT64_MIN_10_EXP309,10563
#undef FLT64_MAX_EXPFLT64_MAX_EXP310,10609
#define FLT64_MAX_EXP	FLT64_MAX_EXP311,10630
#undef FLT64_MAX_10_EXPFLT64_MAX_10_EXP312,10671
#define FLT64_MAX_10_EXP	FLT64_MAX_10_EXP313,10695
#undef FLT64_MAXFLT64_MAX314,10741
#define FLT64_MAX	FLT64_MAX315,10758
#undef FLT64_EPSILONFLT64_EPSILON316,10791
#define FLT64_EPSILON	FLT64_EPSILON317,10812
#undef FLT64_MINFLT64_MIN318,10853
#define FLT64_MIN	FLT64_MIN319,10870
#undef FLT64_DECIMAL_DIGFLT64_DECIMAL_DIG320,10903
#define FLT64_DECIMAL_DIG	FLT64_DECIMAL_DIG321,10928
#undef FLT64_TRUE_MINFLT64_TRUE_MIN322,10976
#define FLT64_TRUE_MIN	FLT64_TRUE_MIN323,10998
#undef FLT128_MANT_DIGFLT128_MANT_DIG327,11105
#define FLT128_MANT_DIG	FLT128_MANT_DIG328,11128
#undef FLT128_DIGFLT128_DIG329,11173
#define FLT128_DIG	FLT128_DIG330,11191
#undef FLT128_MIN_EXPFLT128_MIN_EXP331,11226
#define FLT128_MIN_EXP	FLT128_MIN_EXP332,11248
#undef FLT128_MIN_10_EXPFLT128_MIN_10_EXP333,11291
#define FLT128_MIN_10_EXP	FLT128_MIN_10_EXP334,11316
#undef FLT128_MAX_EXPFLT128_MAX_EXP335,11364
#define FLT128_MAX_EXP	FLT128_MAX_EXP336,11386
#undef FLT128_MAX_10_EXPFLT128_MAX_10_EXP337,11429
#define FLT128_MAX_10_EXP	FLT128_MAX_10_EXP338,11454
#undef FLT128_MAXFLT128_MAX339,11502
#define FLT128_MAX	FLT128_MAX340,11520
#undef FLT128_EPSILONFLT128_EPSILON341,11555
#define FLT128_EPSILON	FLT128_EPSILON342,11577
#undef FLT128_MINFLT128_MIN343,11620
#define FLT128_MIN	FLT128_MIN344,11638
#undef FLT128_DECIMAL_DIGFLT128_DECIMAL_DIG345,11673
#define FLT128_DECIMAL_DIG	FLT128_DECIMAL_DIG346,11699
#undef FLT128_TRUE_MINFLT128_TRUE_MIN347,11749
#define FLT128_TRUE_MIN	FLT128_TRUE_MIN348,11772
#undef FLT32X_MANT_DIGFLT32X_MANT_DIG352,11882
#define FLT32X_MANT_DIG	FLT32X_MANT_DIG353,11905
#undef FLT32X_DIGFLT32X_DIG354,11950
#define FLT32X_DIG	FLT32X_DIG355,11968
#undef FLT32X_MIN_EXPFLT32X_MIN_EXP356,12003
#define FLT32X_MIN_EXP	FLT32X_MIN_EXP357,12025
#undef FLT32X_MIN_10_EXPFLT32X_MIN_10_EXP358,12068
#define FLT32X_MIN_10_EXP	FLT32X_MIN_10_EXP359,12093
#undef FLT32X_MAX_EXPFLT32X_MAX_EXP360,12141
#define FLT32X_MAX_EXP	FLT32X_MAX_EXP361,12163
#undef FLT32X_MAX_10_EXPFLT32X_MAX_10_EXP362,12206
#define FLT32X_MAX_10_EXP	FLT32X_MAX_10_EXP363,12231
#undef FLT32X_MAXFLT32X_MAX364,12279
#define FLT32X_MAX	FLT32X_MAX365,12297
#undef FLT32X_EPSILONFLT32X_EPSILON366,12332
#define FLT32X_EPSILON	FLT32X_EPSILON367,12354
#undef FLT32X_MINFLT32X_MIN368,12397
#define FLT32X_MIN	FLT32X_MIN369,12415
#undef FLT32X_DECIMAL_DIGFLT32X_DECIMAL_DIG370,12450
#define FLT32X_DECIMAL_DIG	FLT32X_DECIMAL_DIG371,12476
#undef FLT32X_TRUE_MINFLT32X_TRUE_MIN372,12526
#define FLT32X_TRUE_MIN	FLT32X_TRUE_MIN373,12549
#undef FLT64X_MANT_DIGFLT64X_MANT_DIG377,12659
#define FLT64X_MANT_DIG	FLT64X_MANT_DIG378,12682
#undef FLT64X_DIGFLT64X_DIG379,12727
#define FLT64X_DIG	FLT64X_DIG380,12745
#undef FLT64X_MIN_EXPFLT64X_MIN_EXP381,12780
#define FLT64X_MIN_EXP	FLT64X_MIN_EXP382,12802
#undef FLT64X_MIN_10_EXPFLT64X_MIN_10_EXP383,12845
#define FLT64X_MIN_10_EXP	FLT64X_MIN_10_EXP384,12870
#undef FLT64X_MAX_EXPFLT64X_MAX_EXP385,12918
#define FLT64X_MAX_EXP	FLT64X_MAX_EXP386,12940
#undef FLT64X_MAX_10_EXPFLT64X_MAX_10_EXP387,12983
#define FLT64X_MAX_10_EXP	FLT64X_MAX_10_EXP388,13008
#undef FLT64X_MAXFLT64X_MAX389,13056
#define FLT64X_MAX	FLT64X_MAX390,13074
#undef FLT64X_EPSILONFLT64X_EPSILON391,13109
#define FLT64X_EPSILON	FLT64X_EPSILON392,13131
#undef FLT64X_MINFLT64X_MIN393,13174
#define FLT64X_MIN	FLT64X_MIN394,13192
#undef FLT64X_DECIMAL_DIGFLT64X_DECIMAL_DIG395,13227
#define FLT64X_DECIMAL_DIG	FLT64X_DECIMAL_DIG396,13253
#undef FLT64X_TRUE_MINFLT64X_TRUE_MIN397,13303
#define FLT64X_TRUE_MIN	FLT64X_TRUE_MIN398,13326
#undef FLT128X_MANT_DIGFLT128X_MANT_DIG402,13437
#define FLT128X_MANT_DIG	FLT128X_MANT_DIG403,13461
#undef FLT128X_DIGFLT128X_DIG404,13507
#define FLT128X_DIG	FLT128X_DIG405,13526
#undef FLT128X_MIN_EXPFLT128X_MIN_EXP406,13563
#define FLT128X_MIN_EXP	FLT128X_MIN_EXP407,13586
#undef FLT128X_MIN_10_EXPFLT128X_MIN_10_EXP408,13631
#define FLT128X_MIN_10_EXP	FLT128X_MIN_10_EXP409,13657
#undef FLT128X_MAX_EXPFLT128X_MAX_EXP410,13707
#define FLT128X_MAX_EXP	FLT128X_MAX_EXP411,13730
#undef FLT128X_MAX_10_EXPFLT128X_MAX_10_EXP412,13775
#define FLT128X_MAX_10_EXP	FLT128X_MAX_10_EXP413,13801
#undef FLT128X_MAXFLT128X_MAX414,13851
#define FLT128X_MAX	FLT128X_MAX415,13870
#undef FLT128X_EPSILONFLT128X_EPSILON416,13907
#define FLT128X_EPSILON	FLT128X_EPSILON417,13930
#undef FLT128X_MINFLT128X_MIN418,13975
#define FLT128X_MIN	FLT128X_MIN419,13994
#undef FLT128X_DECIMAL_DIGFLT128X_DECIMAL_DIG420,14031
#define FLT128X_DECIMAL_DIG	FLT128X_DECIMAL_DIG421,14058
#undef FLT128X_TRUE_MINFLT128X_TRUE_MIN422,14110
#define FLT128X_TRUE_MIN	FLT128X_TRUE_MIN423,14134
#undef DEC32_MANT_DIGDEC32_MANT_DIG433,14501
#undef DEC64_MANT_DIGDEC64_MANT_DIG434,14523
#undef DEC128_MANT_DIGDEC128_MANT_DIG435,14545
#define DEC32_MANT_DIG	DEC32_MANT_DIG436,14568
#define DEC64_MANT_DIG	DEC64_MANT_DIG437,14610
#define DEC128_MANT_DIG	DEC128_MANT_DIG438,14652
#undef DEC32_MIN_EXPDEC32_MIN_EXP441,14721
#undef DEC64_MIN_EXPDEC64_MIN_EXP442,14742
#undef DEC128_MIN_EXPDEC128_MIN_EXP443,14763
#define DEC32_MIN_EXP	DEC32_MIN_EXP444,14785
#define DEC64_MIN_EXP	DEC64_MIN_EXP445,14825
#define DEC128_MIN_EXP	DEC128_MIN_EXP446,14865
#undef DEC32_MAX_EXPDEC32_MAX_EXP449,14932
#undef DEC64_MAX_EXPDEC64_MAX_EXP450,14953
#undef DEC128_MAX_EXPDEC128_MAX_EXP451,14974
#define DEC32_MAX_EXP	DEC32_MAX_EXP452,14996
#define DEC64_MAX_EXP	DEC64_MAX_EXP453,15036
#define DEC128_MAX_EXP	DEC128_MAX_EXP454,15076
#undef DEC32_MAXDEC32_MAX458,15255
#undef DEC64_MAXDEC64_MAX459,15272
#undef DEC128_MAXDEC128_MAX460,15289
#define DEC32_MAX DEC32_MAX461,15307
#define DEC64_MAX DEC64_MAX462,15341
#define DEC128_MAX DEC128_MAX463,15375
#undef DEC32_EPSILONDEC32_EPSILON467,15536
#undef DEC64_EPSILONDEC64_EPSILON468,15557
#undef DEC128_EPSILONDEC128_EPSILON469,15578
#define DEC32_EPSILON	DEC32_EPSILON470,15600
#define DEC64_EPSILON	DEC64_EPSILON471,15640
#define DEC128_EPSILON	DEC128_EPSILON472,15680
#undef DEC32_MINDEC32_MIN475,15780
#undef DEC64_MINDEC64_MIN476,15797
#undef DEC128_MINDEC128_MIN477,15814
#define DEC32_MIN	DEC32_MIN478,15832
#define DEC64_MIN	DEC64_MIN479,15864
#define DEC128_MIN	DEC128_MIN480,15896
#undef DEC32_SUBNORMAL_MINDEC32_SUBNORMAL_MIN483,15987
#undef DEC64_SUBNORMAL_MINDEC64_SUBNORMAL_MIN484,16014
#undef DEC128_SUBNORMAL_MINDEC128_SUBNORMAL_MIN485,16041
#define DEC32_SUBNORMAL_MIN DEC32_SUBNORMAL_MIN486,16069
#define DEC64_SUBNORMAL_MIN DEC64_SUBNORMAL_MIN487,16127
#define DEC128_SUBNORMAL_MIN DEC128_SUBNORMAL_MIN488,16185
#undef DEC_EVAL_METHODDEC_EVAL_METHOD501,16789
#define DEC_EVAL_METHOD	DEC_EVAL_METHOD502,16812

/usr/include/opencv2/imgproc/imgproc_c.h,4465
imgproc_c.h1,0
#define OPENCV_IMGPROC_IMGPROC_C_HOPENCV_IMGPROC_IMGPROC_C_H44,2192
CVAPI(void)  cvReleaseStructuringElement( IplConvKernel** element );element331,14204
CVAPI(CvSeq*)  cvFindNextContour( CvContourScanner scanner );cvFindNextContour455,19663
CVAPI(CvSeq*)  cvEndFindContours( CvContourScanner* scanner );scanner469,20094
CVAPI(CvSeq*)  cvApproxPoly( const void* src_seq,cvApproxPoly516,22341
CV_INLINE double cvContourPerimeter( const void* contour )cvContourPerimeter530,22892
CVAPI(double)  cvContourArea( const CvArr* contour,cvContourArea545,23309
CVAPI(int)  cvMinEnclosingCircle( const CvArr* points,cvMinEnclosingCircle558,23808
CVAPI(int)  cvCheckContourConvexity( const CvArr* contour );contour578,24612
CVAPI(CvRect)  cvMaxRect( const CvRect* rect1, const CvRect* rect2 );cvMaxRect593,25109
CVAPI(void)  cvReleaseHist( CvHistogram** hist );hist689,30261
CVAPI(void)  cvClearHist( CvHistogram* hist );hist698,30510
CV_INLINE  void  cvCalcHist( IplImage** image, CvHistogram* hist,cvCalcHist771,33293
#define  cvCalcBackProject(cvCalcBackProject784,33757
#define  cvCalcBackProjectPatch(cvCalcBackProjectPatch810,34921
#define CV_RGB(CV_RGB985,43339
#define CV_FILLED CV_FILLED986,43395
#define CV_AA CV_AA988,43417
CV_INLINE  void  cvEllipseBox( CvArr* img, CvBox2D box, CvScalar color,cvEllipseBox1036,45379
#define cvDrawRect cvDrawRect1068,46704
#define cvDrawLine cvDrawLine1069,46735
#define cvDrawCircle cvDrawCircle1070,46761
#define cvDrawEllipse cvDrawEllipse1071,46791
#define cvDrawPolyLine cvDrawPolyLine1072,46823
#define CV_NEXT_LINE_POINT(CV_NEXT_LINE_POINT1093,47602
#define CV_FONT_HERSHEY_SIMPLEX CV_FONT_HERSHEY_SIMPLEX1103,48068
#define CV_FONT_HERSHEY_PLAIN CV_FONT_HERSHEY_PLAIN1104,48110
#define CV_FONT_HERSHEY_DUPLEX CV_FONT_HERSHEY_DUPLEX1105,48152
#define CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_COMPLEX1106,48194
#define CV_FONT_HERSHEY_TRIPLEX CV_FONT_HERSHEY_TRIPLEX1107,48236
#define CV_FONT_HERSHEY_COMPLEX_SMALL CV_FONT_HERSHEY_COMPLEX_SMALL1108,48278
#define CV_FONT_HERSHEY_SCRIPT_SIMPLEX CV_FONT_HERSHEY_SCRIPT_SIMPLEX1109,48320
#define CV_FONT_HERSHEY_SCRIPT_COMPLEX CV_FONT_HERSHEY_SCRIPT_COMPLEX1110,48362
#define CV_FONT_ITALIC CV_FONT_ITALIC1112,48405
#define CV_FONT_VECTOR0 CV_FONT_VECTOR01114,48448
typedef struct CvFontCvFont1118,48523
  const char* nameFont;   //Qt:nameFontnameFont1120,48547
  const char* nameFont;   //Qt:nameFontCvFont::nameFont1120,48547
  CvScalar color;       //Qt:ColorFont -> cvScalar(blue_component, green_component, red_component[, alpha_component])color1121,48587
  CvScalar color;       //Qt:ColorFont -> cvScalar(blue_component, green_component, red_component[, alpha_component])CvFont::color1121,48587
    int         font_face;    //Qt: bool italic         /** =CV_FONT_* */font_face1122,48705
    int         font_face;    //Qt: bool italic         /** =CV_FONT_* */CvFont::font_face1122,48705
    const int*  ascii;      //!< font data and metricsascii1123,48779
    const int*  ascii;      //!< font data and metricsCvFont::ascii1123,48779
    const int*  greek;greek1124,48834
    const int*  greek;CvFont::greek1124,48834
    const int*  cyrillic;cyrillic1125,48857
    const int*  cyrillic;CvFont::cyrillic1125,48857
    float       hscale, vscale;hscale1126,48883
    float       hscale, vscale;CvFont::hscale1126,48883
    float       hscale, vscale;vscale1126,48883
    float       hscale, vscale;CvFont::vscale1126,48883
    float       shear;      //!< slope coefficient: 0 - normal, >0 - italicshear1127,48915
    float       shear;      //!< slope coefficient: 0 - normal, >0 - italicCvFont::shear1127,48915
    int         thickness;    //!< Qt: weight               /** letters thickness */thickness1128,48991
    int         thickness;    //!< Qt: weight               /** letters thickness */CvFont::thickness1128,48991
    float       dx;       //!< horizontal interval between lettersdx1129,49076
    float       dx;       //!< horizontal interval between lettersCvFont::dx1129,49076
    int         line_type;    //!< Qt: PointSizeline_type1130,49143
    int         line_type;    //!< Qt: PointSizeCvFont::line_type1130,49143
CvFont;CvFont1132,49194
CV_INLINE CvFont cvFont( double scale, int thickness CV_DEFAULT(1) )cvFont1157,50454
CVAPI(int) cvEllipse2Poly( CvPoint center, CvSize axes,cvEllipse2Poly1192,51932

/usr/include/opencv2/imgproc/types_c.h,24807
types_c.h1,0
#define OPENCV_IMGPROC_TYPES_C_HOPENCV_IMGPROC_TYPES_C_H44,2190
typedef struct CvConnectedCompCvConnectedComp57,2370
    double area;    /**<area of the connected component  */area59,2403
    double area;    /**<area of the connected component  */CvConnectedComp::area59,2403
    CvScalar value; /**<average color of the connected component */value60,2463
    CvScalar value; /**<average color of the connected component */CvConnectedComp::value60,2463
    CvRect rect;    /**<ROI of the component  */rect61,2531
    CvRect rect;    /**<ROI of the component  */CvConnectedComp::rect61,2531
    CvSeq* contour; /**<optional component boundarycontour62,2580
    CvSeq* contour; /**<optional component boundaryCvConnectedComp::contour62,2580
CvConnectedComp;CvConnectedComp65,2725
enum SmoothMethod_cSmoothMethod_c68,2771
    CV_BLUR_NO_SCALE =0,CV_BLUR_NO_SCALE73,3034
    CV_BLUR  =1,CV_BLUR76,3231
    CV_GAUSSIAN  =2,CV_GAUSSIAN78,3342
    CV_MEDIAN =3,CV_MEDIAN80,3452
    CV_BILATERAL =4CV_BILATERAL84,3716
    CV_GAUSSIAN_5x5 = 7CV_GAUSSIAN_5x590,3792
    CV_SCHARR =-1,CV_SCHARR96,3850
    CV_MAX_SOBEL_KSIZE =7CV_MAX_SOBEL_KSIZE97,3869
    CV_BGR2BGRA    =0,CV_BGR2BGRA103,3944
    CV_RGB2RGBA    =CV_BGR2BGRA,CV_RGB2RGBA104,3967
    CV_BGRA2BGR    =1,CV_BGRA2BGR106,4001
    CV_RGBA2RGB    =CV_BGRA2BGR,CV_RGBA2RGB107,4024
    CV_BGR2RGBA    =2,CV_BGR2RGBA109,4058
    CV_RGB2BGRA    =CV_BGR2RGBA,CV_RGB2BGRA110,4081
    CV_RGBA2BGR    =3,CV_RGBA2BGR112,4115
    CV_BGRA2RGB    =CV_RGBA2BGR,CV_BGRA2RGB113,4138
    CV_BGR2RGB     =4,CV_BGR2RGB115,4172
    CV_RGB2BGR     =CV_BGR2RGB,CV_RGB2BGR116,4195
    CV_BGRA2RGBA   =5,CV_BGRA2RGBA118,4228
    CV_RGBA2BGRA   =CV_BGRA2RGBA,CV_RGBA2BGRA119,4251
    CV_BGR2GRAY    =6,CV_BGR2GRAY121,4286
    CV_RGB2GRAY    =7,CV_RGB2GRAY122,4309
    CV_GRAY2BGR    =8,CV_GRAY2BGR123,4332
    CV_GRAY2RGB    =CV_GRAY2BGR,CV_GRAY2RGB124,4355
    CV_GRAY2BGRA   =9,CV_GRAY2BGRA125,4388
    CV_GRAY2RGBA   =CV_GRAY2BGRA,CV_GRAY2RGBA126,4411
    CV_BGRA2GRAY   =10,CV_BGRA2GRAY127,4445
    CV_RGBA2GRAY   =11,CV_RGBA2GRAY128,4469
    CV_BGR2BGR565  =12,CV_BGR2BGR565130,4494
    CV_RGB2BGR565  =13,CV_RGB2BGR565131,4518
    CV_BGR5652BGR  =14,CV_BGR5652BGR132,4542
    CV_BGR5652RGB  =15,CV_BGR5652RGB133,4566
    CV_BGRA2BGR565 =16,CV_BGRA2BGR565134,4590
    CV_RGBA2BGR565 =17,CV_RGBA2BGR565135,4614
    CV_BGR5652BGRA =18,CV_BGR5652BGRA136,4638
    CV_BGR5652RGBA =19,CV_BGR5652RGBA137,4662
    CV_GRAY2BGR565 =20,CV_GRAY2BGR565139,4687
    CV_BGR5652GRAY =21,CV_BGR5652GRAY140,4711
    CV_BGR2BGR555  =22,CV_BGR2BGR555142,4736
    CV_RGB2BGR555  =23,CV_RGB2BGR555143,4760
    CV_BGR5552BGR  =24,CV_BGR5552BGR144,4784
    CV_BGR5552RGB  =25,CV_BGR5552RGB145,4808
    CV_BGRA2BGR555 =26,CV_BGRA2BGR555146,4832
    CV_RGBA2BGR555 =27,CV_RGBA2BGR555147,4856
    CV_BGR5552BGRA =28,CV_BGR5552BGRA148,4880
    CV_BGR5552RGBA =29,CV_BGR5552RGBA149,4904
    CV_GRAY2BGR555 =30,CV_GRAY2BGR555151,4929
    CV_BGR5552GRAY =31,CV_BGR5552GRAY152,4953
    CV_BGR2XYZ     =32,CV_BGR2XYZ154,4978
    CV_RGB2XYZ     =33,CV_RGB2XYZ155,5002
    CV_XYZ2BGR     =34,CV_XYZ2BGR156,5026
    CV_XYZ2RGB     =35,CV_XYZ2RGB157,5050
    CV_BGR2YCrCb   =36,CV_BGR2YCrCb159,5075
    CV_RGB2YCrCb   =37,CV_RGB2YCrCb160,5099
    CV_YCrCb2BGR   =38,CV_YCrCb2BGR161,5123
    CV_YCrCb2RGB   =39,CV_YCrCb2RGB162,5147
    CV_BGR2HSV     =40,CV_BGR2HSV164,5172
    CV_RGB2HSV     =41,CV_RGB2HSV165,5196
    CV_BGR2Lab     =44,CV_BGR2Lab167,5221
    CV_RGB2Lab     =45,CV_RGB2Lab168,5245
    CV_BayerBG2BGR =46,CV_BayerBG2BGR170,5270
    CV_BayerGB2BGR =47,CV_BayerGB2BGR171,5294
    CV_BayerRG2BGR =48,CV_BayerRG2BGR172,5318
    CV_BayerGR2BGR =49,CV_BayerGR2BGR173,5342
    CV_BayerBG2RGB =CV_BayerRG2BGR,CV_BayerBG2RGB175,5367
    CV_BayerGB2RGB =CV_BayerGR2BGR,CV_BayerGB2RGB176,5403
    CV_BayerRG2RGB =CV_BayerBG2BGR,CV_BayerRG2RGB177,5439
    CV_BayerGR2RGB =CV_BayerGB2BGR,CV_BayerGR2RGB178,5475
    CV_BGR2Luv     =50,CV_BGR2Luv180,5512
    CV_RGB2Luv     =51,CV_RGB2Luv181,5536
    CV_BGR2HLS     =52,CV_BGR2HLS182,5560
    CV_RGB2HLS     =53,CV_RGB2HLS183,5584
    CV_HSV2BGR     =54,CV_HSV2BGR185,5609
    CV_HSV2RGB     =55,CV_HSV2RGB186,5633
    CV_Lab2BGR     =56,CV_Lab2BGR188,5658
    CV_Lab2RGB     =57,CV_Lab2RGB189,5682
    CV_Luv2BGR     =58,CV_Luv2BGR190,5706
    CV_Luv2RGB     =59,CV_Luv2RGB191,5730
    CV_HLS2BGR     =60,CV_HLS2BGR192,5754
    CV_HLS2RGB     =61,CV_HLS2RGB193,5778
    CV_BayerBG2BGR_VNG =62,CV_BayerBG2BGR_VNG195,5803
    CV_BayerGB2BGR_VNG =63,CV_BayerGB2BGR_VNG196,5831
    CV_BayerRG2BGR_VNG =64,CV_BayerRG2BGR_VNG197,5859
    CV_BayerGR2BGR_VNG =65,CV_BayerGR2BGR_VNG198,5887
    CV_BayerBG2RGB_VNG =CV_BayerRG2BGR_VNG,CV_BayerBG2RGB_VNG200,5916
    CV_BayerGB2RGB_VNG =CV_BayerGR2BGR_VNG,CV_BayerGB2RGB_VNG201,5960
    CV_BayerRG2RGB_VNG =CV_BayerBG2BGR_VNG,CV_BayerRG2RGB_VNG202,6004
    CV_BayerGR2RGB_VNG =CV_BayerGB2BGR_VNG,CV_BayerGR2RGB_VNG203,6048
    CV_BGR2HSV_FULL = 66,CV_BGR2HSV_FULL205,6093
    CV_RGB2HSV_FULL = 67,CV_RGB2HSV_FULL206,6119
    CV_BGR2HLS_FULL = 68,CV_BGR2HLS_FULL207,6145
    CV_RGB2HLS_FULL = 69,CV_RGB2HLS_FULL208,6171
    CV_HSV2BGR_FULL = 70,CV_HSV2BGR_FULL210,6198
    CV_HSV2RGB_FULL = 71,CV_HSV2RGB_FULL211,6224
    CV_HLS2BGR_FULL = 72,CV_HLS2BGR_FULL212,6250
    CV_HLS2RGB_FULL = 73,CV_HLS2RGB_FULL213,6276
    CV_LBGR2Lab     = 74,CV_LBGR2Lab215,6303
    CV_LRGB2Lab     = 75,CV_LRGB2Lab216,6329
    CV_LBGR2Luv     = 76,CV_LBGR2Luv217,6355
    CV_LRGB2Luv     = 77,CV_LRGB2Luv218,6381
    CV_Lab2LBGR     = 78,CV_Lab2LBGR220,6408
    CV_Lab2LRGB     = 79,CV_Lab2LRGB221,6434
    CV_Luv2LBGR     = 80,CV_Luv2LBGR222,6460
    CV_Luv2LRGB     = 81,CV_Luv2LRGB223,6486
    CV_BGR2YUV      = 82,CV_BGR2YUV225,6513
    CV_RGB2YUV      = 83,CV_RGB2YUV226,6539
    CV_YUV2BGR      = 84,CV_YUV2BGR227,6565
    CV_YUV2RGB      = 85,CV_YUV2RGB228,6591
    CV_BayerBG2GRAY = 86,CV_BayerBG2GRAY230,6618
    CV_BayerGB2GRAY = 87,CV_BayerGB2GRAY231,6644
    CV_BayerRG2GRAY = 88,CV_BayerRG2GRAY232,6670
    CV_BayerGR2GRAY = 89,CV_BayerGR2GRAY233,6696
    CV_YUV2RGB_NV12 = 90,CV_YUV2RGB_NV12236,6754
    CV_YUV2BGR_NV12 = 91,CV_YUV2BGR_NV12237,6780
    CV_YUV2RGB_NV21 = 92,CV_YUV2RGB_NV21238,6806
    CV_YUV2BGR_NV21 = 93,CV_YUV2BGR_NV21239,6832
    CV_YUV420sp2RGB = CV_YUV2RGB_NV21,CV_YUV420sp2RGB240,6858
    CV_YUV420sp2BGR = CV_YUV2BGR_NV21,CV_YUV420sp2BGR241,6897
    CV_YUV2RGBA_NV12 = 94,CV_YUV2RGBA_NV12243,6937
    CV_YUV2BGRA_NV12 = 95,CV_YUV2BGRA_NV12244,6964
    CV_YUV2RGBA_NV21 = 96,CV_YUV2RGBA_NV21245,6991
    CV_YUV2BGRA_NV21 = 97,CV_YUV2BGRA_NV21246,7018
    CV_YUV420sp2RGBA = CV_YUV2RGBA_NV21,CV_YUV420sp2RGBA247,7045
    CV_YUV420sp2BGRA = CV_YUV2BGRA_NV21,CV_YUV420sp2BGRA248,7086
    CV_YUV2RGB_YV12 = 98,CV_YUV2RGB_YV12250,7128
    CV_YUV2BGR_YV12 = 99,CV_YUV2BGR_YV12251,7154
    CV_YUV2RGB_IYUV = 100,CV_YUV2RGB_IYUV252,7180
    CV_YUV2BGR_IYUV = 101,CV_YUV2BGR_IYUV253,7207
    CV_YUV2RGB_I420 = CV_YUV2RGB_IYUV,CV_YUV2RGB_I420254,7234
    CV_YUV2BGR_I420 = CV_YUV2BGR_IYUV,CV_YUV2BGR_I420255,7273
    CV_YUV420p2RGB = CV_YUV2RGB_YV12,CV_YUV420p2RGB256,7312
    CV_YUV420p2BGR = CV_YUV2BGR_YV12,CV_YUV420p2BGR257,7350
    CV_YUV2RGBA_YV12 = 102,CV_YUV2RGBA_YV12259,7389
    CV_YUV2BGRA_YV12 = 103,CV_YUV2BGRA_YV12260,7417
    CV_YUV2RGBA_IYUV = 104,CV_YUV2RGBA_IYUV261,7445
    CV_YUV2BGRA_IYUV = 105,CV_YUV2BGRA_IYUV262,7473
    CV_YUV2RGBA_I420 = CV_YUV2RGBA_IYUV,CV_YUV2RGBA_I420263,7501
    CV_YUV2BGRA_I420 = CV_YUV2BGRA_IYUV,CV_YUV2BGRA_I420264,7542
    CV_YUV420p2RGBA = CV_YUV2RGBA_YV12,CV_YUV420p2RGBA265,7583
    CV_YUV420p2BGRA = CV_YUV2BGRA_YV12,CV_YUV420p2BGRA266,7623
    CV_YUV2GRAY_420 = 106,CV_YUV2GRAY_420268,7664
    CV_YUV2GRAY_NV21 = CV_YUV2GRAY_420,CV_YUV2GRAY_NV21269,7691
    CV_YUV2GRAY_NV12 = CV_YUV2GRAY_420,CV_YUV2GRAY_NV12270,7731
    CV_YUV2GRAY_YV12 = CV_YUV2GRAY_420,CV_YUV2GRAY_YV12271,7771
    CV_YUV2GRAY_IYUV = CV_YUV2GRAY_420,CV_YUV2GRAY_IYUV272,7811
    CV_YUV2GRAY_I420 = CV_YUV2GRAY_420,CV_YUV2GRAY_I420273,7851
    CV_YUV420sp2GRAY = CV_YUV2GRAY_420,CV_YUV420sp2GRAY274,7891
    CV_YUV420p2GRAY = CV_YUV2GRAY_420,CV_YUV420p2GRAY275,7931
    CV_YUV2RGB_UYVY = 107,CV_YUV2RGB_UYVY278,8002
    CV_YUV2BGR_UYVY = 108,CV_YUV2BGR_UYVY279,8029
    CV_YUV2RGB_Y422 = CV_YUV2RGB_UYVY,CV_YUV2RGB_Y422282,8114
    CV_YUV2BGR_Y422 = CV_YUV2BGR_UYVY,CV_YUV2BGR_Y422283,8153
    CV_YUV2RGB_UYNV = CV_YUV2RGB_UYVY,CV_YUV2RGB_UYNV284,8192
    CV_YUV2BGR_UYNV = CV_YUV2BGR_UYVY,CV_YUV2BGR_UYNV285,8231
    CV_YUV2RGBA_UYVY = 111,CV_YUV2RGBA_UYVY287,8271
    CV_YUV2BGRA_UYVY = 112,CV_YUV2BGRA_UYVY288,8299
    CV_YUV2RGBA_Y422 = CV_YUV2RGBA_UYVY,CV_YUV2RGBA_Y422291,8387
    CV_YUV2BGRA_Y422 = CV_YUV2BGRA_UYVY,CV_YUV2BGRA_Y422292,8428
    CV_YUV2RGBA_UYNV = CV_YUV2RGBA_UYVY,CV_YUV2RGBA_UYNV293,8469
    CV_YUV2BGRA_UYNV = CV_YUV2BGRA_UYVY,CV_YUV2BGRA_UYNV294,8510
    CV_YUV2RGB_YUY2 = 115,CV_YUV2RGB_YUY2296,8552
    CV_YUV2BGR_YUY2 = 116,CV_YUV2BGR_YUY2297,8579
    CV_YUV2RGB_YVYU = 117,CV_YUV2RGB_YVYU298,8606
    CV_YUV2BGR_YVYU = 118,CV_YUV2BGR_YVYU299,8633
    CV_YUV2RGB_YUYV = CV_YUV2RGB_YUY2,CV_YUV2RGB_YUYV300,8660
    CV_YUV2BGR_YUYV = CV_YUV2BGR_YUY2,CV_YUV2BGR_YUYV301,8699
    CV_YUV2RGB_YUNV = CV_YUV2RGB_YUY2,CV_YUV2RGB_YUNV302,8738
    CV_YUV2BGR_YUNV = CV_YUV2BGR_YUY2,CV_YUV2BGR_YUNV303,8777
    CV_YUV2RGBA_YUY2 = 119,CV_YUV2RGBA_YUY2305,8817
    CV_YUV2BGRA_YUY2 = 120,CV_YUV2BGRA_YUY2306,8845
    CV_YUV2RGBA_YVYU = 121,CV_YUV2RGBA_YVYU307,8873
    CV_YUV2BGRA_YVYU = 122,CV_YUV2BGRA_YVYU308,8901
    CV_YUV2RGBA_YUYV = CV_YUV2RGBA_YUY2,CV_YUV2RGBA_YUYV309,8929
    CV_YUV2BGRA_YUYV = CV_YUV2BGRA_YUY2,CV_YUV2BGRA_YUYV310,8970
    CV_YUV2RGBA_YUNV = CV_YUV2RGBA_YUY2,CV_YUV2RGBA_YUNV311,9011
    CV_YUV2BGRA_YUNV = CV_YUV2BGRA_YUY2,CV_YUV2BGRA_YUNV312,9052
    CV_YUV2GRAY_UYVY = 123,CV_YUV2GRAY_UYVY314,9094
    CV_YUV2GRAY_YUY2 = 124,CV_YUV2GRAY_YUY2315,9122
    CV_YUV2GRAY_Y422 = CV_YUV2GRAY_UYVY,CV_YUV2GRAY_Y422317,9193
    CV_YUV2GRAY_UYNV = CV_YUV2GRAY_UYVY,CV_YUV2GRAY_UYNV318,9234
    CV_YUV2GRAY_YVYU = CV_YUV2GRAY_YUY2,CV_YUV2GRAY_YVYU319,9275
    CV_YUV2GRAY_YUYV = CV_YUV2GRAY_YUY2,CV_YUV2GRAY_YUYV320,9316
    CV_YUV2GRAY_YUNV = CV_YUV2GRAY_YUY2,CV_YUV2GRAY_YUNV321,9357
    CV_RGBA2mRGBA = 125,CV_RGBA2mRGBA324,9430
    CV_mRGBA2RGBA = 126,CV_mRGBA2RGBA325,9455
    CV_RGB2YUV_I420 = 127,CV_RGB2YUV_I420327,9481
    CV_BGR2YUV_I420 = 128,CV_BGR2YUV_I420328,9508
    CV_RGB2YUV_IYUV = CV_RGB2YUV_I420,CV_RGB2YUV_IYUV329,9535
    CV_BGR2YUV_IYUV = CV_BGR2YUV_I420,CV_BGR2YUV_IYUV330,9574
    CV_RGBA2YUV_I420 = 129,CV_RGBA2YUV_I420332,9614
    CV_BGRA2YUV_I420 = 130,CV_BGRA2YUV_I420333,9642
    CV_RGBA2YUV_IYUV = CV_RGBA2YUV_I420,CV_RGBA2YUV_IYUV334,9670
    CV_BGRA2YUV_IYUV = CV_BGRA2YUV_I420,CV_BGRA2YUV_IYUV335,9711
    CV_RGB2YUV_YV12  = 131,CV_RGB2YUV_YV12336,9752
    CV_BGR2YUV_YV12  = 132,CV_BGR2YUV_YV12337,9780
    CV_RGBA2YUV_YV12 = 133,CV_RGBA2YUV_YV12338,9808
    CV_BGRA2YUV_YV12 = 134,CV_BGRA2YUV_YV12339,9836
    CV_BayerBG2BGR_EA = 135,CV_BayerBG2BGR_EA342,9895
    CV_BayerGB2BGR_EA = 136,CV_BayerGB2BGR_EA343,9924
    CV_BayerRG2BGR_EA = 137,CV_BayerRG2BGR_EA344,9953
    CV_BayerGR2BGR_EA = 138,CV_BayerGR2BGR_EA345,9982
    CV_BayerBG2RGB_EA = CV_BayerRG2BGR_EA,CV_BayerBG2RGB_EA347,10012
    CV_BayerGB2RGB_EA = CV_BayerGR2BGR_EA,CV_BayerGB2RGB_EA348,10055
    CV_BayerRG2RGB_EA = CV_BayerBG2BGR_EA,CV_BayerRG2RGB_EA349,10098
    CV_BayerGR2RGB_EA = CV_BayerGB2BGR_EA,CV_BayerGR2RGB_EA350,10141
    CV_BayerBG2BGRA =139,CV_BayerBG2BGRA352,10185
    CV_BayerGB2BGRA =140,CV_BayerGB2BGRA353,10211
    CV_BayerRG2BGRA =141,CV_BayerRG2BGRA354,10237
    CV_BayerGR2BGRA =142,CV_BayerGR2BGRA355,10263
    CV_BayerBG2RGBA =CV_BayerRG2BGRA,CV_BayerBG2RGBA357,10290
    CV_BayerGB2RGBA =CV_BayerGR2BGRA,CV_BayerGB2RGBA358,10328
    CV_BayerRG2RGBA =CV_BayerBG2BGRA,CV_BayerRG2RGBA359,10366
    CV_BayerGR2RGBA =CV_BayerGB2BGRA,CV_BayerGR2RGBA360,10404
    CV_COLORCVT_MAX  = 143CV_COLORCVT_MAX362,10443
    CV_INTER_NN        =0,CV_INTER_NN369,10521
    CV_INTER_LINEAR    =1,CV_INTER_LINEAR370,10548
    CV_INTER_CUBIC     =2,CV_INTER_CUBIC371,10575
    CV_INTER_AREA      =3,CV_INTER_AREA372,10602
    CV_INTER_LANCZOS4  =4CV_INTER_LANCZOS4373,10629
    CV_WARP_FILL_OUTLIERS =8,CV_WARP_FILL_OUTLIERS379,10707
    CV_WARP_INVERSE_MAP  =16CV_WARP_INVERSE_MAP380,10737
enum MorphShapes_cMorphShapes_c386,10886
    CV_SHAPE_RECT      =0,CV_SHAPE_RECT388,10907
    CV_SHAPE_CROSS     =1,CV_SHAPE_CROSS389,10934
    CV_SHAPE_ELLIPSE   =2,CV_SHAPE_ELLIPSE390,10961
    CV_SHAPE_CUSTOM    =100 //!< custom structuring elementCV_SHAPE_CUSTOM391,10988
    CV_MOP_ERODE        =0,CV_MOP_ERODE397,11091
    CV_MOP_DILATE       =1,CV_MOP_DILATE398,11119
    CV_MOP_OPEN         =2,CV_MOP_OPEN399,11147
    CV_MOP_CLOSE        =3,CV_MOP_CLOSE400,11175
    CV_MOP_GRADIENT     =4,CV_MOP_GRADIENT401,11203
    CV_MOP_TOPHAT       =5,CV_MOP_TOPHAT402,11231
    CV_MOP_BLACKHAT     =6CV_MOP_BLACKHAT403,11259
typedef struct CvMomentsCvMoments407,11325
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */m00409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */CvMoments::m00409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */m10409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */CvMoments::m10409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */m01409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */CvMoments::m01409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */m20409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */CvMoments::m20409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */m11409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */CvMoments::m11409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */m02409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */CvMoments::m02409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */m30409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */CvMoments::m30409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */m21409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */CvMoments::m21409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */m12409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */CvMoments::m12409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */m03409,11352
    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; /**< spatial moments */CvMoments::m03409,11352
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */mu20410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */CvMoments::mu20410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */mu11410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */CvMoments::mu11410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */mu02410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */CvMoments::mu02410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */mu30410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */CvMoments::mu30410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */mu21410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */CvMoments::mu21410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */mu12410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */CvMoments::mu12410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */mu03410,11438
    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; /**< central moments */CvMoments::mu03410,11438
    double  inv_sqrt_m00; /**< m00 != 0 ? 1/sqrt(m00) : 0 */inv_sqrt_m00411,11516
    double  inv_sqrt_m00; /**< m00 != 0 ? 1/sqrt(m00) : 0 */CvMoments::inv_sqrt_m00411,11516
    CvMoments(){}CvMoments414,11597
    CvMoments(){}CvMoments::CvMoments414,11597
    CvMoments(const cv::Moments& m)CvMoments415,11615
    CvMoments(const cv::Moments& m)CvMoments::CvMoments415,11615
    operator cv::Moments() constMoments425,12045
    operator cv::Moments() constCvMoments::cv::Moments425,12045
CvMoments;CvMoments431,12177
typedef struct CvHuMomentsCvHuMoments434,12210
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */hu1436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */CvHuMoments::hu1436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */hu2436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */CvHuMoments::hu2436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */hu3436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */CvHuMoments::hu3436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */hu4436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */CvHuMoments::hu4436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */hu5436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */CvHuMoments::hu5436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */hu6436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */CvHuMoments::hu6436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */hu7436,12239
    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; /**< Hu invariants */CvHuMoments::hu7436,12239
CvHuMoments;CvHuMoments438,12309
    CV_TM_SQDIFF        =0,CV_TM_SQDIFF443,12363
    CV_TM_SQDIFF_NORMED =1,CV_TM_SQDIFF_NORMED444,12391
    CV_TM_CCORR         =2,CV_TM_CCORR445,12419
    CV_TM_CCORR_NORMED  =3,CV_TM_CCORR_NORMED446,12447
    CV_TM_CCOEFF        =4,CV_TM_CCOEFF447,12475
    CV_TM_CCOEFF_NORMED =5CV_TM_CCOEFF_NORMED448,12503
typedef float (CV_CDECL * CvDistanceFunction)( const float* a, const float* b, void* user_param );CvDistanceFunction451,12534
    CV_RETR_EXTERNAL=0,CV_RETR_EXTERNAL456,12672
    CV_RETR_LIST=1,CV_RETR_LIST457,12696
    CV_RETR_CCOMP=2,CV_RETR_CCOMP458,12716
    CV_RETR_TREE=3,CV_RETR_TREE459,12737
    CV_RETR_FLOODFILL=4CV_RETR_FLOODFILL460,12757
    CV_CHAIN_CODE=0,CV_CHAIN_CODE466,12829
    CV_CHAIN_APPROX_NONE=1,CV_CHAIN_APPROX_NONE467,12850
    CV_CHAIN_APPROX_SIMPLE=2,CV_CHAIN_APPROX_SIMPLE468,12878
    CV_CHAIN_APPROX_TC89_L1=3,CV_CHAIN_APPROX_TC89_L1469,12908
    CV_CHAIN_APPROX_TC89_KCOS=4,CV_CHAIN_APPROX_TC89_KCOS470,12939
    CV_LINK_RUNS=5CV_LINK_RUNS471,12972
typedef struct _CvContourScanner* CvContourScanner;CvContourScanner478,13154
typedef struct CvChainPtReaderCvChainPtReader481,13241
    char      code;code484,13301
    char      code;CvChainPtReader::code484,13301
    CvPoint   pt;pt485,13321
    CvPoint   pt;CvChainPtReader::pt485,13321
    schar     deltas[8][2];deltas486,13339
    schar     deltas[8][2];CvChainPtReader::deltas486,13339
CvChainPtReader;CvChainPtReader488,13369
#define  CV_INIT_3X3_DELTAS(CV_INIT_3X3_DELTAS491,13469
    CV_POLY_APPROX_DP = 0CV_POLY_APPROX_DP501,13825
    CV_CONTOURS_MATCH_I1  =1, //!< \f[I_1(A,B) =  \sum _{i=1...7}  \left |  \frac{1}{m^A_i} -  \frac{1}{m^B_i} \right |\f]CV_CONTOURS_MATCH_I1507,13892
    CV_CONTOURS_MATCH_I2  =2, //!< \f[I_2(A,B) =  \sum _{i=1...7}  \left | m^A_i - m^B_i  \right |\f]CV_CONTOURS_MATCH_I2508,14015
    CV_CONTOURS_MATCH_I3  =3  //!< \f[I_3(A,B) =  \max _{i=1...7}  \frac{ \left| m^A_i - m^B_i \right| }{ \left| m^A_i \right| }\f]CV_CONTOURS_MATCH_I3509,14117
    CV_CLOCKWISE         =1,CV_CLOCKWISE515,14285
    CV_COUNTER_CLOCKWISE =2CV_COUNTER_CLOCKWISE516,14314
typedef struct CvConvexityDefectCvConvexityDefect521,14371
    CvPoint* start; /**< point of the contour where the defect begins */start523,14406
    CvPoint* start; /**< point of the contour where the defect begins */CvConvexityDefect::start523,14406
    CvPoint* end; /**< point of the contour where the defect ends */end524,14479
    CvPoint* end; /**< point of the contour where the defect ends */CvConvexityDefect::end524,14479
    CvPoint* depth_point; /**< the farthest from the convex hull point within the defect */depth_point525,14548
    CvPoint* depth_point; /**< the farthest from the convex hull point within the defect */CvConvexityDefect::depth_point525,14548
    float depth; /**< distance between the farthest point and the convex hull */depth526,14640
    float depth; /**< distance between the farthest point and the convex hull */CvConvexityDefect::depth526,14640
} CvConvexityDefect;CvConvexityDefect527,14721
    CV_COMP_CORREL        =0,CV_COMP_CORREL533,14787
    CV_COMP_CHISQR        =1,CV_COMP_CHISQR534,14817
    CV_COMP_INTERSECT     =2,CV_COMP_INTERSECT535,14847
    CV_COMP_BHATTACHARYYA =3,CV_COMP_BHATTACHARYYA536,14877
    CV_COMP_HELLINGER     =CV_COMP_BHATTACHARYYA,CV_COMP_HELLINGER537,14907
    CV_COMP_CHISQR_ALT    =4,CV_COMP_CHISQR_ALT538,14957
    CV_COMP_KL_DIV        =5CV_COMP_KL_DIV539,14987
    CV_DIST_MASK_3   =3,CV_DIST_MASK_3545,15067
    CV_DIST_MASK_5   =5,CV_DIST_MASK_5546,15092
    CV_DIST_MASK_PRECISE =0CV_DIST_MASK_PRECISE547,15117
  CV_DIST_LABEL_CCOMP = 0,CV_DIST_LABEL_CCOMP553,15225
  CV_DIST_LABEL_PIXEL = 1CV_DIST_LABEL_PIXEL554,15252
    CV_DIST_USER    =-1,  /**< User defined distance */CV_DIST_USER560,15351
    CV_DIST_L1      =1,   /**< distance = |x1-x2| + |y1-y2| */CV_DIST_L1561,15407
    CV_DIST_L2      =2,   /**< the simple euclidean distance */CV_DIST_L2562,15470
    CV_DIST_C       =3,   /**< distance = max(|x1-x2|,|y1-y2|) */CV_DIST_C563,15534
    CV_DIST_L12     =4,   /**< L1-L2 metric: distance = 2(sqrt(1+x*x/2) - 1)) */CV_DIST_L12564,15600
    CV_DIST_FAIR    =5,   /**< distance = c^2(|x|/c-log(1+|x|/c)), c = 1.3998 */CV_DIST_FAIR565,15681
    CV_DIST_WELSCH  =6,   /**< distance = c^2/2(1-exp(-(x/c)^2)), c = 2.9846 */CV_DIST_WELSCH566,15762
    CV_DIST_HUBER   =7    /**< distance = |x|<c ? x^2/2 : c(|x|-c/2), c=1.345 */CV_DIST_HUBER567,15842
    CV_THRESH_BINARY      =0,  /**< value = value > threshold ? max_value : 0       */CV_THRESH_BINARY574,15958
    CV_THRESH_BINARY_INV  =1,  /**< value = value > threshold ? 0 : max_value       */CV_THRESH_BINARY_INV575,16045
    CV_THRESH_TRUNC       =2,  /**< value = value > threshold ? threshold : value   */CV_THRESH_TRUNC576,16132
    CV_THRESH_TOZERO      =3,  /**< value = value > threshold ? value : 0           */CV_THRESH_TOZERO577,16219
    CV_THRESH_TOZERO_INV  =4,  /**< value = value > threshold ? 0 : value           */CV_THRESH_TOZERO_INV578,16306
    CV_THRESH_MASK        =7,CV_THRESH_MASK579,16393
    CV_THRESH_OTSU        =8, /**< use Otsu algorithm to choose the optimal threshold value;CV_THRESH_OTSU580,16423
    CV_THRESH_TRIANGLE    =16  /**< use Triangle algorithm to choose the optimal threshold value;CV_THRESH_TRIANGLE582,16610
    CV_ADAPTIVE_THRESH_MEAN_C  =0,CV_ADAPTIVE_THRESH_MEAN_C590,16909
    CV_ADAPTIVE_THRESH_GAUSSIAN_C  =1CV_ADAPTIVE_THRESH_GAUSSIAN_C591,16944
    CV_FLOODFILL_FIXED_RANGE =(1 << 16),CV_FLOODFILL_FIXED_RANGE597,17016
    CV_FLOODFILL_MASK_ONLY   =(1 << 17)CV_FLOODFILL_MASK_ONLY598,17057
    CV_CANNY_L2_GRADIENT  =(1 << 31)CV_CANNY_L2_GRADIENT605,17142
    CV_HOUGH_STANDARD =0,CV_HOUGH_STANDARD611,17227
    CV_HOUGH_PROBABILISTIC =1,CV_HOUGH_PROBABILISTIC612,17253
    CV_HOUGH_MULTI_SCALE =2,CV_HOUGH_MULTI_SCALE613,17284
    CV_HOUGH_GRADIENT =3CV_HOUGH_GRADIENT614,17313

/usr/include/opencv2/core/version.hpp,633
version.hpp1,0
#define OPENCV_VERSION_HPPOPENCV_VERSION_HPP6,222
#define CV_VERSION_MAJOR CV_VERSION_MAJOR8,250
#define CV_VERSION_MINOR CV_VERSION_MINOR9,280
#define CV_VERSION_REVISION CV_VERSION_REVISION10,310
#define CV_VERSION_STATUS CV_VERSION_STATUS11,340
#define CVAUX_STR_EXP(CVAUX_STR_EXP13,372
#define CVAUX_STR(CVAUX_STR14,405
#define CVAUX_STRW_EXP(CVAUX_STRW_EXP16,453
#define CVAUX_STRW(CVAUX_STRW17,492
#define CV_VERSION CV_VERSION19,542
#define CV_MAJOR_VERSION CV_MAJOR_VERSION22,718
#define CV_MINOR_VERSION CV_MINOR_VERSION23,763
#define CV_SUBMINOR_VERSION CV_SUBMINOR_VERSION24,808

/usr/include/opencv2/videoio/videoio_c.h,41795
videoio_c.h1,0
#define OPENCV_VIDEOIO_HOPENCV_VIDEOIO_H43,2112
typedef struct CvCapture CvCapture;CvCapture64,2614
    CV_CAP_ANY      =0,     // autodetectCV_CAP_ANY76,2967
    CV_CAP_MIL      =100,   // MIL proprietary driversCV_CAP_MIL78,3010
    CV_CAP_VFW      =200,   // platform nativeCV_CAP_VFW80,3066
    CV_CAP_V4L      =200,CV_CAP_V4L81,3113
    CV_CAP_V4L2     =200,CV_CAP_V4L282,3139
    CV_CAP_FIREWARE =300,   // IEEE 1394 driversCV_CAP_FIREWARE84,3166
    CV_CAP_FIREWIRE =300,CV_CAP_FIREWIRE85,3215
    CV_CAP_IEEE1394 =300,CV_CAP_IEEE139486,3241
    CV_CAP_DC1394   =300,CV_CAP_DC139487,3267
    CV_CAP_CMU1394  =300,CV_CAP_CMU139488,3293
    CV_CAP_STEREO   =400,   // TYZX proprietary driversCV_CAP_STEREO90,3320
    CV_CAP_TYZX     =400,CV_CAP_TYZX91,3376
    CV_TYZX_LEFT    =400,CV_TYZX_LEFT92,3402
    CV_TYZX_RIGHT   =401,CV_TYZX_RIGHT93,3428
    CV_TYZX_COLOR   =402,CV_TYZX_COLOR94,3454
    CV_TYZX_Z       =403,CV_TYZX_Z95,3480
    CV_CAP_QT       =500,   // QuickTimeCV_CAP_QT97,3507
    CV_CAP_UNICAP   =600,   // Unicap driversCV_CAP_UNICAP99,3549
    CV_CAP_DSHOW    =700,   // DirectShow (via videoInput)CV_CAP_DSHOW101,3596
    CV_CAP_MSMF     =1400,  // Microsoft Media Foundation (via videoInput)CV_CAP_MSMF102,3655
    CV_CAP_PVAPI    =800,   // PvAPI, Prosilica GigE SDKCV_CAP_PVAPI104,3731
    CV_CAP_OPENNI   =900,   // OpenNI (for Kinect)CV_CAP_OPENNI106,3789
    CV_CAP_OPENNI_ASUS =910,   // OpenNI (for Asus Xtion)CV_CAP_OPENNI_ASUS107,3840
    CV_CAP_ANDROID  =1000,  // Android - not usedCV_CAP_ANDROID109,3899
    CV_CAP_ANDROID_BACK =CV_CAP_ANDROID+99, // Android back camera - not usedCV_CAP_ANDROID_BACK110,3949
    CV_CAP_ANDROID_FRONT =CV_CAP_ANDROID+98, // Android front camera - not usedCV_CAP_ANDROID_FRONT111,4027
    CV_CAP_XIAPI    =1100,   // XIMEA Camera APICV_CAP_XIAPI113,4108
    CV_CAP_AVFOUNDATION = 1200,  // AVFoundation framework for iOS (OS X Lion will have the same API)CV_CAP_AVFOUNDATION115,4158
    CV_CAP_GIGANETIX = 1300,  // Smartek Giganetix GigEVisionSDKCV_CAP_GIGANETIX117,4261
    CV_CAP_INTELPERC = 1500, // Intel Perceptual ComputingCV_CAP_INTELPERC119,4327
    CV_CAP_OPENNI2 = 1600,   // OpenNI2 (for Kinect)CV_CAP_OPENNI2121,4387
    CV_CAP_GPHOTO2 = 1700,CV_CAP_GPHOTO2122,4440
    CV_CAP_GSTREAMER = 1800, // GStreamerCV_CAP_GSTREAMER123,4467
    CV_CAP_FFMPEG = 1900,    // FFMPEGCV_CAP_FFMPEG124,4509
    CV_CAP_IMAGES = 2000,    // OpenCV Image Sequence (e.g. img_%02d.jpg)CV_CAP_IMAGES125,4548
    CV_CAP_ARAVIS = 2100     // Aravis GigE SDKCV_CAP_ARAVIS127,4623
CVAPI(int) cvGrabFrame( CvCapture* capture );capture138,4927
CVAPI(IplImage*) cvQueryFrame( CvCapture* capture );capture152,5401
CVAPI(void) cvReleaseCapture( CvCapture** capture );capture156,5511
    CV_CAP_PROP_DC1394_OFF         = -4,  //turn the feature off (not controlled manually nor automatically)CV_CAP_PROP_DC1394_OFF162,5764
    CV_CAP_PROP_DC1394_MODE_MANUAL = -3, //set automatically when a value of the feature is set by the userCV_CAP_PROP_DC1394_MODE_MANUAL163,5873
    CV_CAP_PROP_DC1394_MODE_AUTO = -2,CV_CAP_PROP_DC1394_MODE_AUTO164,5981
    CV_CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO = -1,CV_CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO165,6020
    CV_CAP_PROP_POS_MSEC       =0,CV_CAP_PROP_POS_MSEC166,6068
    CV_CAP_PROP_POS_FRAMES     =1,CV_CAP_PROP_POS_FRAMES167,6103
    CV_CAP_PROP_POS_AVI_RATIO  =2,CV_CAP_PROP_POS_AVI_RATIO168,6138
    CV_CAP_PROP_FRAME_WIDTH    =3,CV_CAP_PROP_FRAME_WIDTH169,6173
    CV_CAP_PROP_FRAME_HEIGHT   =4,CV_CAP_PROP_FRAME_HEIGHT170,6208
    CV_CAP_PROP_FPS            =5,CV_CAP_PROP_FPS171,6243
    CV_CAP_PROP_FOURCC         =6,CV_CAP_PROP_FOURCC172,6278
    CV_CAP_PROP_FRAME_COUNT    =7,CV_CAP_PROP_FRAME_COUNT173,6313
    CV_CAP_PROP_FORMAT         =8,CV_CAP_PROP_FORMAT174,6348
    CV_CAP_PROP_MODE           =9,CV_CAP_PROP_MODE175,6383
    CV_CAP_PROP_BRIGHTNESS    =10,CV_CAP_PROP_BRIGHTNESS176,6418
    CV_CAP_PROP_CONTRAST      =11,CV_CAP_PROP_CONTRAST177,6453
    CV_CAP_PROP_SATURATION    =12,CV_CAP_PROP_SATURATION178,6488
    CV_CAP_PROP_HUE           =13,CV_CAP_PROP_HUE179,6523
    CV_CAP_PROP_GAIN          =14,CV_CAP_PROP_GAIN180,6558
    CV_CAP_PROP_EXPOSURE      =15,CV_CAP_PROP_EXPOSURE181,6593
    CV_CAP_PROP_CONVERT_RGB   =16,CV_CAP_PROP_CONVERT_RGB182,6628
    CV_CAP_PROP_WHITE_BALANCE_BLUE_U =17,CV_CAP_PROP_WHITE_BALANCE_BLUE_U183,6663
    CV_CAP_PROP_RECTIFICATION =18,CV_CAP_PROP_RECTIFICATION184,6705
    CV_CAP_PROP_MONOCHROME    =19,CV_CAP_PROP_MONOCHROME185,6740
    CV_CAP_PROP_SHARPNESS     =20,CV_CAP_PROP_SHARPNESS186,6775
    CV_CAP_PROP_AUTO_EXPOSURE =21, // exposure control done by camera,CV_CAP_PROP_AUTO_EXPOSURE187,6810
    CV_CAP_PROP_GAMMA         =22,CV_CAP_PROP_GAMMA190,7008
    CV_CAP_PROP_TEMPERATURE   =23,CV_CAP_PROP_TEMPERATURE191,7043
    CV_CAP_PROP_TRIGGER       =24,CV_CAP_PROP_TRIGGER192,7078
    CV_CAP_PROP_TRIGGER_DELAY =25,CV_CAP_PROP_TRIGGER_DELAY193,7113
    CV_CAP_PROP_WHITE_BALANCE_RED_V =26,CV_CAP_PROP_WHITE_BALANCE_RED_V194,7148
    CV_CAP_PROP_ZOOM          =27,CV_CAP_PROP_ZOOM195,7189
    CV_CAP_PROP_FOCUS         =28,CV_CAP_PROP_FOCUS196,7224
    CV_CAP_PROP_GUID          =29,CV_CAP_PROP_GUID197,7259
    CV_CAP_PROP_ISO_SPEED     =30,CV_CAP_PROP_ISO_SPEED198,7294
    CV_CAP_PROP_MAX_DC1394    =31,CV_CAP_PROP_MAX_DC1394199,7329
    CV_CAP_PROP_BACKLIGHT     =32,CV_CAP_PROP_BACKLIGHT200,7364
    CV_CAP_PROP_PAN           =33,CV_CAP_PROP_PAN201,7399
    CV_CAP_PROP_TILT          =34,CV_CAP_PROP_TILT202,7434
    CV_CAP_PROP_ROLL          =35,CV_CAP_PROP_ROLL203,7469
    CV_CAP_PROP_IRIS          =36,CV_CAP_PROP_IRIS204,7504
    CV_CAP_PROP_SETTINGS      =37,CV_CAP_PROP_SETTINGS205,7539
    CV_CAP_PROP_BUFFERSIZE    =38,CV_CAP_PROP_BUFFERSIZE206,7574
    CV_CAP_PROP_AUTOFOCUS     =39,CV_CAP_PROP_AUTOFOCUS207,7609
    CV_CAP_PROP_SAR_NUM       =40,CV_CAP_PROP_SAR_NUM208,7644
    CV_CAP_PROP_SAR_DEN       =41,CV_CAP_PROP_SAR_DEN209,7679
    CV_CAP_PROP_AUTOGRAB      =1024, // property for videoio class CvCapture_Android onlyCV_CAP_PROP_AUTOGRAB211,7715
    CV_CAP_PROP_SUPPORTED_PREVIEW_SIZES_STRING=1025, // readonly, tricky property, returns cpnst char* indeedCV_CAP_PROP_SUPPORTED_PREVIEW_SIZES_STRING212,7805
    CV_CAP_PROP_PREVIEW_FORMAT=1026, // readonly, tricky property, returns cpnst char* indeedCV_CAP_PROP_PREVIEW_FORMAT213,7915
    CV_CAP_OPENNI_DEPTH_GENERATOR = 1 << 31,CV_CAP_OPENNI_DEPTH_GENERATOR216,8039
    CV_CAP_OPENNI_IMAGE_GENERATOR = 1 << 30,CV_CAP_OPENNI_IMAGE_GENERATOR217,8084
    CV_CAP_OPENNI_IR_GENERATOR    = 1 << 29,CV_CAP_OPENNI_IR_GENERATOR218,8129
    CV_CAP_OPENNI_GENERATORS_MASK = CV_CAP_OPENNI_DEPTH_GENERATOR + CV_CAP_OPENNI_IMAGE_GENERATOR + CV_CAP_OPENNI_IR_GENERATOR,CV_CAP_OPENNI_GENERATORS_MASK219,8174
    CV_CAP_PROP_OPENNI_OUTPUT_MODE     = 100,CV_CAP_PROP_OPENNI_OUTPUT_MODE222,8368
    CV_CAP_PROP_OPENNI_FRAME_MAX_DEPTH = 101, // in mmCV_CAP_PROP_OPENNI_FRAME_MAX_DEPTH223,8414
    CV_CAP_PROP_OPENNI_BASELINE        = 102, // in mmCV_CAP_PROP_OPENNI_BASELINE224,8469
    CV_CAP_PROP_OPENNI_FOCAL_LENGTH    = 103, // in pixelsCV_CAP_PROP_OPENNI_FOCAL_LENGTH225,8524
    CV_CAP_PROP_OPENNI_REGISTRATION    = 104, // flagCV_CAP_PROP_OPENNI_REGISTRATION226,8583
    CV_CAP_PROP_OPENNI_REGISTRATION_ON = CV_CAP_PROP_OPENNI_REGISTRATION, // flag that synchronizes the remapping depth map to image mapCV_CAP_PROP_OPENNI_REGISTRATION_ON227,8637
    CV_CAP_PROP_OPENNI_APPROX_FRAME_SYNC = 105,CV_CAP_PROP_OPENNI_APPROX_FRAME_SYNC230,9057
    CV_CAP_PROP_OPENNI_MAX_BUFFER_SIZE   = 106,CV_CAP_PROP_OPENNI_MAX_BUFFER_SIZE231,9105
    CV_CAP_PROP_OPENNI_CIRCLE_BUFFER     = 107,CV_CAP_PROP_OPENNI_CIRCLE_BUFFER232,9153
    CV_CAP_PROP_OPENNI_MAX_TIME_DURATION = 108,CV_CAP_PROP_OPENNI_MAX_TIME_DURATION233,9201
    CV_CAP_PROP_OPENNI_GENERATOR_PRESENT = 109,CV_CAP_PROP_OPENNI_GENERATOR_PRESENT235,9250
    CV_CAP_PROP_OPENNI2_SYNC = 110,CV_CAP_PROP_OPENNI2_SYNC236,9298
    CV_CAP_PROP_OPENNI2_MIRROR = 111,CV_CAP_PROP_OPENNI2_MIRROR237,9334
    CV_CAP_OPENNI_IMAGE_GENERATOR_PRESENT         = CV_CAP_OPENNI_IMAGE_GENERATOR + CV_CAP_PROP_OPENNI_GENERATOR_PRESENT,CV_CAP_OPENNI_IMAGE_GENERATOR_PRESENT239,9373
    CV_CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE     = CV_CAP_OPENNI_IMAGE_GENERATOR + CV_CAP_PROP_OPENNI_OUTPUT_MODE,CV_CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE240,9495
    CV_CAP_OPENNI_DEPTH_GENERATOR_PRESENT         = CV_CAP_OPENNI_DEPTH_GENERATOR + CV_CAP_PROP_OPENNI_GENERATOR_PRESENT,CV_CAP_OPENNI_DEPTH_GENERATOR_PRESENT241,9611
    CV_CAP_OPENNI_DEPTH_GENERATOR_BASELINE        = CV_CAP_OPENNI_DEPTH_GENERATOR + CV_CAP_PROP_OPENNI_BASELINE,CV_CAP_OPENNI_DEPTH_GENERATOR_BASELINE242,9733
    CV_CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH    = CV_CAP_OPENNI_DEPTH_GENERATOR + CV_CAP_PROP_OPENNI_FOCAL_LENGTH,CV_CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH243,9846
    CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION    = CV_CAP_OPENNI_DEPTH_GENERATOR + CV_CAP_PROP_OPENNI_REGISTRATION,CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION244,9963
    CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON = CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION,CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON245,10080
    CV_CAP_OPENNI_IR_GENERATOR_PRESENT            = CV_CAP_OPENNI_IR_GENERATOR + CV_CAP_PROP_OPENNI_GENERATOR_PRESENT,CV_CAP_OPENNI_IR_GENERATOR_PRESENT246,10176
    CV_CAP_GSTREAMER_QUEUE_LENGTH           = 200, // default is 1CV_CAP_GSTREAMER_QUEUE_LENGTH249,10363
    CV_CAP_PROP_PVAPI_MULTICASTIP           = 300, // ip for anable multicast master mode. 0 for disable multicastCV_CAP_PROP_PVAPI_MULTICASTIP252,10444
    CV_CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE = 301, // FrameStartTriggerMode: Determines how a frame is initiatedCV_CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE253,10559
    CV_CAP_PROP_PVAPI_DECIMATIONHORIZONTAL  = 302, // Horizontal sub-sampling of the imageCV_CAP_PROP_PVAPI_DECIMATIONHORIZONTAL254,10672
    CV_CAP_PROP_PVAPI_DECIMATIONVERTICAL    = 303, // Vertical sub-sampling of the imageCV_CAP_PROP_PVAPI_DECIMATIONVERTICAL255,10763
    CV_CAP_PROP_PVAPI_BINNINGX              = 304, // Horizontal binning factorCV_CAP_PROP_PVAPI_BINNINGX256,10852
    CV_CAP_PROP_PVAPI_BINNINGY              = 305, // Vertical binning factorCV_CAP_PROP_PVAPI_BINNINGY257,10932
    CV_CAP_PROP_PVAPI_PIXELFORMAT           = 306, // Pixel formatCV_CAP_PROP_PVAPI_PIXELFORMAT258,11010
    CV_CAP_PROP_XI_DOWNSAMPLING                                 = 400, // Change image resolution by binning or skipping.CV_CAP_PROP_XI_DOWNSAMPLING261,11145
    CV_CAP_PROP_XI_DATA_FORMAT                                  = 401, // Output data format.CV_CAP_PROP_XI_DATA_FORMAT262,11267
    CV_CAP_PROP_XI_OFFSET_X                                     = 402, // Horizontal offset from the origin to the area of interest (in pixels).CV_CAP_PROP_XI_OFFSET_X263,11361
    CV_CAP_PROP_XI_OFFSET_Y                                     = 403, // Vertical offset from the origin to the area of interest (in pixels).CV_CAP_PROP_XI_OFFSET_Y264,11506
    CV_CAP_PROP_XI_TRG_SOURCE                                   = 404, // Defines source of trigger.CV_CAP_PROP_XI_TRG_SOURCE265,11649
    CV_CAP_PROP_XI_TRG_SOFTWARE                                 = 405, // Generates an internal trigger. PRM_TRG_SOURCE must be set to TRG_SOFTWARE.CV_CAP_PROP_XI_TRG_SOFTWARE266,11750
    CV_CAP_PROP_XI_GPI_SELECTOR                                 = 406, // Selects general purpose inputCV_CAP_PROP_XI_GPI_SELECTOR267,11899
    CV_CAP_PROP_XI_GPI_MODE                                     = 407, // Set general purpose input modeCV_CAP_PROP_XI_GPI_MODE268,12003
    CV_CAP_PROP_XI_GPI_LEVEL                                    = 408, // Get general purpose levelCV_CAP_PROP_XI_GPI_LEVEL269,12108
    CV_CAP_PROP_XI_GPO_SELECTOR                                 = 409, // Selects general purpose outputCV_CAP_PROP_XI_GPO_SELECTOR270,12208
    CV_CAP_PROP_XI_GPO_MODE                                     = 410, // Set general purpose output modeCV_CAP_PROP_XI_GPO_MODE271,12313
    CV_CAP_PROP_XI_LED_SELECTOR                                 = 411, // Selects camera signalling LEDCV_CAP_PROP_XI_LED_SELECTOR272,12419
    CV_CAP_PROP_XI_LED_MODE                                     = 412, // Define camera signalling LED functionalityCV_CAP_PROP_XI_LED_MODE273,12523
    CV_CAP_PROP_XI_MANUAL_WB                                    = 413, // Calculates White Balance(must be called during acquisition)CV_CAP_PROP_XI_MANUAL_WB274,12640
    CV_CAP_PROP_XI_AUTO_WB                                      = 414, // Automatic white balanceCV_CAP_PROP_XI_AUTO_WB275,12774
    CV_CAP_PROP_XI_AEAG                                         = 415, // Automatic exposure/gainCV_CAP_PROP_XI_AEAG276,12872
    CV_CAP_PROP_XI_EXP_PRIORITY                                 = 416, // Exposure priority (0.5 - exposure 50%, gain 50%).CV_CAP_PROP_XI_EXP_PRIORITY277,12970
    CV_CAP_PROP_XI_AE_MAX_LIMIT                                 = 417, // Maximum limit of exposure in AEAG procedureCV_CAP_PROP_XI_AE_MAX_LIMIT278,13094
    CV_CAP_PROP_XI_AG_MAX_LIMIT                                 = 418,  // Maximum limit of gain in AEAG procedureCV_CAP_PROP_XI_AG_MAX_LIMIT279,13212
    CV_CAP_PROP_XI_AEAG_LEVEL                                   = 419, // Average intensity of output signal AEAG should achieve(in %)CV_CAP_PROP_XI_AEAG_LEVEL280,13327
    CV_CAP_PROP_XI_TIMEOUT                                      = 420, // Image capture timeout in millisecondsCV_CAP_PROP_XI_TIMEOUT281,13462
    CV_CAP_PROP_XI_EXPOSURE                                     = 421, // Exposure time in microsecondsCV_CAP_PROP_XI_EXPOSURE282,13574
    CV_CAP_PROP_XI_EXPOSURE_BURST_COUNT                         = 422, // Sets the number of times of exposure in one frame.CV_CAP_PROP_XI_EXPOSURE_BURST_COUNT283,13678
    CV_CAP_PROP_XI_GAIN_SELECTOR                                = 423, // Gain selector for parameter Gain allows to select different type of gains.CV_CAP_PROP_XI_GAIN_SELECTOR284,13803
    CV_CAP_PROP_XI_GAIN                                         = 424, // Gain in dBCV_CAP_PROP_XI_GAIN285,13952
    CV_CAP_PROP_XI_DOWNSAMPLING_TYPE                            = 426, // Change image downsampling type.CV_CAP_PROP_XI_DOWNSAMPLING_TYPE286,14037
    CV_CAP_PROP_XI_BINNING_SELECTOR                             = 427, // Binning engine selector.CV_CAP_PROP_XI_BINNING_SELECTOR287,14143
    CV_CAP_PROP_XI_BINNING_VERTICAL                             = 428, // Vertical Binning - number of vertical photo-sensitive cells to combine together.CV_CAP_PROP_XI_BINNING_VERTICAL288,14242
    CV_CAP_PROP_XI_BINNING_HORIZONTAL                           = 429, // Horizontal Binning - number of horizontal photo-sensitive cells to combine together.CV_CAP_PROP_XI_BINNING_HORIZONTAL289,14397
    CV_CAP_PROP_XI_BINNING_PATTERN                              = 430, // Binning pattern type.CV_CAP_PROP_XI_BINNING_PATTERN290,14556
    CV_CAP_PROP_XI_DECIMATION_SELECTOR                          = 431, // Decimation engine selector.CV_CAP_PROP_XI_DECIMATION_SELECTOR291,14652
    CV_CAP_PROP_XI_DECIMATION_VERTICAL                          = 432, // Vertical Decimation - vertical sub-sampling of the image - reduces the vertical resolution of the image by the specified vertical decimation factor.CV_CAP_PROP_XI_DECIMATION_VERTICAL292,14754
    CV_CAP_PROP_XI_DECIMATION_HORIZONTAL                        = 433, // Horizontal Decimation - horizontal sub-sampling of the image - reduces the horizontal resolution of the image by the specified vertical decimation factor.CV_CAP_PROP_XI_DECIMATION_HORIZONTAL293,14977
    CV_CAP_PROP_XI_DECIMATION_PATTERN                           = 434, // Decimation pattern type.CV_CAP_PROP_XI_DECIMATION_PATTERN294,15206
    CV_CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR              = 587, // Selects which test pattern generator is controlled by the TestPattern feature.CV_CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR295,15305
    CV_CAP_PROP_XI_TEST_PATTERN                                 = 588, // Selects which test pattern type is generated by the selected generator.CV_CAP_PROP_XI_TEST_PATTERN296,15458
    CV_CAP_PROP_XI_IMAGE_DATA_FORMAT                            = 435, // Output data format.CV_CAP_PROP_XI_IMAGE_DATA_FORMAT297,15604
    CV_CAP_PROP_XI_SHUTTER_TYPE                                 = 436, // Change sensor shutter type(CMOS sensor).CV_CAP_PROP_XI_SHUTTER_TYPE298,15698
    CV_CAP_PROP_XI_SENSOR_TAPS                                  = 437, // Number of tapsCV_CAP_PROP_XI_SENSOR_TAPS299,15813
    CV_CAP_PROP_XI_AEAG_ROI_OFFSET_X                            = 439, // Automatic exposure/gain ROI offset XCV_CAP_PROP_XI_AEAG_ROI_OFFSET_X300,15902
    CV_CAP_PROP_XI_AEAG_ROI_OFFSET_Y                            = 440, // Automatic exposure/gain ROI offset YCV_CAP_PROP_XI_AEAG_ROI_OFFSET_Y301,16013
    CV_CAP_PROP_XI_AEAG_ROI_WIDTH                               = 441, // Automatic exposure/gain ROI WidthCV_CAP_PROP_XI_AEAG_ROI_WIDTH302,16124
    CV_CAP_PROP_XI_AEAG_ROI_HEIGHT                              = 442, // Automatic exposure/gain ROI HeightCV_CAP_PROP_XI_AEAG_ROI_HEIGHT303,16232
    CV_CAP_PROP_XI_BPC                                          = 445, // Correction of bad pixelsCV_CAP_PROP_XI_BPC304,16341
    CV_CAP_PROP_XI_WB_KR                                        = 448, // White balance red coefficientCV_CAP_PROP_XI_WB_KR305,16440
    CV_CAP_PROP_XI_WB_KG                                        = 449, // White balance green coefficientCV_CAP_PROP_XI_WB_KG306,16544
    CV_CAP_PROP_XI_WB_KB                                        = 450, // White balance blue coefficientCV_CAP_PROP_XI_WB_KB307,16650
    CV_CAP_PROP_XI_WIDTH                                        = 451, // Width of the Image provided by the device (in pixels).CV_CAP_PROP_XI_WIDTH308,16755
    CV_CAP_PROP_XI_HEIGHT                                       = 452, // Height of the Image provided by the device (in pixels).CV_CAP_PROP_XI_HEIGHT309,16884
    CV_CAP_PROP_XI_REGION_SELECTOR                              = 589, // Selects Region in Multiple ROI which parameters are set by width, height, ... ,region modeCV_CAP_PROP_XI_REGION_SELECTOR310,17014
    CV_CAP_PROP_XI_REGION_MODE                                  = 595, // Activates/deactivates Region selected by Region SelectorCV_CAP_PROP_XI_REGION_MODE311,17179
    CV_CAP_PROP_XI_LIMIT_BANDWIDTH                              = 459, // Set/get bandwidth(datarate)(in Megabits)CV_CAP_PROP_XI_LIMIT_BANDWIDTH312,17310
    CV_CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH                        = 460, // Sensor output data bit depth.CV_CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH313,17425
    CV_CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH                        = 461, // Device output data bit depth.CV_CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH314,17529
    CV_CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH                         = 462, // bitdepth of data returned by function xiGetImageCV_CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH315,17633
    CV_CAP_PROP_XI_OUTPUT_DATA_PACKING                          = 463, // Device output data packing (or grouping) enabled. Packing could be enabled if output_data_bit_depth > 8 and packing capability is available.CV_CAP_PROP_XI_OUTPUT_DATA_PACKING316,17756
    CV_CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE                     = 464, // Data packing type. Some cameras supports only specific packing type.CV_CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE317,17971
    CV_CAP_PROP_XI_IS_COOLED                                    = 465, // Returns 1 for cameras that support cooling.CV_CAP_PROP_XI_IS_COOLED318,18114
    CV_CAP_PROP_XI_COOLING                                      = 466, // Start camera cooling.CV_CAP_PROP_XI_COOLING319,18232
    CV_CAP_PROP_XI_TARGET_TEMP                                  = 467, // Set sensor target temperature for cooling.CV_CAP_PROP_XI_TARGET_TEMP320,18328
    CV_CAP_PROP_XI_CHIP_TEMP                                    = 468, // Camera sensor temperatureCV_CAP_PROP_XI_CHIP_TEMP321,18445
    CV_CAP_PROP_XI_HOUS_TEMP                                    = 469, // Camera housing tepmeratureCV_CAP_PROP_XI_HOUS_TEMP322,18545
    CV_CAP_PROP_XI_HOUS_BACK_SIDE_TEMP                          = 590, // Camera housing back side tepmeratureCV_CAP_PROP_XI_HOUS_BACK_SIDE_TEMP323,18646
    CV_CAP_PROP_XI_SENSOR_BOARD_TEMP                            = 596, // Camera sensor board temperatureCV_CAP_PROP_XI_SENSOR_BOARD_TEMP324,18757
    CV_CAP_PROP_XI_CMS                                          = 470, // Mode of color management system.CV_CAP_PROP_XI_CMS325,18863
    CV_CAP_PROP_XI_APPLY_CMS                                    = 471, // Enable applying of CMS profiles to xiGetImage (see XI_PRM_INPUT_CMS_PROFILE, XI_PRM_OUTPUT_CMS_PROFILE).CV_CAP_PROP_XI_APPLY_CMS326,18970
    CV_CAP_PROP_XI_IMAGE_IS_COLOR                               = 474, // Returns 1 for color cameras.CV_CAP_PROP_XI_IMAGE_IS_COLOR327,19149
    CV_CAP_PROP_XI_COLOR_FILTER_ARRAY                           = 475, // Returns color filter array type of RAW data.CV_CAP_PROP_XI_COLOR_FILTER_ARRAY328,19252
    CV_CAP_PROP_XI_GAMMAY                                       = 476, // Luminosity gammaCV_CAP_PROP_XI_GAMMAY329,19371
    CV_CAP_PROP_XI_GAMMAC                                       = 477, // Chromaticity gammaCV_CAP_PROP_XI_GAMMAC330,19462
    CV_CAP_PROP_XI_SHARPNESS                                    = 478, // Sharpness StrengthCV_CAP_PROP_XI_SHARPNESS331,19555
    CV_CAP_PROP_XI_CC_MATRIX_00                                 = 479, // Color Correction Matrix element [0][0]CV_CAP_PROP_XI_CC_MATRIX_00332,19648
    CV_CAP_PROP_XI_CC_MATRIX_01                                 = 480, // Color Correction Matrix element [0][1]CV_CAP_PROP_XI_CC_MATRIX_01333,19761
    CV_CAP_PROP_XI_CC_MATRIX_02                                 = 481, // Color Correction Matrix element [0][2]CV_CAP_PROP_XI_CC_MATRIX_02334,19874
    CV_CAP_PROP_XI_CC_MATRIX_03                                 = 482, // Color Correction Matrix element [0][3]CV_CAP_PROP_XI_CC_MATRIX_03335,19987
    CV_CAP_PROP_XI_CC_MATRIX_10                                 = 483, // Color Correction Matrix element [1][0]CV_CAP_PROP_XI_CC_MATRIX_10336,20100
    CV_CAP_PROP_XI_CC_MATRIX_11                                 = 484, // Color Correction Matrix element [1][1]CV_CAP_PROP_XI_CC_MATRIX_11337,20213
    CV_CAP_PROP_XI_CC_MATRIX_12                                 = 485, // Color Correction Matrix element [1][2]CV_CAP_PROP_XI_CC_MATRIX_12338,20326
    CV_CAP_PROP_XI_CC_MATRIX_13                                 = 486, // Color Correction Matrix element [1][3]CV_CAP_PROP_XI_CC_MATRIX_13339,20439
    CV_CAP_PROP_XI_CC_MATRIX_20                                 = 487, // Color Correction Matrix element [2][0]CV_CAP_PROP_XI_CC_MATRIX_20340,20552
    CV_CAP_PROP_XI_CC_MATRIX_21                                 = 488, // Color Correction Matrix element [2][1]CV_CAP_PROP_XI_CC_MATRIX_21341,20665
    CV_CAP_PROP_XI_CC_MATRIX_22                                 = 489, // Color Correction Matrix element [2][2]CV_CAP_PROP_XI_CC_MATRIX_22342,20778
    CV_CAP_PROP_XI_CC_MATRIX_23                                 = 490, // Color Correction Matrix element [2][3]CV_CAP_PROP_XI_CC_MATRIX_23343,20891
    CV_CAP_PROP_XI_CC_MATRIX_30                                 = 491, // Color Correction Matrix element [3][0]CV_CAP_PROP_XI_CC_MATRIX_30344,21004
    CV_CAP_PROP_XI_CC_MATRIX_31                                 = 492, // Color Correction Matrix element [3][1]CV_CAP_PROP_XI_CC_MATRIX_31345,21117
    CV_CAP_PROP_XI_CC_MATRIX_32                                 = 493, // Color Correction Matrix element [3][2]CV_CAP_PROP_XI_CC_MATRIX_32346,21230
    CV_CAP_PROP_XI_CC_MATRIX_33                                 = 494, // Color Correction Matrix element [3][3]CV_CAP_PROP_XI_CC_MATRIX_33347,21343
    CV_CAP_PROP_XI_DEFAULT_CC_MATRIX                            = 495, // Set default Color Correction MatrixCV_CAP_PROP_XI_DEFAULT_CC_MATRIX348,21456
    CV_CAP_PROP_XI_TRG_SELECTOR                                 = 498, // Selects the type of trigger.CV_CAP_PROP_XI_TRG_SELECTOR349,21566
    CV_CAP_PROP_XI_ACQ_FRAME_BURST_COUNT                        = 499, // Sets number of frames acquired by burst. This burst is used only if trigger is set to FrameBurstStartCV_CAP_PROP_XI_ACQ_FRAME_BURST_COUNT350,21669
    CV_CAP_PROP_XI_DEBOUNCE_EN                                  = 507, // Enable/Disable debounce to selected GPICV_CAP_PROP_XI_DEBOUNCE_EN351,21845
    CV_CAP_PROP_XI_DEBOUNCE_T0                                  = 508, // Debounce time (x * 10us)CV_CAP_PROP_XI_DEBOUNCE_T0352,21959
    CV_CAP_PROP_XI_DEBOUNCE_T1                                  = 509, // Debounce time (x * 10us)CV_CAP_PROP_XI_DEBOUNCE_T1353,22058
    CV_CAP_PROP_XI_DEBOUNCE_POL                                 = 510, // Debounce polarity (pol = 1 t0 - falling edge, t1 - rising edge)CV_CAP_PROP_XI_DEBOUNCE_POL354,22157
    CV_CAP_PROP_XI_LENS_MODE                                    = 511, // Status of lens control interface. This shall be set to XI_ON before any Lens operations.CV_CAP_PROP_XI_LENS_MODE355,22295
    CV_CAP_PROP_XI_LENS_APERTURE_VALUE                          = 512, // Current lens aperture value in stops. Examples: 2.8, 4, 5.6, 8, 11CV_CAP_PROP_XI_LENS_APERTURE_VALUE356,22458
    CV_CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE                    = 513, // Lens current focus movement value to be used by XI_PRM_LENS_FOCUS_MOVE in motor steps.CV_CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE357,22599
    CV_CAP_PROP_XI_LENS_FOCUS_MOVE                              = 514, // Moves lens focus motor by steps set in XI_PRM_LENS_FOCUS_MOVEMENT_VALUE.CV_CAP_PROP_XI_LENS_FOCUS_MOVE358,22760
    CV_CAP_PROP_XI_LENS_FOCUS_DISTANCE                          = 515, // Lens focus distance in cm.CV_CAP_PROP_XI_LENS_FOCUS_DISTANCE359,22907
    CV_CAP_PROP_XI_LENS_FOCAL_LENGTH                            = 516, // Lens focal distance in mm.CV_CAP_PROP_XI_LENS_FOCAL_LENGTH360,23008
    CV_CAP_PROP_XI_LENS_FEATURE_SELECTOR                        = 517, // Selects the current feature which is accessible by XI_PRM_LENS_FEATURE.CV_CAP_PROP_XI_LENS_FEATURE_SELECTOR361,23109
    CV_CAP_PROP_XI_LENS_FEATURE                                 = 518, // Allows access to lens feature value currently selected by XI_PRM_LENS_FEATURE_SELECTOR.CV_CAP_PROP_XI_LENS_FEATURE362,23255
    CV_CAP_PROP_XI_DEVICE_MODEL_ID                              = 521, // Return device model idCV_CAP_PROP_XI_DEVICE_MODEL_ID363,23417
    CV_CAP_PROP_XI_DEVICE_SN                                    = 522, // Return device serial numberCV_CAP_PROP_XI_DEVICE_SN364,23514
    CV_CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA                = 529, // The alpha channel of RGB32 output image format.CV_CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA365,23616
    CV_CAP_PROP_XI_IMAGE_PAYLOAD_SIZE                           = 530, // Buffer size in bytes sufficient for output image returned by xiGetImageCV_CAP_PROP_XI_IMAGE_PAYLOAD_SIZE366,23738
    CV_CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT                       = 531, // Current format of pixels on transport layer.CV_CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT367,23884
    CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ                         = 532, // Sensor clock frequency in Hz.CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ368,24003
    CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX                      = 533, // Sensor clock frequency index. Sensor with selected frequencies have possibility to set the frequency only by this index.CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX369,24107
    CV_CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT                  = 534, // Number of output channels from sensor used for data transfer.CV_CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT370,24302
    CV_CAP_PROP_XI_FRAMERATE                                    = 535, // Define framerate in HzCV_CAP_PROP_XI_FRAMERATE371,24438
    CV_CAP_PROP_XI_COUNTER_SELECTOR                             = 536, // Select counterCV_CAP_PROP_XI_COUNTER_SELECTOR372,24535
    CV_CAP_PROP_XI_COUNTER_VALUE                                = 537, // Counter statusCV_CAP_PROP_XI_COUNTER_VALUE373,24624
    CV_CAP_PROP_XI_ACQ_TIMING_MODE                              = 538, // Type of sensor frames timing.CV_CAP_PROP_XI_ACQ_TIMING_MODE374,24713
    CV_CAP_PROP_XI_AVAILABLE_BANDWIDTH                          = 539, // Calculate and return available interface bandwidth(int Megabits)CV_CAP_PROP_XI_AVAILABLE_BANDWIDTH375,24817
    CV_CAP_PROP_XI_BUFFER_POLICY                                = 540, // Data move policyCV_CAP_PROP_XI_BUFFER_POLICY376,24956
    CV_CAP_PROP_XI_LUT_EN                                       = 541, // Activates LUT.CV_CAP_PROP_XI_LUT_EN377,25047
    CV_CAP_PROP_XI_LUT_INDEX                                    = 542, // Control the index (offset) of the coefficient to access in the LUT.CV_CAP_PROP_XI_LUT_INDEX378,25136
    CV_CAP_PROP_XI_LUT_VALUE                                    = 543, // Value at entry LUTIndex of the LUTCV_CAP_PROP_XI_LUT_VALUE379,25278
    CV_CAP_PROP_XI_TRG_DELAY                                    = 544, // Specifies the delay in microseconds (us) to apply after the trigger reception before activating it.CV_CAP_PROP_XI_TRG_DELAY380,25387
    CV_CAP_PROP_XI_TS_RST_MODE                                  = 545, // Defines how time stamp reset engine will be armedCV_CAP_PROP_XI_TS_RST_MODE381,25561
    CV_CAP_PROP_XI_TS_RST_SOURCE                                = 546, // Defines which source will be used for timestamp reset. Writing this parameter will trigger settings of engine (arming)CV_CAP_PROP_XI_TS_RST_SOURCE382,25685
    CV_CAP_PROP_XI_IS_DEVICE_EXIST                              = 547, // Returns 1 if camera connected and works properly.CV_CAP_PROP_XI_IS_DEVICE_EXIST383,25878
    CV_CAP_PROP_XI_ACQ_BUFFER_SIZE                              = 548, // Acquisition buffer size in buffer_size_unit. Default bytes.CV_CAP_PROP_XI_ACQ_BUFFER_SIZE384,26002
    CV_CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT                         = 549, // Acquisition buffer size unit in bytes. Default 1. E.g. Value 1024 means that buffer_size is in KiBytesCV_CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT385,26136
    CV_CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE                    = 550, // Acquisition transport buffer size in bytesCV_CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE386,26313
    CV_CAP_PROP_XI_BUFFERS_QUEUE_SIZE                           = 551, // Queue of field/frame buffersCV_CAP_PROP_XI_BUFFERS_QUEUE_SIZE387,26430
    CV_CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT                  = 552, // Number of buffers to commit to low levelCV_CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT388,26533
    CV_CAP_PROP_XI_RECENT_FRAME                                 = 553, // GetImage returns most recent frameCV_CAP_PROP_XI_RECENT_FRAME389,26648
    CV_CAP_PROP_XI_DEVICE_RESET                                 = 554, // Resets the camera to default state.CV_CAP_PROP_XI_DEVICE_RESET390,26757
    CV_CAP_PROP_XI_COLUMN_FPN_CORRECTION                        = 555, // Correction of column FPNCV_CAP_PROP_XI_COLUMN_FPN_CORRECTION391,26867
    CV_CAP_PROP_XI_ROW_FPN_CORRECTION                           = 591, // Correction of row FPNCV_CAP_PROP_XI_ROW_FPN_CORRECTION392,26966
    CV_CAP_PROP_XI_SENSOR_MODE                                  = 558, // Current sensor mode. Allows to select sensor mode by one integer. Setting of this parameter affects: image dimensions and downsampling.CV_CAP_PROP_XI_SENSOR_MODE393,27062
    CV_CAP_PROP_XI_HDR                                          = 559, // Enable High Dynamic Range feature.CV_CAP_PROP_XI_HDR394,27272
    CV_CAP_PROP_XI_HDR_KNEEPOINT_COUNT                          = 560, // The number of kneepoints in the PWLR.CV_CAP_PROP_XI_HDR_KNEEPOINT_COUNT395,27381
    CV_CAP_PROP_XI_HDR_T1                                       = 561, // position of first kneepoint(in % of XI_PRM_EXPOSURE)CV_CAP_PROP_XI_HDR_T1396,27493
    CV_CAP_PROP_XI_HDR_T2                                       = 562, // position of second kneepoint (in % of XI_PRM_EXPOSURE)CV_CAP_PROP_XI_HDR_T2397,27620
    CV_CAP_PROP_XI_KNEEPOINT1                                   = 563, // value of first kneepoint (% of sensor saturation)CV_CAP_PROP_XI_KNEEPOINT1398,27749
    CV_CAP_PROP_XI_KNEEPOINT2                                   = 564, // value of second kneepoint (% of sensor saturation)CV_CAP_PROP_XI_KNEEPOINT2399,27873
    CV_CAP_PROP_XI_IMAGE_BLACK_LEVEL                            = 565, // Last image black level counts. Can be used for Offline processing to recall it.CV_CAP_PROP_XI_IMAGE_BLACK_LEVEL400,27998
    CV_CAP_PROP_XI_HW_REVISION                                  = 571, // Returns hardware revision number.CV_CAP_PROP_XI_HW_REVISION401,28152
    CV_CAP_PROP_XI_DEBUG_LEVEL                                  = 572, // Set debug levelCV_CAP_PROP_XI_DEBUG_LEVEL402,28260
    CV_CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION                   = 573, // Automatic bandwidth calculation,CV_CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION403,28350
    CV_CAP_PROP_XI_FFS_FILE_ID                                  = 594, // File number.CV_CAP_PROP_XI_FFS_FILE_ID404,28457
    CV_CAP_PROP_XI_FFS_FILE_SIZE                                = 580, // Size of file.CV_CAP_PROP_XI_FFS_FILE_SIZE405,28544
    CV_CAP_PROP_XI_FREE_FFS_SIZE                                = 581, // Size of free camera FFS.CV_CAP_PROP_XI_FREE_FFS_SIZE406,28632
    CV_CAP_PROP_XI_USED_FFS_SIZE                                = 582, // Size of used camera FFS.CV_CAP_PROP_XI_USED_FFS_SIZE407,28731
    CV_CAP_PROP_XI_FFS_ACCESS_KEY                               = 583, // Setting of key enables file operations on some cameras.CV_CAP_PROP_XI_FFS_ACCESS_KEY408,28830
    CV_CAP_PROP_XI_SENSOR_FEATURE_SELECTOR                      = 585, // Selects the current feature which is accessible by XI_PRM_SENSOR_FEATURE_VALUE.CV_CAP_PROP_XI_SENSOR_FEATURE_SELECTOR409,28960
    CV_CAP_PROP_XI_SENSOR_FEATURE_VALUE                         = 586, // Allows access to sensor feature value currently selected by XI_PRM_SENSOR_FEATURE_SELECTOR.CV_CAP_PROP_XI_SENSOR_FEATURE_VALUE410,29114
    CV_CAP_PROP_ANDROID_FLASH_MODE = 8001,CV_CAP_PROP_ANDROID_FLASH_MODE414,29320
    CV_CAP_PROP_ANDROID_FOCUS_MODE = 8002,CV_CAP_PROP_ANDROID_FOCUS_MODE415,29363
    CV_CAP_PROP_ANDROID_WHITE_BALANCE = 8003,CV_CAP_PROP_ANDROID_WHITE_BALANCE416,29406
    CV_CAP_PROP_ANDROID_ANTIBANDING = 8004,CV_CAP_PROP_ANDROID_ANTIBANDING417,29452
    CV_CAP_PROP_ANDROID_FOCAL_LENGTH = 8005,CV_CAP_PROP_ANDROID_FOCAL_LENGTH418,29496
    CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_NEAR = 8006,CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_NEAR419,29541
    CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_OPTIMAL = 8007,CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_OPTIMAL420,29593
    CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_FAR = 8008,CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_FAR421,29648
    CV_CAP_PROP_ANDROID_EXPOSE_LOCK = 8009,CV_CAP_PROP_ANDROID_EXPOSE_LOCK422,29699
    CV_CAP_PROP_ANDROID_WHITEBALANCE_LOCK = 8010,CV_CAP_PROP_ANDROID_WHITEBALANCE_LOCK423,29743
    CV_CAP_PROP_IOS_DEVICE_FOCUS = 9001,CV_CAP_PROP_IOS_DEVICE_FOCUS426,29864
    CV_CAP_PROP_IOS_DEVICE_EXPOSURE = 9002,CV_CAP_PROP_IOS_DEVICE_EXPOSURE427,29905
    CV_CAP_PROP_IOS_DEVICE_FLASH = 9003,CV_CAP_PROP_IOS_DEVICE_FLASH428,29949
    CV_CAP_PROP_IOS_DEVICE_WHITEBALANCE = 9004,CV_CAP_PROP_IOS_DEVICE_WHITEBALANCE429,29990
    CV_CAP_PROP_IOS_DEVICE_TORCH = 9005,CV_CAP_PROP_IOS_DEVICE_TORCH430,30038
    CV_CAP_PROP_GIGA_FRAME_OFFSET_X = 10001,CV_CAP_PROP_GIGA_FRAME_OFFSET_X434,30241
    CV_CAP_PROP_GIGA_FRAME_OFFSET_Y = 10002,CV_CAP_PROP_GIGA_FRAME_OFFSET_Y435,30286
    CV_CAP_PROP_GIGA_FRAME_WIDTH_MAX = 10003,CV_CAP_PROP_GIGA_FRAME_WIDTH_MAX436,30331
    CV_CAP_PROP_GIGA_FRAME_HEIGH_MAX = 10004,CV_CAP_PROP_GIGA_FRAME_HEIGH_MAX437,30377
    CV_CAP_PROP_GIGA_FRAME_SENS_WIDTH = 10005,CV_CAP_PROP_GIGA_FRAME_SENS_WIDTH438,30423
    CV_CAP_PROP_GIGA_FRAME_SENS_HEIGH = 10006,CV_CAP_PROP_GIGA_FRAME_SENS_HEIGH439,30470
    CV_CAP_PROP_INTELPERC_PROFILE_COUNT               = 11001,CV_CAP_PROP_INTELPERC_PROFILE_COUNT441,30518
    CV_CAP_PROP_INTELPERC_PROFILE_IDX                 = 11002,CV_CAP_PROP_INTELPERC_PROFILE_IDX442,30581
    CV_CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE  = 11003,CV_CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE443,30644
    CV_CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE      = 11004,CV_CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE444,30707
    CV_CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD  = 11005,CV_CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD445,30770
    CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ     = 11006,CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ446,30833
    CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT     = 11007,CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT447,30896
    CV_CAP_INTELPERC_DEPTH_GENERATOR = 1 << 29,CV_CAP_INTELPERC_DEPTH_GENERATOR450,30986
    CV_CAP_INTELPERC_IMAGE_GENERATOR = 1 << 28,CV_CAP_INTELPERC_IMAGE_GENERATOR451,31034
    CV_CAP_INTELPERC_GENERATORS_MASK = CV_CAP_INTELPERC_DEPTH_GENERATOR + CV_CAP_INTELPERC_IMAGE_GENERATORCV_CAP_INTELPERC_GENERATORS_MASK452,31082
    CV_CAP_MODE_BGR  = 0, // BGR24 (default)CV_CAP_MODE_BGR459,31301
    CV_CAP_MODE_RGB  = 1, // RGB24CV_CAP_MODE_RGB460,31346
    CV_CAP_MODE_GRAY = 2, // Y8CV_CAP_MODE_GRAY461,31381
    CV_CAP_MODE_YUYV = 3  // YUYVCV_CAP_MODE_YUYV462,31413
    CV_CAP_OPENNI_DEPTH_MAP                 = 0, // Depth values in mm (CV_16UC1)CV_CAP_OPENNI_DEPTH_MAP468,31498
    CV_CAP_OPENNI_POINT_CLOUD_MAP           = 1, // XYZ in meters (CV_32FC3)CV_CAP_OPENNI_POINT_CLOUD_MAP469,31580
    CV_CAP_OPENNI_DISPARITY_MAP             = 2, // Disparity in pixels (CV_8UC1)CV_CAP_OPENNI_DISPARITY_MAP470,31657
    CV_CAP_OPENNI_DISPARITY_MAP_32F         = 3, // Disparity in pixels (CV_32FC1)CV_CAP_OPENNI_DISPARITY_MAP_32F471,31739
    CV_CAP_OPENNI_VALID_DEPTH_MASK          = 4, // CV_8UC1CV_CAP_OPENNI_VALID_DEPTH_MASK472,31822
    CV_CAP_OPENNI_BGR_IMAGE                 = 5,CV_CAP_OPENNI_BGR_IMAGE475,31927
    CV_CAP_OPENNI_GRAY_IMAGE                = 6,CV_CAP_OPENNI_GRAY_IMAGE476,31976
    CV_CAP_OPENNI_IR_IMAGE                  = 7CV_CAP_OPENNI_IR_IMAGE479,32069
    CV_CAP_OPENNI_VGA_30HZ     = 0,CV_CAP_OPENNI_VGA_30HZ485,32180
    CV_CAP_OPENNI_SXGA_15HZ    = 1,CV_CAP_OPENNI_SXGA_15HZ486,32216
    CV_CAP_OPENNI_SXGA_30HZ    = 2,CV_CAP_OPENNI_SXGA_30HZ487,32252
    CV_CAP_OPENNI_QVGA_30HZ    = 3,CV_CAP_OPENNI_QVGA_30HZ488,32288
    CV_CAP_OPENNI_QVGA_60HZ    = 4CV_CAP_OPENNI_QVGA_60HZ489,32324
    CV_CAP_INTELPERC_DEPTH_MAP              = 0, // Each pixel is a 16-bit integer. The value indicates the distance from an object to the camera's XY plane or the Cartesian depth.CV_CAP_INTELPERC_DEPTH_MAP494,32370
    CV_CAP_INTELPERC_UVDEPTH_MAP            = 1, // Each pixel contains two 32-bit floating point values in the range of 0-1, representing the mapping of depth coordinates to the color coordinates.CV_CAP_INTELPERC_UVDEPTH_MAP495,32551
    CV_CAP_INTELPERC_IR_MAP                 = 2, // Each pixel is a 16-bit integer. The value indicates the intensity of the reflected laser beam.CV_CAP_INTELPERC_IR_MAP496,32749
    CV_CAP_INTELPERC_IMAGE                  = 3CV_CAP_INTELPERC_IMAGE497,32896
    CV_CAP_PROP_GPHOTO2_PREVIEW           = 17001, // Capture only preview from liveview mode.CV_CAP_PROP_GPHOTO2_PREVIEW505,33175
    CV_CAP_PROP_GPHOTO2_WIDGET_ENUMERATE  = 17002, // Readonly, returns (const char *).CV_CAP_PROP_GPHOTO2_WIDGET_ENUMERATE506,33270
    CV_CAP_PROP_GPHOTO2_RELOAD_CONFIG     = 17003, // Trigger, only by set. Reload camera settings.CV_CAP_PROP_GPHOTO2_RELOAD_CONFIG507,33358
    CV_CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE  = 17004, // Reload all settings on set.CV_CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE508,33458
    CV_CAP_PROP_GPHOTO2_COLLECT_MSGS      = 17005, // Collect messages with details.CV_CAP_PROP_GPHOTO2_COLLECT_MSGS509,33540
    CV_CAP_PROP_GPHOTO2_FLUSH_MSGS        = 17006, // Readonly, returns (const char *).CV_CAP_PROP_GPHOTO2_FLUSH_MSGS510,33625
    CV_CAP_PROP_SPEED                     = 17007, // Exposure speed. Can be readonly, depends on camera program.CV_CAP_PROP_SPEED511,33713
    CV_CAP_PROP_APERTURE                  = 17008, // Aperture. Can be readonly, depends on camera program.CV_CAP_PROP_APERTURE512,33827
    CV_CAP_PROP_EXPOSUREPROGRAM           = 17009, // Camera exposure program.CV_CAP_PROP_EXPOSUREPROGRAM513,33935
    CV_CAP_PROP_VIEWFINDER                = 17010  // Enter liveview mode.CV_CAP_PROP_VIEWFINDER514,34014
CVAPI(int)    cvGetCaptureDomain( CvCapture* capture);capture528,34463
typedef struct CvVideoWriter CvVideoWriter;CvVideoWriter534,34601
#define CV_FOURCC_MACRO(CV_FOURCC_MACRO537,34719
CV_INLINE int CV_FOURCC(char c1, char c2, char c3, char c4)CV_FOURCC547,35212
#define CV_FOURCC_PROMPT CV_FOURCC_PROMPT553,35368
#define CV_FOURCC_DEFAULT CV_FOURCC_DEFAULT555,35454
CVAPI(void) cvReleaseVideoWriter( CvVideoWriter** writer );writer569,35930
#define cvCaptureFromCAM cvCaptureFromCAM574,36127
#define cvCaptureFromFile cvCaptureFromFile575,36227
#define cvCaptureFromAVI cvCaptureFromAVI576,36325
#define cvCreateAVIWriter cvCreateAVIWriter577,36423
#define cvWriteToAVI cvWriteToAVI578,36521
